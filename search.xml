<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>MAC录制鼠标事件脚本</title>
      <link href="/2020/04/03/macjscrpt/"/>
      <url>/2020/04/03/macjscrpt/</url>
      
        <content type="html"><![CDATA[<h4 id="录制鼠标事件脚本"><a href="#录制鼠标事件脚本" class="headerlink" title="录制鼠标事件脚本"></a>录制鼠标事件脚本</h4><p><img src="/2020/04/03/macjscrpt/test007.gif" alt="test007"></p><p>用到自己封装好的工具  <a href="https://ifeiyv.cn/tags/代码模拟键盘/" target="_blank" rel="noopener">MAC代码模拟鼠标和键盘事件</a></p><blockquote><p>  <strong>var</strong> timeStamp:CLongLong = -1  //保存上次时间戳</p><p>   <strong>var</strong> isStart:Bool = <strong>false</strong>  //保存是否开始录制脚本</p><p>  <strong>var</strong> events:[CGEvent] = <a href>CGEvent</a> //保存所有鼠标事件</p><p>  <strong>var</strong> times:[Int] = <a href>Int</a> //保存鼠标事件事件间隔（完美时间还原脚本）</p></blockquote><h5 id="1-录制脚本"><a href="#1-录制脚本" class="headerlink" title="1.录制脚本"></a>1.录制脚本</h5><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">override</span> <span class="function"><span class="keyword">func</span> <span class="title">viewDidLoad</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="keyword">super</span>.viewDidLoad()</span><br><span class="line">       </span><br><span class="line">        monitor =  <span class="type">NSEvent</span>.addGlobalMonitorForEvents(matching:[.mouseMoved,.leftMouseDown,.leftMouseUp,.leftMouseDragged,.rightMouseDown,.rightMouseUp,.rightMouseDragged,.scrollWheel]) &#123; [<span class="keyword">weak</span> <span class="keyword">self</span>](event) <span class="keyword">in</span></span><br><span class="line">            <span class="keyword">self</span>?.label.cell?.title = <span class="string">"x=\(String(format: "</span>%.0f<span class="string">", event.locationInWindow.x))\ny=\(String(format: "</span>%.0f<span class="string">", ScreenHeight - event.locationInWindow.y))"</span></span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">self</span>!.isStart)&#123;<span class="comment">//是否开始录制脚本</span></span><br><span class="line">                <span class="keyword">self</span>!.events.append(event.cgEvent!)</span><br><span class="line">                <span class="keyword">if</span>(<span class="keyword">self</span>!.events.<span class="built_in">count</span> &gt; <span class="number">1</span>)&#123;</span><br><span class="line">                    <span class="keyword">self</span>!.times.append(<span class="type">Int</span>(<span class="type">Date</span>().milliStamp - <span class="keyword">self</span>!.timeStamp))</span><br><span class="line">                    <span class="keyword">self</span>!.timeStamp = <span class="type">Date</span>().milliStamp</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    <span class="keyword">self</span>!.times.append(<span class="number">10</span>)</span><br><span class="line">                    <span class="keyword">self</span>!.timeStamp = <span class="type">Date</span>().milliStamp</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h5 id="2-播放脚本"><a href="#2-播放脚本" class="headerlink" title="2.播放脚本"></a>2.播放脚本</h5><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span>  <span class="title">playEvent</span><span class="params">()</span></span>&#123;</span><br><span class="line">      <span class="keyword">var</span> index = <span class="number">0</span></span><br><span class="line">      <span class="keyword">for</span> event <span class="keyword">in</span> events &#123;</span><br><span class="line">          <span class="keyword">if</span>(index &gt; times.<span class="built_in">count</span> - <span class="number">1</span>)&#123;</span><br><span class="line">             <span class="type">Thread</span>.sleep(forTimeInterval: <span class="type">TimeInterval</span>(<span class="number">0.01</span>))</span><br><span class="line">          &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">             <span class="type">Thread</span>.sleep(forTimeInterval: <span class="type">TimeInterval</span>( <span class="type">Double</span>(times[index]) / <span class="number">1000.0</span>))</span><br><span class="line">          &#125;</span><br><span class="line">      index += <span class="number">1</span>;</span><br><span class="line">      event.post(tap: .cghidEventTap)</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Mac </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 脚本录制 </tag>
            
            <tag> 鼠标事件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>flutter输入框键盘弹起被遮挡问题</title>
      <link href="/2020/04/03/flutter%E8%BE%93%E5%85%A5%E6%A1%86%E9%94%AE%E7%9B%98%E5%BC%B9%E8%B5%B7%E9%81%AE%E6%8C%A1%E9%97%AE%E9%A2%98/"/>
      <url>/2020/04/03/flutter%E8%BE%93%E5%85%A5%E6%A1%86%E9%94%AE%E7%9B%98%E5%BC%B9%E8%B5%B7%E9%81%AE%E6%8C%A1%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h4 id="解决键盘弹起遮挡问题"><a href="#解决键盘弹起遮挡问题" class="headerlink" title="解决键盘弹起遮挡问题"></a>解决键盘弹起遮挡问题</h4><ul><li>Scaffold的resizeToAvoidBottomPadding属性（v1.1.9之后已废弃）</li><li>resizeToAvoidBottomInset：为true键盘弹起输入框会自动上移，为false不移动，如果输入框靠下，有可能被遮挡住。默认为true</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/// <span class="markdown">This flag is deprecated, please use [resizeToAvoidBottomInset]</span></span></span><br><span class="line"><span class="comment">/// <span class="markdown">instead.</span></span></span><br><span class="line"><span class="comment">///</span></span><br><span class="line"><span class="comment">/// <span class="markdown">Originally the name referred [MediaQueryData.padding]. Now it refers</span></span></span><br><span class="line"><span class="comment">/// <span class="markdown">[MediaQueryData.viewInsets], so using [resizeToAvoidBottomInset]</span></span></span><br><span class="line"><span class="comment">/// <span class="markdown">should be clearer to readers.</span></span></span><br><span class="line"><span class="meta">@Deprecated</span>(</span><br><span class="line">  <span class="string">'Use resizeToAvoidBottomInset to specify if the body should resize when the keyboard appears. '</span></span><br><span class="line">  <span class="string">'This feature was deprecated after v1.1.9.'</span></span><br><span class="line">)</span><br><span class="line"><span class="keyword">final</span> <span class="built_in">bool</span> resizeToAvoidBottomPadding;</span><br><span class="line"></span><br><span class="line"><span class="comment">/// <span class="markdown">If true the [body] and the scaffold's floating widgets should size</span></span></span><br><span class="line"><span class="comment">/// <span class="markdown">themselves to avoid the onscreen keyboard whose height is defined by the</span></span></span><br><span class="line"><span class="comment">/// <span class="markdown">ambient [MediaQuery]'s [MediaQueryData.viewInsets] <span class="code">`bottom`</span> property.</span></span></span><br><span class="line"><span class="comment">///</span></span><br><span class="line"><span class="comment">/// <span class="markdown">For example, if there is an onscreen keyboard displayed above the</span></span></span><br><span class="line"><span class="comment">/// <span class="markdown">scaffold, the body can be resized to avoid overlapping the keyboard, which</span></span></span><br><span class="line"><span class="comment">/// <span class="markdown">prevents widgets inside the body from being obscured by the keyboard.</span></span></span><br><span class="line"><span class="comment">///</span></span><br><span class="line"><span class="comment">/// <span class="markdown">Defaults to true.</span></span></span><br><span class="line"><span class="keyword">final</span> <span class="built_in">bool</span> resizeToAvoidBottomInset;</span><br></pre></td></tr></table></figure><ul><li>如果以上配置报错（键盘弹起，布局溢出）界面布局可以用滚动容器承载。eg:把当前界面放到SingleChildScrollView上</li></ul>]]></content>
      
      
      <categories>
          
          <category> Flutter </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Flutter </tag>
            
            <tag> 键盘遮挡 </tag>
            
            <tag> TextField </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flutter创建项目命令</title>
      <link href="/2020/04/02/Flutter%E5%88%9B%E5%BB%BA%E9%A1%B9%E7%9B%AE%E5%91%BD%E4%BB%A4/"/>
      <url>/2020/04/02/Flutter%E5%88%9B%E5%BB%BA%E9%A1%B9%E7%9B%AE%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h4 id="创建flutter项目命令"><a href="#创建flutter项目命令" class="headerlink" title="创建flutter项目命令"></a>创建flutter项目命令</h4><blockquote><p>进入到要创建项目的位置，在当前目录下创建项目名称为mydemo的项目</p></blockquote><ul><li><p>基本默认创建  flutter create  mydemo</p></li><li><p>创建一个 iOS 基于 Swift  ，Android基于Java的flutter项目</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flutter create  --ios-language swift --android-language kotlin mydemo</span><br></pre></td></tr></table></figure></li><li><p>创建一个 iOS 基于 Swift  ，Android基于kotlin的flutter项目</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flutter create  --ios-language swift --android-language kotlin mydemo</span><br></pre></td></tr></table></figure></li><li><p>创建一个 iOS 基于 OC  ，Android基于kotlin的flutter项目</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flutter create  --ios-language objc --android-language kotlin mydemo</span><br></pre></td></tr></table></figure></li><li><p>创建一个 iOS 基于 OC  ，Android基于java的flutter项目</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flutter create  --ios-language objc --android-language java mydemo</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Flutter </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Flutter命令 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MAC 模拟鼠标和键盘事件</title>
      <link href="/2020/03/30/SimulationMouseKeyboard/"/>
      <url>/2020/03/30/SimulationMouseKeyboard/</url>
      
        <content type="html"><![CDATA[<h4 id="代码模拟鼠标和键盘事件"><a href="#代码模拟鼠标和键盘事件" class="headerlink" title="代码模拟鼠标和键盘事件"></a>代码模拟鼠标和键盘事件</h4><blockquote><p>网上搜索了一下，基本上都是很早的代码。原理虽然一样，但是代码已经进行多次改版了，特别是现在的Swift</p></blockquote><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  FyMKUtils.swift</span></span><br><span class="line"><span class="comment">//  SimulationMouseKeyboard</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  Created by l on 2020/3/30.</span></span><br><span class="line"><span class="comment">//  Copyright © 2020 ifeiyv. All rights reserved.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> Cocoa</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FyMKUtils</span>: <span class="title">NSObject</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//MARK:移动鼠标到坐标位置</span></span><br><span class="line">    <span class="keyword">open</span> <span class="class"><span class="keyword">class</span> <span class="title">func</span> <span class="title">mouseMove</span>(<span class="title">point</span>:<span class="title">CGPoint</span>,<span class="title">button</span>:<span class="title">CGMouseButton</span> = .<span class="title">left</span>)</span>&#123;</span><br><span class="line">        postMouseEvent(button: button, type: .mouseMoved, point: point);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//MARK:左键单击</span></span><br><span class="line">    <span class="keyword">open</span> <span class="class"><span class="keyword">class</span> <span class="title">func</span> <span class="title">leftClick</span>(<span class="title">point</span>: <span class="title">CGPoint</span>)</span></span><br><span class="line"><span class="class">    </span>&#123;</span><br><span class="line">        click(point: point, button: .<span class="keyword">left</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//MARK:左键双击</span></span><br><span class="line">    <span class="keyword">open</span> <span class="class"><span class="keyword">class</span> <span class="title">func</span> <span class="title">leftDoubleClick</span>(<span class="title">point</span>: <span class="title">CGPoint</span>)</span></span><br><span class="line"><span class="class">    </span>&#123;</span><br><span class="line">        doubleClick(point: point, button: .<span class="keyword">left</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//MARK:左键拖拽</span></span><br><span class="line">    <span class="comment">///point : 初始位置坐标</span></span><br><span class="line">    <span class="comment">///toPoint : 拖拽到的目的位置坐标</span></span><br><span class="line">    <span class="keyword">open</span> <span class="class"><span class="keyword">class</span> <span class="title">func</span> <span class="title">leftMouseDragged</span>(<span class="title">point</span>:<span class="title">CGPoint</span>,<span class="title">toPoint</span>:<span class="title">CGPoint</span>)</span>&#123;</span><br><span class="line">        mouseDragged(point:point,toPoint:toPoint,button:.<span class="keyword">left</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//MARK:右键单击</span></span><br><span class="line">    <span class="keyword">open</span> <span class="class"><span class="keyword">class</span> <span class="title">func</span> <span class="title">rightClick</span>(<span class="title">point</span>: <span class="title">CGPoint</span>)</span></span><br><span class="line"><span class="class">    </span>&#123;</span><br><span class="line">        click(point: point, button: .<span class="keyword">right</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//MARK:右键双击</span></span><br><span class="line">    <span class="keyword">open</span> <span class="class"><span class="keyword">class</span> <span class="title">func</span> <span class="title">rightDoubleClick</span>(<span class="title">point</span>: <span class="title">CGPoint</span>)</span></span><br><span class="line"><span class="class">    </span>&#123;</span><br><span class="line">        doubleClick(point: point, button: .<span class="keyword">right</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//MARK:右键拖拽</span></span><br><span class="line">    <span class="comment">///point : 初始位置坐标</span></span><br><span class="line">    <span class="comment">///toPoint : 拖拽到的目的位置坐标</span></span><br><span class="line">    <span class="keyword">open</span> <span class="class"><span class="keyword">class</span> <span class="title">func</span> <span class="title">rightMouseDragged</span>(<span class="title">point</span>:<span class="title">CGPoint</span>,<span class="title">toPoint</span>:<span class="title">CGPoint</span>)</span>&#123;</span><br><span class="line">        mouseDragged(point:point,toPoint:toPoint,button:.<span class="keyword">right</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//MARK:鼠标从一个坐标移动到另一个坐标</span></span><br><span class="line">    <span class="keyword">open</span> <span class="class"><span class="keyword">class</span> <span class="title">func</span> <span class="title">mouseMove</span>(<span class="title">point</span>:<span class="title">CGPoint</span>, <span class="title">toPoint</span>:<span class="title">CGPoint</span>)</span>&#123;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//拖到的目的位置x大于原始位置的X坐标</span></span><br><span class="line">        <span class="keyword">let</span> toMaxX:<span class="type">Bool</span> = toPoint.x - point.x &gt; <span class="number">0</span></span><br><span class="line">        <span class="comment">//拖到的目的位置y大于原始位置的Y坐标</span></span><br><span class="line">        <span class="keyword">let</span> toMaxY:<span class="type">Bool</span> = toPoint.y - point.y &gt; <span class="number">0</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">var</span> tempPointY = point.y</span><br><span class="line">        <span class="keyword">var</span> tempPointX = point.x</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        <span class="keyword">let</span> blockOperation = <span class="type">BlockOperation</span>()</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//1.拖拽目的坐标的Y坐标</span></span><br><span class="line">        blockOperation.addExecutionBlock &#123;</span><br><span class="line">            <span class="keyword">while</span>  toMaxY ? (toPoint.y &gt; tempPointY) : (toPoint.y &lt; tempPointY)&#123;</span><br><span class="line">                toMaxY ?  (tempPointY += <span class="number">1</span>) : (tempPointY -= <span class="number">1</span>)</span><br><span class="line">                postMouseEvent(button: .<span class="keyword">left</span>, type: .mouseMoved, point: <span class="type">CGPoint</span>(x: tempPointX, y: tempPointY),clickCount: <span class="number">1</span>);</span><br><span class="line">                <span class="type">Thread</span>.sleep(forTimeInterval: <span class="number">0.001</span>)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//2.拖拽目的坐标的X坐标</span></span><br><span class="line">        blockOperation.addExecutionBlock &#123;</span><br><span class="line">            <span class="keyword">while</span> toMaxX ? (toPoint.x &gt; tempPointX) : (toPoint.x &lt; tempPointX) &#123;</span><br><span class="line">                toMaxX ? (tempPointX += <span class="number">1</span>) : (tempPointX -= <span class="number">1</span>)</span><br><span class="line">                postMouseEvent(button: .<span class="keyword">left</span>, type: .mouseMoved, point: <span class="type">CGPoint</span>(x: tempPointX, y: tempPointY),clickCount: <span class="number">1</span>);</span><br><span class="line">                <span class="type">Thread</span>.sleep(forTimeInterval: <span class="number">0.001</span>)</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//开始执行Operation</span></span><br><span class="line">        blockOperation.start()</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    <span class="comment">//MARK:拖拽鼠标事件</span></span><br><span class="line">    <span class="keyword">open</span> <span class="class"><span class="keyword">class</span> <span class="title">func</span> <span class="title">mouseDragged</span>(<span class="title">point</span>:<span class="title">CGPoint</span>,<span class="title">toPoint</span>:<span class="title">CGPoint</span>,<span class="title">button</span>:<span class="title">CGMouseButton</span>)</span>&#123;</span><br><span class="line">        <span class="comment">//拖到的目的位置x大于原始位置的X坐标</span></span><br><span class="line">        <span class="keyword">let</span> toMaxX:<span class="type">Bool</span> = toPoint.x - point.x &gt; <span class="number">0</span></span><br><span class="line">        <span class="comment">//拖到的目的位置y大于原始位置的Y坐标</span></span><br><span class="line">        <span class="keyword">let</span> toMaxY:<span class="type">Bool</span> = toPoint.y - point.y &gt; <span class="number">0</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">var</span> tempPointY = point.y</span><br><span class="line">        <span class="keyword">var</span> tempPointX = point.x</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//1.按下鼠标</span></span><br><span class="line">        postMouseEvent(button: button, type: button == .<span class="keyword">left</span>  ? .leftMouseDown : .rightMouseDown, point: point,clickCount: <span class="number">1</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">let</span> blockOperation = <span class="type">BlockOperation</span>()</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//2.拖拽目的坐标的Y坐标</span></span><br><span class="line">        blockOperation.addExecutionBlock &#123;</span><br><span class="line">            <span class="keyword">while</span>  toMaxY ? (toPoint.y &gt; tempPointY) : (toPoint.y &lt; tempPointY)&#123;</span><br><span class="line">                toMaxY ?  (tempPointY += <span class="number">1</span>) : (tempPointY -= <span class="number">1</span>)</span><br><span class="line">                postMouseEvent(button: button, type: button == .<span class="keyword">left</span>  ? .leftMouseDragged : .rightMouseDragged, point: <span class="type">CGPoint</span>(x: tempPointX, y: tempPointY),clickCount: <span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//3.拖拽目的坐标的X坐标</span></span><br><span class="line">        blockOperation.addExecutionBlock &#123;</span><br><span class="line">            <span class="keyword">while</span> toMaxX ? (toPoint.x &gt; tempPointX) : (toPoint.x &lt; tempPointX) &#123;</span><br><span class="line">                toMaxX ? (tempPointX += <span class="number">1</span>) : (tempPointX -= <span class="number">1</span>)</span><br><span class="line">                postMouseEvent(button: button, type: button == .<span class="keyword">left</span>  ? .leftMouseDragged : .rightMouseDragged, point: <span class="type">CGPoint</span>(x: tempPointX, y: tempPointY),clickCount: <span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//4.松开鼠标</span></span><br><span class="line">        blockOperation.completionBlock = &#123;</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">"hhhhh"</span>)</span><br><span class="line">            postMouseEvent(button: button, type: button == .<span class="keyword">left</span>  ? .leftMouseUp : .rightMouseUp, point: toPoint,clickCount: <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//开始执行Operation</span></span><br><span class="line">        blockOperation.start()</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    <span class="comment">//MARK:鼠标单击</span></span><br><span class="line">    <span class="keyword">open</span> <span class="class"><span class="keyword">class</span> <span class="title">func</span> <span class="title">click</span>(<span class="title">point</span>: <span class="title">CGPoint</span>,<span class="title">button</span>:<span class="title">CGMouseButton</span>,<span class="title">clickCount</span>:<span class="title">Int64</span> = 1)</span>&#123;</span><br><span class="line">        <span class="comment">//1.按下鼠标左键（移动到坐标位置后，可以加适当延时再按鼠标左键）</span></span><br><span class="line">        postMouseEvent(button: button, type: button == .<span class="keyword">left</span>  ? .leftMouseDown : .rightMouseDown, point: point,clickCount: clickCount);</span><br><span class="line">        <span class="comment">//2.松开鼠标左键</span></span><br><span class="line">        postMouseEvent(button: button, type: button == .<span class="keyword">left</span>  ? .leftMouseUp : .rightMouseUp, point: point,clickCount: clickCount);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//MARK:鼠标双击</span></span><br><span class="line">    <span class="keyword">open</span> <span class="class"><span class="keyword">class</span> <span class="title">func</span> <span class="title">doubleClick</span>(<span class="title">point</span>: <span class="title">CGPoint</span>,<span class="title">button</span>:<span class="title">CGMouseButton</span>)</span>&#123;</span><br><span class="line">        click(point: point, button: button,clickCount:<span class="number">1</span>)</span><br><span class="line">        click(point: point, button: button,clickCount:<span class="number">2</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="comment">//鼠标事件</span></span><br><span class="line">    <span class="keyword">private</span> <span class="class"><span class="keyword">class</span> <span class="title">func</span> <span class="title">postMouseEvent</span>(<span class="title">button</span>:<span class="title">CGMouseButton</span>, <span class="title">type</span>:<span class="title">CGEventType</span>, <span class="title">point</span>: <span class="title">CGPoint</span>,<span class="title">clickCount</span>:<span class="title">Int64</span> = 1)</span></span><br><span class="line"><span class="class">    </span>&#123;</span><br><span class="line">        <span class="keyword">let</span> event = createMouseEvent(button: button, type: type, point: point,clickCount:clickCount)</span><br><span class="line">        event.post(tap: <span class="type">CGEventTapLocation</span>.cghidEventTap)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//创建鼠标事件</span></span><br><span class="line">    <span class="keyword">open</span> <span class="class"><span class="keyword">class</span> <span class="title">func</span> <span class="title">createMouseEvent</span>(<span class="title">button</span>:<span class="title">CGMouseButton</span>, <span class="title">type</span>:<span class="title">CGEventType</span>, <span class="title">point</span>: <span class="title">CGPoint</span>,<span class="title">clickCount</span>:<span class="title">Int64</span> = 1) -&gt;  <span class="title">CGEvent</span></span></span><br><span class="line"><span class="class">    </span>&#123;</span><br><span class="line">        <span class="keyword">let</span> event : <span class="type">CGEvent</span>  = <span class="type">CGEvent</span>(mouseEventSource: <span class="type">CGEventSource</span>.<span class="keyword">init</span>(stateID: <span class="type">CGEventSourceStateID</span>.privateState), mouseType: type, mouseCursorPosition: point, mouseButton: button)!</span><br><span class="line">        event.setIntegerValueField(<span class="type">CGEventField</span>.mouseEventClickState, value: clickCount)</span><br><span class="line">        <span class="keyword">return</span> event</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">///鼠标滚轮事件目前仅支持OSX 10.13版本以上使用</span></span><br><span class="line">    <span class="comment">///postion 横向或者纵向滚动的距离，</span></span><br><span class="line">    <span class="comment">///纵向   postion为正数 向下滚动，为负数 向上滚动，横向   postion为正数 向右滚动，为负数 向左滚动</span></span><br><span class="line">    <span class="comment">///FyMKUtils.postScrollWheelEvent(position: -10000,scrollOrientation: .horizontal)//向左滚动10000 个像素点</span></span><br><span class="line">    <span class="comment">///FyMKUtils.postScrollWheelEvent(position: 10000,scrollOrientation: .horizontal)//向右滚动10000 个像素点</span></span><br><span class="line">    <span class="comment">///FyMKUtils.postScrollWheelEvent(position: -10000,scrollOrientation: .vertical)//向上滚动10000 个像素点</span></span><br><span class="line">    <span class="comment">///FyMKUtils.postScrollWheelEvent(position: 10000,scrollOrientation: .vertical)//向下滚动10000 个像素点</span></span><br><span class="line">    <span class="comment">///scrollOrientation  横向或者纵向</span></span><br><span class="line">    <span class="comment">///units: 滚动距离单位   .pixel 像素 .line行。默认像素</span></span><br><span class="line">    <span class="meta">@available</span>(<span class="type">OSX</span> <span class="number">10.13</span>, *)</span><br><span class="line">    <span class="keyword">open</span> <span class="class"><span class="keyword">class</span> <span class="title">func</span> <span class="title">postScrollWheelEvent</span>(<span class="title">position</span>:<span class="title">Int32</span> ,<span class="title">scrollOrientation</span>:<span class="title">ScrollOrientation</span> = .<span class="title">vertical</span>,<span class="title">units</span>:<span class="title">CGScrollEventUnit</span> = .<span class="title">pixel</span>)</span>&#123;</span><br><span class="line">        <span class="comment">//翻转偏移值</span></span><br><span class="line">        <span class="keyword">let</span> tempPosition = -position</span><br><span class="line">        <span class="keyword">let</span> event  = <span class="type">CGEvent</span>(scrollWheelEvent2Source:<span class="literal">nil</span>, units: units, wheelCount: <span class="number">2</span>, wheel1: scrollOrientation == .vertical ? tempPosition : <span class="number">0</span>, wheel2: scrollOrientation == .horizontal ? tempPosition : <span class="number">0</span>,wheel3: <span class="number">0</span>)</span><br><span class="line">        event?.post(tap: .cghidEventTap)</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="comment">//MARK:-------------------------------</span></span><br><span class="line">    <span class="comment">//MARK:键盘类操作</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    public struct CGEventFlags : OptionSet &#123;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        public init(rawValue: UInt64) <span class="comment">/* Flags for events */</span></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        </span></span><br><span class="line"><span class="comment">        <span class="comment">/* Device-independent modifier key bits. */</span></span></span><br><span class="line"><span class="comment">     </span></span><br><span class="line"><span class="comment">        //大小写锁定键处于开启状态(亮灯状态)</span></span><br><span class="line"><span class="comment">        public static var maskAlphaShift: CGEventFlags &#123; get &#125;</span></span><br><span class="line"><span class="comment">        </span></span><br><span class="line"><span class="comment">        //Shift 键按下</span></span><br><span class="line"><span class="comment">        public static var maskShift: CGEventFlags &#123; get &#125;</span></span><br><span class="line"><span class="comment">        </span></span><br><span class="line"><span class="comment">        //Control 键按下</span></span><br><span class="line"><span class="comment">        public static var maskControl: CGEventFlags &#123; get &#125;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        //Alt(Option) 键按下</span></span><br><span class="line"><span class="comment">        public static var maskAlternate: CGEventFlags &#123; get &#125;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        //Command 键按下</span></span><br><span class="line"><span class="comment">        public static var maskCommand: CGEventFlags &#123; get &#125;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        </span></span><br><span class="line"><span class="comment">        <span class="comment">/* Special key identifiers. */</span></span></span><br><span class="line"><span class="comment">        //Help 键按下</span></span><br><span class="line"><span class="comment">        public static var maskHelp: CGEventFlags &#123; get &#125;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        //Fn 键按下</span></span><br><span class="line"><span class="comment">        public static var maskSecondaryFn: CGEventFlags &#123; get &#125;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        </span></span><br><span class="line"><span class="comment">        <span class="comment">/* Identifies key events from numeric keypad area on extended keyboards. */</span></span></span><br><span class="line"><span class="comment">        //数字键 按下</span></span><br><span class="line"><span class="comment">        public static var maskNumericPad: CGEventFlags &#123; get &#125;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        </span></span><br><span class="line"><span class="comment">        <span class="comment">/* Indicates if mouse/pen movement events are not being coalesced */</span></span></span><br><span class="line"><span class="comment">        //没有鼠标和苹果笔 按下</span></span><br><span class="line"><span class="comment">        public static var maskNonCoalesced: CGEventFlags &#123; get &#125;</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">/// 键盘类操作</span></span><br><span class="line">    <span class="comment">/// - Parameters:</span></span><br><span class="line">    <span class="comment">///   - keyCode: 键盘事件中使用的虚拟键码,CGKeyCode 要使用系统定义好的，需要导入  import Carbon     eg  A:  kVK_ANSI_A</span></span><br><span class="line">    <span class="comment">///   - keyDown: keyDown true按下 false 抬起  成对存在</span></span><br><span class="line">    <span class="comment">///   - flags: CGEventFlags  ---- 用作组合键</span></span><br><span class="line">    <span class="comment">/// - ForExample:</span></span><br><span class="line">    <span class="comment">///   - K: FyMKUtils.postKeyboardEvent(keyCode: CGKeyCode(kVK_ANSI_K), keyDown: true, flags: .maskNonCoalesced) &lt;br&gt;</span></span><br><span class="line">    <span class="comment">///     FyMKUtils.postKeyboardEvent(keyCode: CGKeyCode(kVK_ANSI_K), keyDown: false, flags: .maskNonCoalesced) &lt;br&gt;</span></span><br><span class="line">    <span class="comment">///   - Command + KC: FyMKUtils.postKeyboardEvent(keyCode: CGKeyCode(kVK_ANSI_K), keyDown: true, flags: .maskCommand) &lt;br&gt;FyMKUtils.postKeyboardEvent(keyCode: CGKeyCode(kVK_ANSI_K), keyDown: false, flags: .maskCommand)</span></span><br><span class="line">    <span class="comment">///   - Command + Shift + K: &lt;br&gt; FyMKUtils.postKeyboardEvent(keyCode: CGKeyCode(kVK_ANSI_K), keyDown: true, flags: [.maskCommand,.maskShift]) &lt;br&gt; FyMKUtils.postKeyboardEvent(keyCode: CGKeyCode(kVK_ANSI_K), keyDown: false, flags: [.maskCommand,.maskShift])</span></span><br><span class="line">    <span class="keyword">open</span> <span class="class"><span class="keyword">class</span> <span class="title">func</span> <span class="title">postKeyboardEvent</span>(<span class="title">keyCode</span>:<span class="title">CGKeyCode</span>,<span class="title">keyDown</span>:<span class="title">Bool</span>,<span class="title">flags</span>:<span class="title">CGEventFlags</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">let</span> event = <span class="type">CGEvent</span>.<span class="keyword">init</span>(keyboardEventSource: <span class="type">CGEventSource</span>.<span class="keyword">init</span>(stateID: <span class="type">CGEventSourceStateID</span>.privateState), virtualKey: keyCode, keyDown: keyDown)</span><br><span class="line">        event?.flags = flags</span><br><span class="line">        event?.post(tap: .cghidEventTap)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//MARK:鼠标滚动方向</span></span><br><span class="line"><span class="class"><span class="keyword">enum</span> <span class="title">ScrollOrientation</span> </span>&#123;</span><br><span class="line">    <span class="keyword">case</span> horizontal</span><br><span class="line">    <span class="keyword">case</span> vertical</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Mac </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Swift </tag>
            
            <tag> MAC </tag>
            
            <tag> 代码模拟鼠标点击 </tag>
            
            <tag> 代码模拟键盘 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mac 文件已损坏或者未知开发者解决办法</title>
      <link href="/2020/03/17/Mac%20%E6%96%87%E4%BB%B6%E5%B7%B2%E6%8D%9F%E5%9D%8F%E6%88%96%E8%80%85%E6%9C%AA%E7%9F%A5%E5%BC%80%E5%8F%91%E8%80%85%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/"/>
      <url>/2020/03/17/Mac%20%E6%96%87%E4%BB%B6%E5%B7%B2%E6%8D%9F%E5%9D%8F%E6%88%96%E8%80%85%E6%9C%AA%E7%9F%A5%E5%BC%80%E5%8F%91%E8%80%85%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h5 id="sudo-spctl-–master-disable-所有来源权限"><a href="#sudo-spctl-–master-disable-所有来源权限" class="headerlink" title="sudo spctl –master-disable (所有来源权限)"></a>sudo spctl –master-disable (所有来源权限)</h5><h5 id="各位注意，这是10-15以上系统的完美解决方法"><a href="#各位注意，这是10-15以上系统的完美解决方法" class="headerlink" title="各位注意，这是10.15以上系统的完美解决方法"></a>各位注意，这是10.15以上系统的完美解决方法</h5><h5 id="打开终端（Terminal），输入以下命令后回车，如需要，请输入密码"><a href="#打开终端（Terminal），输入以下命令后回车，如需要，请输入密码" class="headerlink" title="打开终端（Terminal），输入以下命令后回车，如需要，请输入密码"></a>打开终端（Terminal），输入以下命令后回车，如需要，请输入密码</h5><h5 id="sudo-xattr-r-d-com-apple-quarantine"><a href="#sudo-xattr-r-d-com-apple-quarantine" class="headerlink" title="sudo xattr -r -d com.apple.quarantine "></a>sudo xattr -r -d com.apple.quarantine <path></h5><blockquote><p>注：<path>为应用程序路径，直接从文件夹目录拖拽即可自动填写<path></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Mac </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 文件已损坏解决办法 </tag>
            
            <tag> 未知开发者解决办法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>结合RxSwift、Moya、和HandyJSON封装网络请求模板</title>
      <link href="/2020/03/16/%E7%BB%93%E5%90%88RxSwift%E3%80%81Moya%E3%80%81%E5%92%8CHandyJSON%E5%B0%81%E8%A3%85%E7%BD%91%E7%BB%9C%E8%AF%B7%E6%B1%82%E6%A8%A1%E6%9D%BF/"/>
      <url>/2020/03/16/%E7%BB%93%E5%90%88RxSwift%E3%80%81Moya%E3%80%81%E5%92%8CHandyJSON%E5%B0%81%E8%A3%85%E7%BD%91%E7%BB%9C%E8%AF%B7%E6%B1%82%E6%A8%A1%E6%9D%BF/</url>
      
        <content type="html"><![CDATA[<h1 id="FyNetWork"><a href="#FyNetWork" class="headerlink" title="FyNetWork"></a>FyNetWork</h1><blockquote><p>结合RxSwift、Moya、和HandyJSON封装网络请求模板</p></blockquote><p>【该模板已经上传Github】-&gt; <a href="https://github.com/i-feiyv/FyNetWork" target="_blank" rel="noopener">前往Github</a> 获取代码</p><h2 id="文件功能"><a href="#文件功能" class="headerlink" title="文件功能"></a>文件功能</h2><h3 id="Podfile"><a href="#Podfile" class="headerlink" title="Podfile"></a>Podfile</h3><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//可以根据不同版本，调整库的版本（不同版本可能需要库的版本不同）</span></span><br><span class="line">pod '<span class="type">Moya</span>/<span class="type">RxSwift'</span>, '~&gt; <span class="number">12.0</span>.<span class="number">1</span>'</span><br><span class="line">pod '<span class="type">HandyJSON'</span>, '~&gt; <span class="number">5.0</span>.<span class="number">1</span>'</span><br></pre></td></tr></table></figure><h3 id="FyUrls-swift"><a href="#FyUrls-swift" class="headerlink" title="FyUrls.swift"></a>FyUrls.swift</h3><p>主要放一些请求Url</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">FyUrls</span> </span>&#123;</span><br><span class="line">    <span class="comment">/// 服务器环境 true: 正服 false: 测服</span></span><br><span class="line">    </span><br><span class="line">    #<span class="keyword">if</span> <span class="type">DEBUG</span></span><br><span class="line">    <span class="comment">//测试环境</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">let</span> service: <span class="type">Bool</span> = <span class="literal">false</span></span><br><span class="line">    #<span class="keyword">else</span></span><br><span class="line">    <span class="comment">//正式环境</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">let</span> service: <span class="type">Bool</span> = <span class="literal">true</span></span><br><span class="line">    #endif</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">var</span> domain: <span class="type">String</span> &#123;</span><br><span class="line">        <span class="comment">// "正服地址" : "测服地址" (这里是网上搜到的开放接口，没有测试地址，两个都写正式地址)</span></span><br><span class="line">        <span class="keyword">return</span> <span class="type">FyUrls</span>.service ? <span class="string">"https://v1.alapi.cn/"</span> : <span class="string">"https://v1.alapi.cn/"</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="comment">//这里写拼接到域名上的Url</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">var</span> searchMusic: <span class="type">String</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"api/music/search"</span></span><br><span class="line">    &#125; </span><br><span class="line">    </span><br><span class="line">    <span class="comment">//.......</span></span><br><span class="line">     </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="FyApi"><a href="#FyApi" class="headerlink" title="FyApi"></a>FyApi</h3><p>主要放基于Moya的网络请求配置</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  FyNetworkApi.swift</span></span><br><span class="line"><span class="comment">//  FyNetWork</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  Created by l on 2020/3/16.</span></span><br><span class="line"><span class="comment">//  Copyright © 2020 ifeiyv. All rights reserved.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> Moya</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">enum</span> <span class="title">FyApi</span> </span>&#123;</span><br><span class="line">    <span class="keyword">case</span> search(keyword:<span class="type">String</span>)</span><br><span class="line">    <span class="comment">//....</span></span><br><span class="line">    <span class="keyword">case</span> other</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">FyApi</span>:<span class="title">TargetType</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//域名配置</span></span><br><span class="line">    <span class="keyword">var</span> baseURL: <span class="type">URL</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="type">URL</span>(string: <span class="type">FyUrls</span>.domain)!</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//接口路径</span></span><br><span class="line">    <span class="keyword">var</span> path: <span class="type">String</span> &#123;</span><br><span class="line">        <span class="keyword">switch</span> <span class="keyword">self</span> &#123;</span><br><span class="line">        <span class="keyword">case</span> .search:</span><br><span class="line">            <span class="keyword">return</span> <span class="type">FyUrls</span>.searchMusic</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">""</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//请求的方式 可以根据接口切换请求方式 get、post或者其他</span></span><br><span class="line">    <span class="keyword">var</span> method: <span class="type">Moya</span>.<span class="type">Method</span> &#123;</span><br><span class="line">        <span class="keyword">switch</span> <span class="keyword">self</span> &#123;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">case</span> .search:</span><br><span class="line">            <span class="keyword">return</span> .<span class="keyword">get</span></span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="keyword">return</span> .post</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//做单元测试使用的数据</span></span><br><span class="line">    <span class="keyword">var</span> sampleData: <span class="type">Data</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"&#123;&#125;"</span>.data(using: <span class="type">String</span>.<span class="type">Encoding</span>.utf8)!</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="comment">//所有要执行的接口任务，参数的配置在这里设置</span></span><br><span class="line">    <span class="keyword">var</span> task: <span class="type">Task</span> &#123;</span><br><span class="line">        <span class="keyword">switch</span> <span class="keyword">self</span> &#123;</span><br><span class="line">        <span class="keyword">case</span> .search(<span class="keyword">let</span> keyword):</span><br><span class="line">            <span class="keyword">let</span> params = <span class="type">FyParams</span>.<span class="keyword">init</span>(params: [<span class="string">"keyword"</span> : keyword])</span><br><span class="line">            <span class="keyword">return</span> .requestParameters(parameters: params.allParams, encoding: <span class="type">URLEncoding</span>.<span class="keyword">default</span>)</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="keyword">return</span> .requestPlain</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//默认请求头配置 </span></span><br><span class="line">    <span class="comment">//也可以在FyRequest.swift的 requestTimeoutClosure中进行动态配置</span></span><br><span class="line">    <span class="keyword">var</span> headers: [<span class="type">String</span> : <span class="type">String</span>]? &#123;</span><br><span class="line">        <span class="keyword">switch</span> <span class="keyword">self</span> &#123;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="keyword">return</span> [<span class="string">"Content-type"</span>: <span class="string">"application/json"</span>]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="FyRequest-swift"><a href="#FyRequest-swift" class="headerlink" title="FyRequest.swift"></a>FyRequest.swift</h3><p>主要放Api接口请求方法具体实现</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  FyRequest.swift</span></span><br><span class="line"><span class="comment">//  FyNetWork</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  Created by l on 2020/3/16.</span></span><br><span class="line"><span class="comment">//  Copyright © 2020 ifeiyv. All rights reserved.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="keyword">import</span> UIKit</span><br><span class="line"><span class="keyword">import</span> Moya</span><br><span class="line"><span class="keyword">import</span> RxSwift</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> requestTimeoutClosure = &#123; (endpoint: <span class="type">Endpoint</span>, done: @escaping <span class="type">MoyaProvider</span>&lt;<span class="type">FyApi</span>&gt;.<span class="type">RequestResultClosure</span>) <span class="keyword">in</span></span><br><span class="line">    <span class="keyword">do</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> request = <span class="keyword">try</span> endpoint.urlRequest()</span><br><span class="line"></span><br><span class="line">        <span class="comment">//根据不同接口判断携带不同的请求头 //这个也可以根据接口判断，切换超时时长</span></span><br><span class="line">        <span class="keyword">if</span>(request.url?.absoluteString.<span class="built_in">contains</span>(<span class="type">FyUrls</span>.searchMusic.lowercased()) ?? <span class="literal">false</span>)&#123;</span><br><span class="line">            request.timeoutInterval = <span class="number">30</span></span><br><span class="line">            request.addValue(<span class="string">"zhangsan"</span>, forHTTPHeaderField: <span class="string">"user"</span>)</span><br><span class="line">            request.addValue(<span class="string">"ahsfksjfhskdfhsjdkf"</span>, forHTTPHeaderField: <span class="string">"cookie"</span>)</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="comment">//.....</span></span><br><span class="line">            request.timeoutInterval = <span class="number">10</span></span><br><span class="line">        &#125;</span><br><span class="line">        done(.success(request))</span><br><span class="line">    &#125; <span class="keyword">catch</span> &#123;</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FyRequest</span>: <span class="title">NSObject</span> </span>&#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">let</span> request = <span class="type">FyRequest</span>()</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">var</span> provider = <span class="type">MoyaProvider</span>&lt;<span class="type">FyApi</span>&gt; (requestClosure: requestTimeoutClosure,plugins: [<span class="type">NetworkLoggerPlugin</span>(verbose: <span class="literal">true</span>)])</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="comment">//    var provider = MoyaProvider&lt;FyApi&gt; (</span></span><br><span class="line">    <span class="comment">//        plugins: [NetworkLoggerPlugin(verbose: false)]</span></span><br><span class="line">    <span class="comment">//    )</span></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="comment">//接口具体请求实现</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">func</span> <span class="title">searchSongs</span><span class="params">(keyword:String)</span></span> -&gt;  <span class="type">Single</span>&lt;<span class="type">Result</span>&lt;<span class="type">Songs</span>&gt;&gt;&#123;</span><br><span class="line">        <span class="keyword">return</span>  provider.rx.request(.search(keyword: keyword))</span><br><span class="line">            .filterSuccessfulStatusCodes() <span class="comment">//删选请求成功状态数据</span></span><br><span class="line">            .mapModel()                    <span class="comment">//数据模型化</span></span><br><span class="line">            .flatMap &#123; (result: <span class="type">FyResponse</span>&lt;<span class="type">Songs</span>&gt;) <span class="keyword">in</span></span><br><span class="line">                <span class="keyword">if</span> result.isSuccess&#123;</span><br><span class="line">                    <span class="keyword">return</span>  <span class="type">Single</span>.just(<span class="type">Result</span>.regular(result.data ?? <span class="type">Songs</span>()))</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="type">Single</span>.just(<span class="type">Result</span>&lt;<span class="type">Songs</span>&gt;.failing(<span class="type">RxMoyaError</span>.reason(result.message ?? <span class="string">""</span>)))</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        .catchError(&#123; error <span class="keyword">in</span></span><br><span class="line">            <span class="keyword">return</span> <span class="type">Single</span>.just(<span class="type">Result</span>.failing(<span class="type">RxMoyaError</span>.reason(<span class="type">ErrorTips</span>.netWorkError.rawValue)))</span><br><span class="line">        &#125;)</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="FyResponse-swift"><a href="#FyResponse-swift" class="headerlink" title="FyResponse.swift"></a>FyResponse.swift</h3><p>主要是请求响应解析方法</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  FyResponse.swift</span></span><br><span class="line"><span class="comment">//  FyNetWork</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  Created by l on 2020/3/16.</span></span><br><span class="line"><span class="comment">//  Copyright © 2020 ifeiyv. All rights reserved.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="keyword">import</span> UIKit</span><br><span class="line"><span class="keyword">import</span> Moya</span><br><span class="line"><span class="keyword">import</span> RxSwift</span><br><span class="line"><span class="keyword">import</span> HandyJSON</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">Array</span>: <span class="title">HandyJSON</span> </span>&#123;&#125;</span><br><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">String</span>: <span class="title">HandyJSON</span> </span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//采用泛型解析数据</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">FyResponse</span>&lt;<span class="title">T</span>:<span class="title">HandyJSON</span>&gt;:<span class="title">HandyJSON</span></span>&#123;</span><br><span class="line">    <span class="keyword">var</span> code:<span class="type">Int</span> = <span class="number">0</span></span><br><span class="line">    <span class="keyword">var</span> message:<span class="type">String?</span></span><br><span class="line">    <span class="keyword">var</span> data: <span class="type">T?</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">var</span> isSuccess: <span class="type">Bool</span> &#123;</span><br><span class="line">         <span class="keyword">return</span> code == <span class="number">200</span></span><br><span class="line">     &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">Response</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//响应数据转model</span></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">mapModel</span>&lt;T&gt;<span class="params">()</span></span> <span class="keyword">throws</span> -&gt; <span class="type">FyResponse</span>&lt;<span class="type">T</span>&gt; &#123;</span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">let</span> jsonString = <span class="type">String</span>(data: data, encoding: <span class="type">String</span>.<span class="type">Encoding</span>.utf8)&#123;</span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">let</span> obj = <span class="type">JSONDeserializer</span>&lt;<span class="type">FyResponse</span>&lt;<span class="type">T</span>&gt;&gt;.deserializeFrom(json: jsonString) &#123;</span><br><span class="line">                    <span class="keyword">return</span> obj</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">throw</span> <span class="type">RxMoyaError</span>.modelMapping(<span class="keyword">self</span>)</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="type">RxMoyaError</span>.modelMapping(<span class="keyword">self</span>)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="type">RxMoyaError</span>.modelMapping(<span class="keyword">self</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">PrimitiveSequence</span> <span class="title">where</span> <span class="title">TraitType</span> == <span class="title">SingleTrait</span>, <span class="title">ElementType</span> == <span class="title">Response</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">mapModel</span>&lt;T: HandyJSON&gt;<span class="params">()</span></span> -&gt; <span class="type">Single</span>&lt;<span class="type">FyResponse</span>&lt;<span class="type">T</span>&gt;&gt; &#123;</span><br><span class="line">        <span class="keyword">return</span> flatMap &#123; (response) -&gt; <span class="type">Single</span>&lt;<span class="type">FyResponse</span>&lt;<span class="type">T</span>&gt;&gt; <span class="keyword">in</span></span><br><span class="line">            <span class="keyword">return</span> <span class="type">Single</span>.just(<span class="keyword">try</span> response.mapModel())</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="FyNetError-swift"><a href="#FyNetError-swift" class="headerlink" title="FyNetError.swift"></a>FyNetError.swift</h3><p>请求错误处理</p><h3 id="FySongResponse-swift"><a href="#FySongResponse-swift" class="headerlink" title="FySongResponse.swift"></a>FySongResponse.swift</h3><p>请求歌曲列表model例子</p><h3 id="FyViewModel-swift"><a href="#FyViewModel-swift" class="headerlink" title="FyViewModel.swift"></a>FyViewModel.swift</h3><p>网络请求库的运用例子</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  FyViewModel.swift</span></span><br><span class="line"><span class="comment">//  FyNetWork</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  Created by l on 2020/3/16.</span></span><br><span class="line"><span class="comment">//  Copyright © 2020 ifeiyv. All rights reserved.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="keyword">import</span> UIKit</span><br><span class="line"><span class="keyword">import</span> RxSwift</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FyViewModel</span>: <span class="title">NSObject</span> </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> dispose = <span class="type">DisposeBag</span>()</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">typealias</span> <span class="type">NetworkResultClosure</span> = (<span class="number">_</span> names:<span class="type">String</span>) -&gt; <span class="type">Void</span></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">fetchMusicListData</span><span class="params">(keyword:String,networkResultClosure: @escaping NetworkResultClosure)</span></span>&#123;</span><br><span class="line">        <span class="number">_</span> =  <span class="type">FyRequest</span>.request.searchSongs(keyword: keyword).subscribe(onSuccess: &#123; (result) <span class="keyword">in</span></span><br><span class="line">            <span class="keyword">switch</span> result&#123;</span><br><span class="line">            <span class="keyword">case</span>.regular(<span class="keyword">let</span> songsInfo):</span><br><span class="line">                <span class="keyword">var</span> name:<span class="type">String</span> = <span class="string">""</span></span><br><span class="line">                <span class="keyword">for</span> song <span class="keyword">in</span> songsInfo.songs&#123;</span><br><span class="line">                    name = name + <span class="string">"\n"</span> + song.name</span><br><span class="line">                &#125;</span><br><span class="line">               networkResultClosure(name)</span><br><span class="line">            <span class="keyword">case</span> .failing( <span class="number">_</span>):</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;) &#123; (error) <span class="keyword">in</span></span><br><span class="line">            </span><br><span class="line">        &#125;.disposed(by: dispose)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//============ViewController.swift=================</span></span><br><span class="line"></span><br><span class="line"> <span class="function"><span class="keyword">func</span> <span class="title">loadData</span><span class="params">()</span></span>&#123; <span class="comment">//接口调用方式</span></span><br><span class="line">        viewModel?.fetchMusicListData(keyword:<span class="string">"思如雪"</span>,networkResultClosure: &#123;[<span class="keyword">weak</span> <span class="keyword">self</span>] (names) <span class="keyword">in</span></span><br><span class="line">            <span class="type">DispatchQueue</span>.main.async &#123;</span><br><span class="line">                <span class="keyword">self</span>?.tips?.text = names</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h3 id="FyParams-swift"><a href="#FyParams-swift" class="headerlink" title="FyParams.swift"></a>FyParams.swift</h3><p>主要用来配置请求参数</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  FyParams.swift</span></span><br><span class="line"><span class="comment">//  Runner</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  Created by l on 2020/3/16.</span></span><br><span class="line"><span class="comment">//  Copyright © 2020 The Chromium Authors. All rights reserved.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="keyword">import</span> UIKit</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FyBaseParams</span>: <span class="title">NSObject</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> channel : <span class="type">String</span>  &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"com.lpf.FyNetWork"</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">var</span> vno : <span class="type">Int</span>  &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">100</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/// .........................</span></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="comment">//这里面存放一些通用参数（也就是每个接口都要携带的参数）</span></span><br><span class="line">    <span class="keyword">var</span> baseParams:[<span class="type">String</span>:<span class="type">Any</span>]?&#123;</span><br><span class="line">        <span class="keyword">var</span> tempParams:[<span class="type">String</span>:<span class="type">Any</span>] = [<span class="type">String</span>:<span class="type">Any</span>]()</span><br><span class="line">        tempParams[<span class="string">"channel"</span>] = channel</span><br><span class="line">        tempParams[<span class="string">"vno"</span>] = vno</span><br><span class="line">        <span class="keyword">return</span> tempParams</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//这里存放所有请求需要的参数</span></span><br><span class="line">    <span class="keyword">var</span> allParams:[<span class="type">String</span>:<span class="type">Any</span>]!</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//根据接口需要的参数需求不同，进行适当的修改</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FyParams</span>: <span class="title">FyBaseParams</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">init</span>(params:[<span class="type">String</span>:<span class="type">Any</span>]? = [<span class="type">String</span>:<span class="type">Any</span>]()) &#123;</span><br><span class="line">        <span class="keyword">super</span>.<span class="keyword">init</span>()</span><br><span class="line">        <span class="keyword">var</span> tempParams = [<span class="type">String</span>:<span class="type">Any</span>]()</span><br><span class="line">        <span class="keyword">for</span> param <span class="keyword">in</span> baseParams ?? [<span class="type">String</span>:<span class="type">Any</span>]()&#123;</span><br><span class="line">            tempParams[param.key] = param.value</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> param <span class="keyword">in</span> params ?? [<span class="type">String</span>:<span class="type">Any</span>]()&#123;</span><br><span class="line">            tempParams[param.key] = param.value</span><br><span class="line">        &#125;</span><br><span class="line">        allParams = tempParams ?? [<span class="type">String</span>:<span class="type">Any</span>]()</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Swift </category>
          
      </categories>
      
      
        <tags>
            
            <tag> RxSwift </tag>
            
            <tag> Moya </tag>
            
            <tag> HandyJSON </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>iOS 13 DarkMode适配</title>
      <link href="/2020/03/13/iOS%2013%20DarkMode%E9%80%82%E9%85%8D/"/>
      <url>/2020/03/13/iOS%2013%20DarkMode%E9%80%82%E9%85%8D/</url>
      
        <content type="html"><![CDATA[<h4 id="封装颜色管理类"><a href="#封装颜色管理类" class="headerlink" title="封装颜色管理类"></a>封装颜色管理类</h4><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  FyColor.swift</span></span><br><span class="line"><span class="comment">//  FyColor</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  Created by l on 2020/3/13.</span></span><br><span class="line"><span class="comment">//  Copyright © 2020 ifeiyv. All rights reserved.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="keyword">import</span> UIKit</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FyColors</span></span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">///深色模式适配  手动控制适配模式 启用 关闭(如非必要，可移除相关代码)</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">let</span> isOpenDarkModel:<span class="type">Bool</span>  = <span class="literal">true</span></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="comment">//MARK: eg文字颜色</span></span><br><span class="line">    <span class="comment">//文字颜色  如果有多种文字颜色可以设置多个 eg: labelTextColor</span></span><br><span class="line">    <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">var</span> <span class="title">labelTextColor</span>: <span class="title">UIColor</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> darkModeColor(dark:<span class="type">UIColor</span>.white,light:<span class="type">UIColor</span>.black)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//文字颜色  如果有多种文字颜色可以设置多个 eg:  buttonTextColor</span></span><br><span class="line">    <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">var</span> <span class="title">buttonTextColor</span>: <span class="title">UIColor</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> darkModeColor(dark:<span class="type">UIColor</span>.white,light:<span class="type">UIColor</span>.black)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//文字颜色  如果有多种文字颜色可以设置多个 eg:  fieldTextColor</span></span><br><span class="line">    <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">var</span> <span class="title">fieldTextColor</span>: <span class="title">UIColor</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> darkModeColor(dark:<span class="type">UIColor</span>.white,light:<span class="type">UIColor</span>.black)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//MARK: eg背景颜色</span></span><br><span class="line">    <span class="comment">//背景颜色  如果有多种文字颜色可以设置多个 eg: labelBgColor</span></span><br><span class="line">    <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">var</span> <span class="title">labelBgColor</span>: <span class="title">UIColor</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> darkModeColor(dark:<span class="type">UIColor</span>.black,light:<span class="type">UIColor</span>.white)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//背景颜色  如果有多种文字颜色可以设置多个 eg:  buttonBgColor</span></span><br><span class="line">    <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">var</span> <span class="title">buttonBgColor</span>: <span class="title">UIColor</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> darkModeColor(dark:<span class="type">UIColor</span>.black,light:<span class="type">UIColor</span>.white)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//背景颜色  如果有多种背景颜色可以设置多个 eg:  viewBgColor</span></span><br><span class="line">    <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">var</span> <span class="title">viewBgColor</span>: <span class="title">UIColor</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> darkModeColor(dark:<span class="type">UIColor</span>.black,light:<span class="type">UIColor</span>.white)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//.........................................</span></span><br><span class="line">    <span class="comment">//根据需求增加相对应的颜色即可</span></span><br><span class="line">    <span class="comment">//darkModeColor(dark:UIColor.white,light:UIColor.black)</span></span><br><span class="line">    <span class="comment">//实际开发中不可能只有 UIColor.white，UIColor.black 两种颜色。</span></span><br><span class="line">    <span class="comment">//根据产品需求增加和修改对应的颜色</span></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="comment">//检测当前是否是深色模式</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">func</span> <span class="title">isDarkStyle</span>() -&gt; <span class="title">Bool</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(!isOpenDarkModel)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> #available(iOS <span class="number">13.0</span>, *)&#123;</span><br><span class="line">            <span class="keyword">let</span> currentMode = <span class="type">UITraitCollection</span>.current.userInterfaceStyle</span><br><span class="line">            <span class="keyword">if</span>(currentMode == .dark)&#123;</span><br><span class="line">                <span class="keyword">return</span>  <span class="literal">true</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 适配 动态颜色</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">func</span> <span class="title">darkModeColor</span>(<span class="title">dark</span>:<span class="title">UIColor</span>,<span class="title">light</span>:<span class="title">UIColor</span>) -&gt;<span class="title">UIColor</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(!isOpenDarkModel)&#123;</span><br><span class="line">            <span class="keyword">return</span> light</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> #available(iOS <span class="number">13.0</span>, *)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="type">UIColor</span>&#123;(trainCollection) -&gt; <span class="type">UIColor</span> <span class="keyword">in</span></span><br><span class="line">                <span class="keyword">if</span> trainCollection.userInterfaceStyle == .dark&#123;</span><br><span class="line">                    <span class="keyword">return</span> dark</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    <span class="keyword">return</span> light</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> light</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="使用方式：-深色模式切换时，系统会重新渲染颜色，自动在设置好的两种颜色中进行切换"><a href="#使用方式：-深色模式切换时，系统会重新渲染颜色，自动在设置好的两种颜色中进行切换" class="headerlink" title="使用方式：(深色模式切换时，系统会重新渲染颜色，自动在设置好的两种颜色中进行切换)"></a>使用方式：(深色模式切换时，系统会重新渲染颜色，自动在设置好的两种颜色中进行切换)</h5> <figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">label.textColor = <span class="type">FyColors</span>.labelTextColor</span><br><span class="line">   </span><br><span class="line">label.backgroundColor = <span class="type">FyColors</span>.labelBgColor</span><br><span class="line"></span><br><span class="line"> <span class="comment">//或者在此方法监听深色模式进行手动切换</span></span><br><span class="line"><span class="keyword">override</span> <span class="function"><span class="keyword">func</span> <span class="title">traitCollectionDidChange</span><span class="params">(<span class="number">_</span> previousTraitCollection: UITraitCollection?)</span></span> &#123;</span><br><span class="line">    <span class="keyword">super</span>.traitCollectionDidChange(previousTraitCollection)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> iOS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Swift </tag>
            
            <tag> DarkMode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AndroidStudio生成签名信息报错</title>
      <link href="/2020/02/05/AndroidStudio%E7%94%9F%E6%88%90%E7%AD%BE%E5%90%8D%E4%BF%A1%E6%81%AF%E6%8A%A5%E9%94%99/"/>
      <url>/2020/02/05/AndroidStudio%E7%94%9F%E6%88%90%E7%AD%BE%E5%90%8D%E4%BF%A1%E6%81%AF%E6%8A%A5%E9%94%99/</url>
      
        <content type="html"><![CDATA[<h4 id="AndroidStudio生成签名信息报错"><a href="#AndroidStudio生成签名信息报错" class="headerlink" title="AndroidStudio生成签名信息报错"></a>AndroidStudio生成签名信息报错</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Key was created with errors:</span><br><span class="line">Warning:</span><br><span class="line">JKS 密钥库使用专用格式。建议使用 </span><br><span class="line"><span class="string">"keytool -importkeystore -srckeystore</span></span><br><span class="line"><span class="string">(存放路径)\AndroidSigh.jks -destkeystore</span></span><br><span class="line"><span class="string">(存放路径)\AndroidSigh.jks -deststoretype pkcs12"</span></span><br><span class="line">迁移到行业标准格式 PKCS12。</span><br></pre></td></tr></table></figure><blockquote><p>解决方案在终端中输入以下命令：</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">keytool -genkey -alias (alias名称) -keypass (alias密码) -keyalg RSA -keysize <span class="number">2048</span> -validity <span class="number">36500</span> -keystore (存放路径)\(保存jks文件名称).jks -storepass (keyStore密码)</span><br><span class="line"></span><br><span class="line"><span class="comment">//然后根据提示信息填写即可（上面命令中的括号要删掉）</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android Studio </tag>
            
            <tag> jks </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Swift判断字符串中是否含有中文</title>
      <link href="/2020/01/15/Swift%E5%88%A4%E6%96%AD%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E6%98%AF%E5%90%A6%E5%90%AB%E6%9C%89%E4%B8%AD%E6%96%87/"/>
      <url>/2020/01/15/Swift%E5%88%A4%E6%96%AD%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E6%98%AF%E5%90%A6%E5%90%AB%E6%9C%89%E4%B8%AD%E6%96%87/</url>
      
        <content type="html"><![CDATA[<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">"l我o是v中e文123456789"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">judgeStringIncludeChineseWord</span><span class="params">(string: String)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="number">_</span>, value) <span class="keyword">in</span> string.characters.enumerated() &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="string">"\u&#123;4E00&#125;"</span> &lt;= value  &amp;&amp; value &lt;= <span class="string">"\u&#123;9FA5&#125;"</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> result = judgeStringIncludeChineseWord(string: str)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Swift </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Swift字符串 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Swift 分享邀请码图片合成</title>
      <link href="/2019/12/15/Swift%20%E5%88%86%E4%BA%AB%E9%82%80%E8%AF%B7%E7%A0%81%E5%9B%BE%E7%89%87%E5%90%88%E6%88%90/"/>
      <url>/2019/12/15/Swift%20%E5%88%86%E4%BA%AB%E9%82%80%E8%AF%B7%E7%A0%81%E5%9B%BE%E7%89%87%E5%90%88%E6%88%90/</url>
      
        <content type="html"><![CDATA[<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">func</span> <span class="title">creteImage</span>(<span class="title">bgImage</span>: <span class="title">UIImage</span>, <span class="title">iconImage</span>: <span class="title">UIImage</span>,<span class="title">iconFrame</span>:<span class="title">CGRect</span>,<span class="title">qrCodeImage</span>:<span class="title">UIImage</span>,<span class="title">codeFrame</span>:<span class="title">CGRect</span>,<span class="title">inviteCodeImg</span>:<span class="title">UIImage</span>,<span class="title">frame</span>:<span class="title">CGRect</span>) -&gt; <span class="title">UIImage</span></span></span><br><span class="line"><span class="class">    </span>&#123;</span><br><span class="line">        <span class="comment">// 1.开启图片上下文</span></span><br><span class="line"><span class="comment">//        UIGraphicsBeginImageContext(bgImage.size)</span></span><br><span class="line">        <span class="type">UIGraphicsBeginImageContextWithOptions</span>(bgImage.size,<span class="literal">false</span>,<span class="type">UIScreen</span>.main.scale)</span><br><span class="line">        <span class="comment">// 2.绘制背景图片</span></span><br><span class="line">        bgImage.draw(<span class="keyword">in</span>: <span class="type">CGRect</span>(origin: <span class="type">CGPoint</span>.zero, size: bgImage.size))</span><br><span class="line">        <span class="comment">// 3.绘制头像</span></span><br><span class="line">        iconImage.draw(<span class="keyword">in</span>: iconFrame)</span><br><span class="line">        </span><br><span class="line">        qrCodeImage.draw(<span class="keyword">in</span>: codeFrame)</span><br><span class="line">        </span><br><span class="line">        inviteCodeImg.draw(<span class="keyword">in</span>: frame)</span><br><span class="line">        <span class="comment">// 4.取出绘制号的图片</span></span><br><span class="line">        <span class="keyword">let</span> newImage = <span class="type">UIGraphicsGetImageFromCurrentImageContext</span>()</span><br><span class="line">        <span class="comment">// 5.关闭上下文</span></span><br><span class="line">        <span class="type">UIGraphicsEndImageContext</span>()</span><br><span class="line">        <span class="comment">// 6.返回合成号的图片</span></span><br><span class="line">        <span class="keyword">return</span> newImage!</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">//MARK: -传进去字符串,生成二维码图片</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">func</span> <span class="title">setupQRCodeImage</span>(<span class="title">_</span> <span class="title">text</span>: <span class="title">String</span>) -&gt; <span class="title">UIImage</span> </span>&#123;</span><br><span class="line">     <span class="comment">//创建滤镜</span></span><br><span class="line">     <span class="keyword">let</span> <span class="built_in">filter</span> = <span class="type">CIFilter</span>(name: <span class="string">"CIQRCodeGenerator"</span>)</span><br><span class="line">     <span class="built_in">filter</span>?.setDefaults()</span><br><span class="line">     <span class="comment">//将url加入二维码</span></span><br><span class="line">     <span class="built_in">filter</span>?.setValue(text.data(using: <span class="type">String</span>.<span class="type">Encoding</span>.utf8), forKey: <span class="string">"inputMessage"</span>)</span><br><span class="line">     <span class="comment">//取出生成的二维码（不清晰）</span></span><br><span class="line">     <span class="keyword">if</span> <span class="keyword">let</span> outputImage = <span class="built_in">filter</span>?.outputImage &#123;</span><br><span class="line">         <span class="comment">//生成清晰度更好的二维码</span></span><br><span class="line">         <span class="keyword">let</span> qrCodeImage = <span class="type">Util</span>.setupHighDefinitionUIImage(outputImage, size: <span class="number">140</span>)</span><br><span class="line">         <span class="keyword">return</span> qrCodeImage</span><br><span class="line">     &#125;</span><br><span class="line">     </span><br><span class="line">     <span class="keyword">return</span> <span class="type">UIImage</span>()</span><br><span class="line"> &#125;</span><br><span class="line"> </span><br><span class="line"> <span class="comment">//MARK: - 生成高清的UIImage</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">func</span> <span class="title">setupHighDefinitionUIImage</span>(<span class="title">_</span> <span class="title">image</span>: <span class="title">CIImage</span>, <span class="title">size</span>: <span class="title">CGFloat</span>) -&gt; <span class="title">UIImage</span> </span>&#123;</span><br><span class="line">     <span class="keyword">let</span> integral: <span class="type">CGRect</span> = image.extent.integral</span><br><span class="line">     <span class="keyword">let</span> proportion: <span class="type">CGFloat</span> = <span class="built_in">min</span>(size/integral.width, size/integral.height)</span><br><span class="line">     </span><br><span class="line">     <span class="keyword">let</span> width = integral.width * proportion</span><br><span class="line">     <span class="keyword">let</span> height = integral.height * proportion</span><br><span class="line">     <span class="keyword">let</span> colorSpace: <span class="type">CGColorSpace</span> = <span class="type">CGColorSpaceCreateDeviceGray</span>()</span><br><span class="line">     <span class="keyword">let</span> bitmapRef = <span class="type">CGContext</span>(data: <span class="literal">nil</span>, width: <span class="type">Int</span>(width), height: <span class="type">Int</span>(height), bitsPerComponent: <span class="number">8</span>, bytesPerRow: <span class="number">0</span>, space: colorSpace, bitmapInfo: <span class="number">0</span>)!</span><br><span class="line">     </span><br><span class="line">     <span class="keyword">let</span> context = <span class="type">CIContext</span>(options: <span class="literal">nil</span>)</span><br><span class="line">     <span class="keyword">let</span> bitmapImage: <span class="type">CGImage</span> = context.createCGImage(image, from: integral)!</span><br><span class="line">     </span><br><span class="line">     bitmapRef.interpolationQuality = <span class="type">CGInterpolationQuality</span>.<span class="keyword">none</span></span><br><span class="line">     bitmapRef.scaleBy(x: proportion, y: proportion);</span><br><span class="line">     bitmapRef.draw(bitmapImage, <span class="keyword">in</span>: integral);</span><br><span class="line">     <span class="keyword">let</span> image: <span class="type">CGImage</span> = bitmapRef.makeImage()!</span><br><span class="line">     <span class="keyword">return</span> <span class="type">UIImage</span>(cgImage: image)</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">func</span> <span class="title">getImageFromView</span>(<span class="title">view</span>:<span class="title">UIView</span>) -&gt;<span class="title">UIImage</span></span>&#123;</span><br><span class="line"><span class="comment">//        UIGraphicsBeginImageContext(view.bounds.size)</span></span><br><span class="line">        <span class="type">UIGraphicsBeginImageContextWithOptions</span>(view.bounds.size,<span class="literal">false</span>,<span class="type">UIScreen</span>.main.scale)</span><br><span class="line">        view.layer.render(<span class="keyword">in</span>: <span class="type">UIGraphicsGetCurrentContext</span>()!)</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">let</span> image = <span class="type">UIGraphicsGetImageFromCurrentImageContext</span>()</span><br><span class="line">        </span><br><span class="line">        <span class="type">UIGraphicsEndImageContext</span>()</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> image!</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Swift </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 图片合成 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flutter 字符串多余n行折叠，点击展开</title>
      <link href="/2019/11/25/flutter%20%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%A4%9A%E4%BD%99n%E8%A1%8C%E6%8A%98%E5%8F%A0,%E7%82%B9%E5%87%BB%E5%B1%95%E5%BC%80/"/>
      <url>/2019/11/25/flutter%20%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%A4%9A%E4%BD%99n%E8%A1%8C%E6%8A%98%E5%8F%A0,%E7%82%B9%E5%87%BB%E5%B1%95%E5%BC%80/</url>
      
        <content type="html"><![CDATA[<h4 id="flutter-字符串多余n行折叠，点击展开"><a href="#flutter-字符串多余n行折叠，点击展开" class="headerlink" title="flutter 字符串多余n行折叠，点击展开"></a>flutter 字符串多余n行折叠，点击展开</h4><ul><li>获取TextPainter</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">TextPainter fetchTextPainter(<span class="built_in">String</span> text, TextStyle style, <span class="built_in">int</span> maxLine,</span><br><span class="line">     <span class="built_in">double</span> minWidth, <span class="built_in">double</span> maxWidth) &#123;</span><br><span class="line">   <span class="keyword">return</span> TextPainter(</span><br><span class="line">       maxLines: maxLine,</span><br><span class="line">       text: TextSpan(text: text, style: style),</span><br><span class="line">       textDirection: TextDirection.ltr)</span><br><span class="line">     ..layout(maxWidth: maxWidth, minWidth: minWidth);</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><ul><li>判断是否超过n行，需要截断文本</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">bool</span> isExpansion(<span class="built_in">String</span> text, TextStyle style, <span class="built_in">int</span> maxLine, <span class="built_in">double</span> minWidth,</span><br><span class="line">      <span class="built_in">double</span> maxWidth) &#123;</span><br><span class="line">    TextPainter _textPainter =</span><br><span class="line">        fetchTextPainter(text, style, maxLine, minWidth, maxWidth);</span><br><span class="line">    <span class="keyword">if</span> (_textPainter.didExceedMaxLines) &#123;</span><br><span class="line">      <span class="comment">//这里判断 文本是否截断</span></span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><ul><li>超过n行，需要展开。展开箭头放在文本右下角，移除两个字符（根据需求）用来放展开箭头</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">String</span> expansionString(<span class="built_in">String</span> text, TextStyle style, <span class="built_in">int</span> maxLine,</span><br><span class="line">    <span class="built_in">double</span> minWidth, <span class="built_in">double</span> maxWidth) &#123;</span><br><span class="line">  TextPainter _textPainter =</span><br><span class="line">      fetchTextPainter(text, style, maxLine, minWidth, maxWidth);</span><br><span class="line">  <span class="keyword">var</span> end = _textPainter</span><br><span class="line">      .getPositionForOffset(</span><br><span class="line">          Offset(_textPainter.size.width, _textPainter.size.height))</span><br><span class="line">      .offset;</span><br><span class="line">  <span class="keyword">return</span> text.substring(<span class="number">0</span>, end - <span class="number">2</span>) + <span class="string">"..."</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Flutter </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Flutter 字符串 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>直播系列四、报错Bug修复记录</title>
      <link href="/2019/11/08/%E7%9B%B4%E6%92%AD%E7%B3%BB%E5%88%97%E5%9B%9B%E3%80%81%E6%8A%A5%E9%94%99Bug%E4%BF%AE%E5%A4%8D%E8%AE%B0%E5%BD%95/"/>
      <url>/2019/11/08/%E7%9B%B4%E6%92%AD%E7%B3%BB%E5%88%97%E5%9B%9B%E3%80%81%E6%8A%A5%E9%94%99Bug%E4%BF%AE%E5%A4%8D%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<ol><li>./build-ffmpeg.sh</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">xcrun -sdk iphoneos clang is unable to create an executable file.</span><br><span class="line">C compiler <span class="built_in">test</span> failed.</span><br><span class="line"></span><br><span class="line">If you think configure made a mistake, make sure you are using the latest</span><br><span class="line">version from Git. If the latest version fails, report the problem to the</span><br><span class="line">ffmpeg-user@ffmpeg.org mailing list or IRC <span class="comment">#ffmpeg on irc.freenode.net.</span></span><br><span class="line">Include the <span class="built_in">log</span> file <span class="string">"config.log"</span> produced by configure as this will <span class="built_in">help</span></span><br><span class="line">solve the problem.</span><br></pre></td></tr></table></figure><p>解决方法：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo xcode-select --switch /Applications/Xcode.app</span><br></pre></td></tr></table></figure><ol start="2"><li>armv7</li></ol><p><a href="https://www.jianshu.com/p/2669370bee23" target="_blank" rel="noopener">https://www.jianshu.com/p/2669370bee23</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">./libavutil/arm/asm.S:50:9: error: unknown directive</span><br><span class="line">       .arch armv7<span class="_">-a</span></span><br><span class="line">       ^</span><br></pre></td></tr></table></figure><p>删除<code>armv7compile-ffmpeg.sh</code>文件中 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">FF_ALL_ARCHS_IOS8_SDK=<span class="string">"armv7 arm64 i386 x86_64"</span></span><br><span class="line"></span><br><span class="line">改为 FF_ALL_ARCHS_IOS8_SDK=<span class="string">"arm64 i386 x86_64"</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> iOS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 直播 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>直播系列三、IJKPlayer拉流</title>
      <link href="/2019/11/08/%E7%9B%B4%E6%92%AD%E7%B3%BB%E5%88%97%E4%B8%89%E3%80%81IJKPlayer%E6%8B%89%E6%B5%81/"/>
      <url>/2019/11/08/%E7%9B%B4%E6%92%AD%E7%B3%BB%E5%88%97%E4%B8%89%E3%80%81IJKPlayer%E6%8B%89%E6%B5%81/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.jianshu.com/p/65fb80dff4d6" target="_blank" rel="noopener">https://www.jianshu.com/p/65fb80dff4d6</a></p><p>合并真机和模拟器的framework</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lipo -create 真机framework路径 模拟器framework路径 -output 合并的文件路径</span><br></pre></td></tr></table></figure><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> UIKit</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">playerViewController</span>: <span class="title">UIViewController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> iPlayer:<span class="type">IJKFFMoviePlayerController?</span> </span><br><span class="line">    </span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">func</span> <span class="title">viewDidLoad</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="keyword">super</span>.viewDidLoad()</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">let</span> options:<span class="type">IJKFFOptions</span> = <span class="type">IJKFFOptions</span>.byDefault()</span><br><span class="line">        <span class="keyword">let</span> url:<span class="type">URL</span> = <span class="type">URL</span>.<span class="keyword">init</span>(string: <span class="string">"rtmp://live.hkstv.hk.lxdns.com/live/hks"</span>)!</span><br><span class="line"> </span><br><span class="line">        </span><br><span class="line">        <span class="keyword">self</span>.iPlayer = <span class="type">IJKFFMoviePlayerController</span>.<span class="keyword">init</span>(contentURL: url, with: options)</span><br><span class="line">        <span class="keyword">var</span> arm1 = <span class="type">UIViewAutoresizing</span>.<span class="keyword">init</span>(rawValue: <span class="number">0</span>)</span><br><span class="line">        arm1.insert(<span class="type">UIViewAutoresizing</span>.flexibleWidth)</span><br><span class="line">        arm1.insert(<span class="type">UIViewAutoresizing</span>.flexibleHeight) </span><br><span class="line">        <span class="keyword">self</span>.iPlayer?.view.autoresizingMask = arm1</span><br><span class="line">        <span class="keyword">self</span>.iPlayer?.view.backgroundColor = <span class="type">UIColor</span>.white</span><br><span class="line">        <span class="keyword">self</span>.iPlayer?.view.frame = <span class="type">CGRect</span>.<span class="keyword">init</span>(x: <span class="number">0</span>, y: <span class="number">0</span>, width: <span class="type">UIScreen</span>.main.bounds.size.width, height: <span class="number">300</span>)</span><br><span class="line">        <span class="keyword">self</span>.iPlayer?.scalingMode = .aspectFit</span><br><span class="line">        <span class="keyword">self</span>.iPlayer?.shouldAutoplay = <span class="literal">true</span></span><br><span class="line">        <span class="keyword">self</span>.view.autoresizesSubviews = <span class="literal">true</span></span><br><span class="line">        <span class="keyword">self</span>.view.addSubview((<span class="keyword">self</span>.iPlayer?.view)!)</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// Do any additional setup after loading the view, typically from a nib.</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">func</span> <span class="title">didReceiveMemoryWarning</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="keyword">super</span>.didReceiveMemoryWarning()</span><br><span class="line">        <span class="comment">// Dispose of any resources that can be recreated.</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">func</span> <span class="title">viewWillAppear</span><span class="params">(<span class="number">_</span> animated: Bool)</span></span> &#123;</span><br><span class="line">        <span class="keyword">super</span>.viewWillAppear(animated)</span><br><span class="line">        <span class="keyword">self</span>.iPlayer?.prepareToPlay() <span class="comment">//准备</span></span><br><span class="line">        <span class="keyword">self</span>.iPlayer?.play() <span class="comment">//播放</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">func</span> <span class="title">viewWillDisappear</span><span class="params">(<span class="number">_</span> animated: Bool)</span></span> &#123;</span><br><span class="line">        <span class="keyword">super</span>.viewWillDisappear(animated)</span><br><span class="line">        <span class="keyword">self</span>.iPlayer?.pause()<span class="comment">//暂停</span></span><br><span class="line"><span class="comment">//        self.iPlayer?.shutdown() //销毁</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> iOS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 直播 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>直播系列二、LFLiveKit推流</title>
      <link href="/2019/11/08/%E7%9B%B4%E6%92%AD%E7%B3%BB%E5%88%97%E4%BA%8C%E3%80%81LFLiveKit%E6%8E%A8%E6%B5%81/"/>
      <url>/2019/11/08/%E7%9B%B4%E6%92%AD%E7%B3%BB%E5%88%97%E4%BA%8C%E3%80%81LFLiveKit%E6%8E%A8%E6%B5%81/</url>
      
        <content type="html"><![CDATA[<blockquote><p>LFLiveKit：框架支持RTMP，由Adobe公司开发。github地址<a href="https://github.com/LaiFengiOS/LFLiveKit" target="_blank" rel="noopener">https://github.com/LaiFengiOS/LFLiveKit</a></p></blockquote><p>LFLiveKit库里已经集成GPUImage框架用于美颜功能，GPUImage基于OpenGl开发，纯OC语言框架，封装好了各种滤镜同时也可以编写自定义的滤镜，其本身内置了多达125种常见的滤镜效果。</p><p>LFLiveKit库通过pod导入项目</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pod '<span class="type">LFLiveKit'</span></span><br></pre></td></tr></table></figure><p>配置上传地址</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> stream = <span class="type">LFLiveStreamInfo</span>()</span><br><span class="line">stream.url = <span class="string">"rtmp://192.168.***.***:1935/rtmplive/room"</span></span><br><span class="line">session.startLive(stream)</span><br></pre></td></tr></table></figure><p>demo </p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  ViewController.swift</span></span><br><span class="line"><span class="comment">//  IfeiyvLiveVideo</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  Created by l on 2019/7/1.</span></span><br><span class="line"><span class="comment">//  Copyright © 2019 ifeiyv. All rights reserved.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> UIKit</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ViewController</span>: <span class="title">UIViewController</span>, <span class="title">LFLiveSessionDelegate</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">func</span> <span class="title">viewDidLoad</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="keyword">super</span>.viewDidLoad()</span><br><span class="line">        <span class="comment">// Do any additional setup after loading the view, typically from a nib.</span></span><br><span class="line">        </span><br><span class="line">        session.delegate = <span class="keyword">self</span></span><br><span class="line">        session.preView = <span class="keyword">self</span>.view</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">self</span>.requestAccessForVideo()</span><br><span class="line">        <span class="keyword">self</span>.requestAccessForAudio()</span><br><span class="line">        <span class="keyword">self</span>.view.backgroundColor = <span class="type">UIColor</span>.clear</span><br><span class="line">        <span class="keyword">self</span>.view.addSubview(containerView)</span><br><span class="line">        containerView.addSubview(stateLabel)</span><br><span class="line">        containerView.addSubview(closeButton)</span><br><span class="line">        containerView.addSubview(beautyButton)</span><br><span class="line">        containerView.addSubview(cameraButton)</span><br><span class="line">        containerView.addSubview(startLiveButton)</span><br><span class="line">        </span><br><span class="line">        cameraButton.addTarget(<span class="keyword">self</span>, action: #selector(didTappedCameraButton(<span class="number">_</span>:)), <span class="keyword">for</span>:.touchUpInside)</span><br><span class="line">        beautyButton.addTarget(<span class="keyword">self</span>, action: #selector(didTappedBeautyButton(<span class="number">_</span>:)), <span class="keyword">for</span>: .touchUpInside)</span><br><span class="line">        startLiveButton.addTarget(<span class="keyword">self</span>, action: #selector(didTappedStartLiveButton(<span class="number">_</span>:)), <span class="keyword">for</span>: .touchUpInside)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">func</span> <span class="title">didReceiveMemoryWarning</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="keyword">super</span>.didReceiveMemoryWarning()</span><br><span class="line">        <span class="comment">// Dispose of any resources that can be recreated.</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//MARK: AccessAuth</span></span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">requestAccessForVideo</span><span class="params">()</span></span> -&gt; <span class="type">Void</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> status = <span class="type">AVCaptureDevice</span>.authorizationStatus(<span class="keyword">for</span>: <span class="type">AVMediaType</span>.video);</span><br><span class="line">        <span class="keyword">switch</span> status  &#123;</span><br><span class="line">        <span class="comment">// 许可对话没有出现，发起授权许可</span></span><br><span class="line">        <span class="keyword">case</span> <span class="type">AVAuthorizationStatus</span>.notDetermined:</span><br><span class="line">            <span class="type">AVCaptureDevice</span>.requestAccess(<span class="keyword">for</span>: <span class="type">AVMediaType</span>.video, completionHandler: &#123; (granted) <span class="keyword">in</span></span><br><span class="line">                <span class="keyword">if</span>(granted)&#123;</span><br><span class="line">                    <span class="type">DispatchQueue</span>.main.async &#123;</span><br><span class="line">                        <span class="keyword">self</span>.session.running = <span class="literal">true</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="comment">// 已经开启授权，可继续</span></span><br><span class="line">        <span class="keyword">case</span> <span class="type">AVAuthorizationStatus</span>.authorized:</span><br><span class="line">            session.running = <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="comment">// 用户明确地拒绝授权，或者相机设备无法访问</span></span><br><span class="line">        <span class="keyword">case</span> <span class="type">AVAuthorizationStatus</span>.denied: <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">case</span> <span class="type">AVAuthorizationStatus</span>.restricted:<span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">requestAccessForAudio</span><span class="params">()</span></span> -&gt; <span class="type">Void</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> status = <span class="type">AVCaptureDevice</span>.authorizationStatus(<span class="keyword">for</span>:<span class="type">AVMediaType</span>.audio)</span><br><span class="line">        <span class="keyword">switch</span> status  &#123;</span><br><span class="line">        <span class="comment">// 许可对话没有出现，发起授权许可</span></span><br><span class="line">        <span class="keyword">case</span> <span class="type">AVAuthorizationStatus</span>.notDetermined:</span><br><span class="line">            <span class="type">AVCaptureDevice</span>.requestAccess(<span class="keyword">for</span>: <span class="type">AVMediaType</span>.audio, completionHandler: &#123; (granted) <span class="keyword">in</span></span><br><span class="line">                </span><br><span class="line">            &#125;)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="comment">// 已经开启授权，可继续</span></span><br><span class="line">        <span class="keyword">case</span> <span class="type">AVAuthorizationStatus</span>.authorized:</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="comment">// 用户明确地拒绝授权，或者相机设备无法访问</span></span><br><span class="line">        <span class="keyword">case</span> <span class="type">AVAuthorizationStatus</span>.denied: <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">case</span> <span class="type">AVAuthorizationStatus</span>.restricted:<span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//MARK: - Callbacks</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 回调</span></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">liveSession</span><span class="params">(<span class="number">_</span> session: LFLiveSession?, debugInfo: LFLiveDebug?)</span></span> &#123;</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"debugInfo: \(debugInfo?.currentBandwidth)"</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">liveSession</span><span class="params">(<span class="number">_</span> session: LFLiveSession?, errorCode: LFLiveSocketErrorCode)</span></span> &#123;</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"errorCode: \(errorCode.rawValue)"</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">liveSession</span><span class="params">(<span class="number">_</span> session: LFLiveSession?, liveStateDidChange state: LFLiveState)</span></span> &#123;</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"liveStateDidChange: \(state.rawValue)"</span>)</span><br><span class="line">        <span class="keyword">switch</span> state &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="type">LFLiveState</span>.ready:</span><br><span class="line">            stateLabel.text = <span class="string">"未连接"</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="type">LFLiveState</span>.pending:</span><br><span class="line">            stateLabel.text = <span class="string">"连接中"</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="type">LFLiveState</span>.start:</span><br><span class="line">            stateLabel.text = <span class="string">"已连接"</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="type">LFLiveState</span>.error:</span><br><span class="line">            stateLabel.text = <span class="string">"连接错误"</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="type">LFLiveState</span>.stop:</span><br><span class="line">            stateLabel.text = <span class="string">"未连接"</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//MARK: - Events</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 开始直播</span></span><br><span class="line">    <span class="meta">@objc</span> <span class="function"><span class="keyword">func</span> <span class="title">didTappedStartLiveButton</span><span class="params">(<span class="number">_</span> button: UIButton)</span></span> -&gt; <span class="type">Void</span> &#123;</span><br><span class="line">        startLiveButton.isSelected = !startLiveButton.isSelected;</span><br><span class="line">        <span class="keyword">if</span> (startLiveButton.isSelected) &#123;</span><br><span class="line">            startLiveButton.setTitle(<span class="string">"结束直播"</span>, <span class="keyword">for</span>: <span class="type">UIControl</span>.<span class="type">State</span>())</span><br><span class="line">            <span class="keyword">let</span> stream = <span class="type">LFLiveStreamInfo</span>()</span><br><span class="line">            stream.url = <span class="string">"rtmp://192.168.1.148:1935/rtmplive/room"</span></span><br><span class="line">            session.startLive(stream)</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            startLiveButton.setTitle(<span class="string">"开始直播"</span>, <span class="keyword">for</span>: <span class="type">UIControl</span>.<span class="type">State</span>())</span><br><span class="line">            session.stopLive()</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 美颜</span></span><br><span class="line">    <span class="meta">@objc</span> <span class="function"><span class="keyword">func</span> <span class="title">didTappedBeautyButton</span><span class="params">(<span class="number">_</span> button: UIButton)</span></span> -&gt; <span class="type">Void</span> &#123;</span><br><span class="line">        session.beautyFace = !session.beautyFace;</span><br><span class="line">        beautyButton.isSelected = !session.beautyFace</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 摄像头</span></span><br><span class="line">    <span class="meta">@objc</span> <span class="function"><span class="keyword">func</span> <span class="title">didTappedCameraButton</span><span class="params">(<span class="number">_</span> button: UIButton)</span></span> -&gt; <span class="type">Void</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> devicePositon = session.captureDevicePosition;</span><br><span class="line">        session.captureDevicePosition = (devicePositon == <span class="type">AVCaptureDevice</span>.<span class="type">Position</span>.back) ? <span class="type">AVCaptureDevice</span>.<span class="type">Position</span>.front : <span class="type">AVCaptureDevice</span>.<span class="type">Position</span>.back;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 关闭</span></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">didTappedCloseButton</span><span class="params">(<span class="number">_</span> button: UIButton)</span></span> -&gt; <span class="type">Void</span>  &#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//MARK: - Getters and Setters</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">//  默认分辨率368 ＊ 640  音频：44.1 iphone6以上48  双声道  方向竖屏</span></span><br><span class="line">    <span class="keyword">var</span> session: <span class="type">LFLiveSession</span> = &#123;</span><br><span class="line">        <span class="keyword">let</span> audioConfiguration = <span class="type">LFLiveAudioConfiguration</span>.defaultConfiguration(<span class="keyword">for</span>: <span class="type">LFLiveAudioQuality</span>.high)</span><br><span class="line">        <span class="keyword">let</span> videoConfiguration = <span class="type">LFLiveVideoConfiguration</span>.defaultConfiguration(<span class="keyword">for</span>: <span class="type">LFLiveVideoQuality</span>.low3)</span><br><span class="line">        <span class="keyword">let</span> session = <span class="type">LFLiveSession</span>(audioConfiguration: audioConfiguration, videoConfiguration: videoConfiguration)</span><br><span class="line">        <span class="keyword">return</span> session!</span><br><span class="line">    &#125;()</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 视图</span></span><br><span class="line">    <span class="keyword">var</span> containerView: <span class="type">UIView</span> = &#123;</span><br><span class="line">        <span class="keyword">let</span> containerView = <span class="type">UIView</span>(frame: <span class="type">CGRect</span>(x: <span class="number">0</span>, y: <span class="number">0</span>, width: <span class="type">UIScreen</span>.main.bounds.width, height: <span class="type">UIScreen</span>.main.bounds.height))</span><br><span class="line">        containerView.backgroundColor = <span class="type">UIColor</span>.clear</span><br><span class="line">        containerView.autoresizingMask = [<span class="type">UIView</span>.<span class="type">AutoresizingMask</span>.flexibleHeight, <span class="type">UIView</span>.<span class="type">AutoresizingMask</span>.flexibleHeight]</span><br><span class="line">        <span class="keyword">return</span> containerView</span><br><span class="line">    &#125;()</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 状态Label</span></span><br><span class="line">    <span class="keyword">var</span> stateLabel: <span class="type">UILabel</span> = &#123;</span><br><span class="line">        <span class="keyword">let</span> stateLabel = <span class="type">UILabel</span>(frame: <span class="type">CGRect</span>(x: <span class="number">20</span>, y: <span class="number">20</span>, width: <span class="number">80</span>, height: <span class="number">40</span>))</span><br><span class="line">        stateLabel.text = <span class="string">"未连接"</span></span><br><span class="line">        stateLabel.textColor = <span class="type">UIColor</span>.white</span><br><span class="line">        stateLabel.font = <span class="type">UIFont</span>.systemFont(ofSize: <span class="number">14</span>)</span><br><span class="line">        <span class="keyword">return</span> stateLabel</span><br><span class="line">    &#125;()</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 关闭按钮</span></span><br><span class="line">    <span class="keyword">var</span> closeButton: <span class="type">UIButton</span> = &#123;</span><br><span class="line">        <span class="keyword">let</span> closeButton = <span class="type">UIButton</span>(frame: <span class="type">CGRect</span>(x: <span class="type">UIScreen</span>.main.bounds.width - <span class="number">10</span> - <span class="number">44</span>, y: <span class="number">20</span>, width: <span class="number">44</span>, height: <span class="number">44</span>))</span><br><span class="line">        closeButton.setImage(<span class="type">UIImage</span>(named: <span class="string">"close_preview"</span>), <span class="keyword">for</span>: <span class="type">UIControl</span>.<span class="type">State</span>())</span><br><span class="line">        <span class="keyword">return</span> closeButton</span><br><span class="line">    &#125;()</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 摄像头</span></span><br><span class="line">    <span class="keyword">var</span> cameraButton: <span class="type">UIButton</span> = &#123;</span><br><span class="line">        <span class="keyword">let</span> cameraButton = <span class="type">UIButton</span>(frame: <span class="type">CGRect</span>(x: <span class="type">UIScreen</span>.main.bounds.width - <span class="number">54</span> * <span class="number">2</span>, y: <span class="number">20</span>, width: <span class="number">44</span>, height: <span class="number">44</span>))</span><br><span class="line">        cameraButton.setImage(<span class="type">UIImage</span>(named: <span class="string">"camra_preview"</span>), <span class="keyword">for</span>: <span class="type">UIControl</span>.<span class="type">State</span>())</span><br><span class="line">        <span class="keyword">return</span> cameraButton</span><br><span class="line">    &#125;()</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 摄像头</span></span><br><span class="line">    <span class="keyword">var</span> beautyButton: <span class="type">UIButton</span> = &#123;</span><br><span class="line">        <span class="keyword">let</span> beautyButton = <span class="type">UIButton</span>(frame: <span class="type">CGRect</span>(x: <span class="type">UIScreen</span>.main.bounds.width - <span class="number">54</span> * <span class="number">3</span>, y: <span class="number">20</span>, width: <span class="number">44</span>, height: <span class="number">44</span>))</span><br><span class="line">        beautyButton.setImage(<span class="type">UIImage</span>(named: <span class="string">"camra_beauty"</span>), <span class="keyword">for</span>: <span class="type">UIControl</span>.<span class="type">State</span>.selected)</span><br><span class="line">        beautyButton.setImage(<span class="type">UIImage</span>(named: <span class="string">"camra_beauty_close"</span>), <span class="keyword">for</span>: <span class="type">UIControl</span>.<span class="type">State</span>())</span><br><span class="line">        <span class="keyword">return</span> beautyButton</span><br><span class="line">    &#125;()</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 开始直播按钮</span></span><br><span class="line">    <span class="keyword">var</span> startLiveButton: <span class="type">UIButton</span> = &#123;</span><br><span class="line">        <span class="keyword">let</span> startLiveButton = <span class="type">UIButton</span>(frame: <span class="type">CGRect</span>(x: <span class="number">30</span>, y: <span class="type">UIScreen</span>.main.bounds.height - <span class="number">50</span>, width: <span class="type">UIScreen</span>.main.bounds.width - <span class="number">10</span> - <span class="number">44</span>, height: <span class="number">44</span>))</span><br><span class="line">        startLiveButton.layer.cornerRadius = <span class="number">22</span></span><br><span class="line">        startLiveButton.setTitleColor(<span class="type">UIColor</span>.black, <span class="keyword">for</span>:<span class="type">UIControl</span>.<span class="type">State</span>())</span><br><span class="line">        startLiveButton.setTitle(<span class="string">"开始直播"</span>, <span class="keyword">for</span>: <span class="type">UIControl</span>.<span class="type">State</span>())</span><br><span class="line">        startLiveButton.titleLabel!.font = <span class="type">UIFont</span>.systemFont(ofSize: <span class="number">14</span>)</span><br><span class="line">        startLiveButton.backgroundColor = <span class="type">UIColor</span>(red: <span class="number">50</span>/<span class="number">255.0</span>, green: <span class="number">32</span>/<span class="number">255.0</span>, blue: <span class="number">245</span>/<span class="number">255.0</span>, alpha: <span class="number">1</span>)<span class="comment">//colorLiteralRed: 50, green: 32, blue: 245, alpha: 1</span></span><br><span class="line">        <span class="keyword">return</span> startLiveButton</span><br><span class="line">    &#125;()</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  ViewController.swift</span></span><br><span class="line"><span class="comment">//  IfeiyvLiveVideo</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  Created by l on 2019/7/1.</span></span><br><span class="line"><span class="comment">//  Copyright © 2019 ifeiyv. All rights reserved.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> UIKit</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ViewController</span>: <span class="title">UIViewController</span>, <span class="title">LFLiveSessionDelegate</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">func</span> <span class="title">viewDidLoad</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="keyword">super</span>.viewDidLoad()</span><br><span class="line">        <span class="comment">// Do any additional setup after loading the view, typically from a nib.</span></span><br><span class="line">        </span><br><span class="line">        session.delegate = <span class="keyword">self</span></span><br><span class="line">        session.preView = <span class="keyword">self</span>.view</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">self</span>.requestAccessForVideo()</span><br><span class="line">        <span class="keyword">self</span>.requestAccessForAudio()</span><br><span class="line">        <span class="keyword">self</span>.view.backgroundColor = <span class="type">UIColor</span>.clear</span><br><span class="line">        <span class="keyword">self</span>.view.addSubview(containerView)</span><br><span class="line">        containerView.addSubview(stateLabel)</span><br><span class="line">        containerView.addSubview(closeButton)</span><br><span class="line">        containerView.addSubview(beautyButton)</span><br><span class="line">        containerView.addSubview(cameraButton)</span><br><span class="line">        containerView.addSubview(startLiveButton)</span><br><span class="line">        </span><br><span class="line">        cameraButton.addTarget(<span class="keyword">self</span>, action: #selector(didTappedCameraButton(<span class="number">_</span>:)), <span class="keyword">for</span>:.touchUpInside)</span><br><span class="line">        beautyButton.addTarget(<span class="keyword">self</span>, action: #selector(didTappedBeautyButton(<span class="number">_</span>:)), <span class="keyword">for</span>: .touchUpInside)</span><br><span class="line">        startLiveButton.addTarget(<span class="keyword">self</span>, action: #selector(didTappedStartLiveButton(<span class="number">_</span>:)), <span class="keyword">for</span>: .touchUpInside)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">func</span> <span class="title">didReceiveMemoryWarning</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="keyword">super</span>.didReceiveMemoryWarning()</span><br><span class="line">        <span class="comment">// Dispose of any resources that can be recreated.</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//MARK: AccessAuth</span></span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">requestAccessForVideo</span><span class="params">()</span></span> -&gt; <span class="type">Void</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> status = <span class="type">AVCaptureDevice</span>.authorizationStatus(<span class="keyword">for</span>: <span class="type">AVMediaType</span>.video);</span><br><span class="line">        <span class="keyword">switch</span> status  &#123;</span><br><span class="line">        <span class="comment">// 许可对话没有出现，发起授权许可</span></span><br><span class="line">        <span class="keyword">case</span> <span class="type">AVAuthorizationStatus</span>.notDetermined:</span><br><span class="line">            <span class="type">AVCaptureDevice</span>.requestAccess(<span class="keyword">for</span>: <span class="type">AVMediaType</span>.video, completionHandler: &#123; (granted) <span class="keyword">in</span></span><br><span class="line">                <span class="keyword">if</span>(granted)&#123;</span><br><span class="line">                    <span class="type">DispatchQueue</span>.main.async &#123;</span><br><span class="line">                        <span class="keyword">self</span>.session.running = <span class="literal">true</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="comment">// 已经开启授权，可继续</span></span><br><span class="line">        <span class="keyword">case</span> <span class="type">AVAuthorizationStatus</span>.authorized:</span><br><span class="line">            session.running = <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="comment">// 用户明确地拒绝授权，或者相机设备无法访问</span></span><br><span class="line">        <span class="keyword">case</span> <span class="type">AVAuthorizationStatus</span>.denied: <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">case</span> <span class="type">AVAuthorizationStatus</span>.restricted:<span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">requestAccessForAudio</span><span class="params">()</span></span> -&gt; <span class="type">Void</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> status = <span class="type">AVCaptureDevice</span>.authorizationStatus(<span class="keyword">for</span>:<span class="type">AVMediaType</span>.audio)</span><br><span class="line">        <span class="keyword">switch</span> status  &#123;</span><br><span class="line">        <span class="comment">// 许可对话没有出现，发起授权许可</span></span><br><span class="line">        <span class="keyword">case</span> <span class="type">AVAuthorizationStatus</span>.notDetermined:</span><br><span class="line">            <span class="type">AVCaptureDevice</span>.requestAccess(<span class="keyword">for</span>: <span class="type">AVMediaType</span>.audio, completionHandler: &#123; (granted) <span class="keyword">in</span></span><br><span class="line">                </span><br><span class="line">            &#125;)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="comment">// 已经开启授权，可继续</span></span><br><span class="line">        <span class="keyword">case</span> <span class="type">AVAuthorizationStatus</span>.authorized:</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="comment">// 用户明确地拒绝授权，或者相机设备无法访问</span></span><br><span class="line">        <span class="keyword">case</span> <span class="type">AVAuthorizationStatus</span>.denied: <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">case</span> <span class="type">AVAuthorizationStatus</span>.restricted:<span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//MARK: - Callbacks</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 回调</span></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">liveSession</span><span class="params">(<span class="number">_</span> session: LFLiveSession?, debugInfo: LFLiveDebug?)</span></span> &#123;</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"debugInfo: \(debugInfo?.currentBandwidth)"</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">liveSession</span><span class="params">(<span class="number">_</span> session: LFLiveSession?, errorCode: LFLiveSocketErrorCode)</span></span> &#123;</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"errorCode: \(errorCode.rawValue)"</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">liveSession</span><span class="params">(<span class="number">_</span> session: LFLiveSession?, liveStateDidChange state: LFLiveState)</span></span> &#123;</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"liveStateDidChange: \(state.rawValue)"</span>)</span><br><span class="line">        <span class="keyword">switch</span> state &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="type">LFLiveState</span>.ready:</span><br><span class="line">            stateLabel.text = <span class="string">"未连接"</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="type">LFLiveState</span>.pending:</span><br><span class="line">            stateLabel.text = <span class="string">"连接中"</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="type">LFLiveState</span>.start:</span><br><span class="line">            stateLabel.text = <span class="string">"已连接"</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="type">LFLiveState</span>.error:</span><br><span class="line">            stateLabel.text = <span class="string">"连接错误"</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="type">LFLiveState</span>.stop:</span><br><span class="line">            stateLabel.text = <span class="string">"未连接"</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//MARK: - Events</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 开始直播</span></span><br><span class="line">    <span class="meta">@objc</span> <span class="function"><span class="keyword">func</span> <span class="title">didTappedStartLiveButton</span><span class="params">(<span class="number">_</span> button: UIButton)</span></span> -&gt; <span class="type">Void</span> &#123;</span><br><span class="line">        startLiveButton.isSelected = !startLiveButton.isSelected;</span><br><span class="line">        <span class="keyword">if</span> (startLiveButton.isSelected) &#123;</span><br><span class="line">            startLiveButton.setTitle(<span class="string">"结束直播"</span>, <span class="keyword">for</span>: <span class="type">UIControl</span>.<span class="type">State</span>())</span><br><span class="line">            <span class="keyword">let</span> stream = <span class="type">LFLiveStreamInfo</span>()</span><br><span class="line">            stream.url = <span class="string">"rtmp://192.168.1.148:1935/rtmplive/room"</span></span><br><span class="line">            session.startLive(stream)</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            startLiveButton.setTitle(<span class="string">"开始直播"</span>, <span class="keyword">for</span>: <span class="type">UIControl</span>.<span class="type">State</span>())</span><br><span class="line">            session.stopLive()</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 美颜</span></span><br><span class="line">    <span class="meta">@objc</span> <span class="function"><span class="keyword">func</span> <span class="title">didTappedBeautyButton</span><span class="params">(<span class="number">_</span> button: UIButton)</span></span> -&gt; <span class="type">Void</span> &#123;</span><br><span class="line">        session.beautyFace = !session.beautyFace;</span><br><span class="line">        beautyButton.isSelected = !session.beautyFace</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 摄像头</span></span><br><span class="line">    <span class="meta">@objc</span> <span class="function"><span class="keyword">func</span> <span class="title">didTappedCameraButton</span><span class="params">(<span class="number">_</span> button: UIButton)</span></span> -&gt; <span class="type">Void</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> devicePositon = session.captureDevicePosition;</span><br><span class="line">        session.captureDevicePosition = (devicePositon == <span class="type">AVCaptureDevice</span>.<span class="type">Position</span>.back) ? <span class="type">AVCaptureDevice</span>.<span class="type">Position</span>.front : <span class="type">AVCaptureDevice</span>.<span class="type">Position</span>.back;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 关闭</span></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">didTappedCloseButton</span><span class="params">(<span class="number">_</span> button: UIButton)</span></span> -&gt; <span class="type">Void</span>  &#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//MARK: - Getters and Setters</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">//  默认分辨率368 ＊ 640  音频：44.1 iphone6以上48  双声道  方向竖屏</span></span><br><span class="line">    <span class="keyword">var</span> session: <span class="type">LFLiveSession</span> = &#123;</span><br><span class="line">        <span class="keyword">let</span> audioConfiguration = <span class="type">LFLiveAudioConfiguration</span>.defaultConfiguration(<span class="keyword">for</span>: <span class="type">LFLiveAudioQuality</span>.high)</span><br><span class="line">        <span class="keyword">let</span> videoConfiguration = <span class="type">LFLiveVideoConfiguration</span>.defaultConfiguration(<span class="keyword">for</span>: <span class="type">LFLiveVideoQuality</span>.low3)</span><br><span class="line">        <span class="keyword">let</span> session = <span class="type">LFLiveSession</span>(audioConfiguration: audioConfiguration, videoConfiguration: videoConfiguration)</span><br><span class="line">        <span class="keyword">return</span> session!</span><br><span class="line">    &#125;()</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 视图</span></span><br><span class="line">    <span class="keyword">var</span> containerView: <span class="type">UIView</span> = &#123;</span><br><span class="line">        <span class="keyword">let</span> containerView = <span class="type">UIView</span>(frame: <span class="type">CGRect</span>(x: <span class="number">0</span>, y: <span class="number">0</span>, width: <span class="type">UIScreen</span>.main.bounds.width, height: <span class="type">UIScreen</span>.main.bounds.height))</span><br><span class="line">        containerView.backgroundColor = <span class="type">UIColor</span>.clear</span><br><span class="line">        containerView.autoresizingMask = [<span class="type">UIView</span>.<span class="type">AutoresizingMask</span>.flexibleHeight, <span class="type">UIView</span>.<span class="type">AutoresizingMask</span>.flexibleHeight]</span><br><span class="line">        <span class="keyword">return</span> containerView</span><br><span class="line">    &#125;()</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 状态Label</span></span><br><span class="line">    <span class="keyword">var</span> stateLabel: <span class="type">UILabel</span> = &#123;</span><br><span class="line">        <span class="keyword">let</span> stateLabel = <span class="type">UILabel</span>(frame: <span class="type">CGRect</span>(x: <span class="number">20</span>, y: <span class="number">20</span>, width: <span class="number">80</span>, height: <span class="number">40</span>))</span><br><span class="line">        stateLabel.text = <span class="string">"未连接"</span></span><br><span class="line">        stateLabel.textColor = <span class="type">UIColor</span>.white</span><br><span class="line">        stateLabel.font = <span class="type">UIFont</span>.systemFont(ofSize: <span class="number">14</span>)</span><br><span class="line">        <span class="keyword">return</span> stateLabel</span><br><span class="line">    &#125;()</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 关闭按钮</span></span><br><span class="line">    <span class="keyword">var</span> closeButton: <span class="type">UIButton</span> = &#123;</span><br><span class="line">        <span class="keyword">let</span> closeButton = <span class="type">UIButton</span>(frame: <span class="type">CGRect</span>(x: <span class="type">UIScreen</span>.main.bounds.width - <span class="number">10</span> - <span class="number">44</span>, y: <span class="number">20</span>, width: <span class="number">44</span>, height: <span class="number">44</span>))</span><br><span class="line">        closeButton.setImage(<span class="type">UIImage</span>(named: <span class="string">"close_preview"</span>), <span class="keyword">for</span>: <span class="type">UIControl</span>.<span class="type">State</span>())</span><br><span class="line">        <span class="keyword">return</span> closeButton</span><br><span class="line">    &#125;()</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 摄像头</span></span><br><span class="line">    <span class="keyword">var</span> cameraButton: <span class="type">UIButton</span> = &#123;</span><br><span class="line">        <span class="keyword">let</span> cameraButton = <span class="type">UIButton</span>(frame: <span class="type">CGRect</span>(x: <span class="type">UIScreen</span>.main.bounds.width - <span class="number">54</span> * <span class="number">2</span>, y: <span class="number">20</span>, width: <span class="number">44</span>, height: <span class="number">44</span>))</span><br><span class="line">        cameraButton.setImage(<span class="type">UIImage</span>(named: <span class="string">"camra_preview"</span>), <span class="keyword">for</span>: <span class="type">UIControl</span>.<span class="type">State</span>())</span><br><span class="line">        <span class="keyword">return</span> cameraButton</span><br><span class="line">    &#125;()</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 摄像头</span></span><br><span class="line">    <span class="keyword">var</span> beautyButton: <span class="type">UIButton</span> = &#123;</span><br><span class="line">        <span class="keyword">let</span> beautyButton = <span class="type">UIButton</span>(frame: <span class="type">CGRect</span>(x: <span class="type">UIScreen</span>.main.bounds.width - <span class="number">54</span> * <span class="number">3</span>, y: <span class="number">20</span>, width: <span class="number">44</span>, height: <span class="number">44</span>))</span><br><span class="line">        beautyButton.setImage(<span class="type">UIImage</span>(named: <span class="string">"camra_beauty"</span>), <span class="keyword">for</span>: <span class="type">UIControl</span>.<span class="type">State</span>.selected)</span><br><span class="line">        beautyButton.setImage(<span class="type">UIImage</span>(named: <span class="string">"camra_beauty_close"</span>), <span class="keyword">for</span>: <span class="type">UIControl</span>.<span class="type">State</span>())</span><br><span class="line">        <span class="keyword">return</span> beautyButton</span><br><span class="line">    &#125;()</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 开始直播按钮</span></span><br><span class="line">    <span class="keyword">var</span> startLiveButton: <span class="type">UIButton</span> = &#123;</span><br><span class="line">        <span class="keyword">let</span> startLiveButton = <span class="type">UIButton</span>(frame: <span class="type">CGRect</span>(x: <span class="number">30</span>, y: <span class="type">UIScreen</span>.main.bounds.height - <span class="number">50</span>, width: <span class="type">UIScreen</span>.main.bounds.width - <span class="number">10</span> - <span class="number">44</span>, height: <span class="number">44</span>))</span><br><span class="line">        startLiveButton.layer.cornerRadius = <span class="number">22</span></span><br><span class="line">        startLiveButton.setTitleColor(<span class="type">UIColor</span>.black, <span class="keyword">for</span>:<span class="type">UIControl</span>.<span class="type">State</span>())</span><br><span class="line">        startLiveButton.setTitle(<span class="string">"开始直播"</span>, <span class="keyword">for</span>: <span class="type">UIControl</span>.<span class="type">State</span>())</span><br><span class="line">        startLiveButton.titleLabel!.font = <span class="type">UIFont</span>.systemFont(ofSize: <span class="number">14</span>)</span><br><span class="line">        startLiveButton.backgroundColor = <span class="type">UIColor</span>(red: <span class="number">50</span>/<span class="number">255.0</span>, green: <span class="number">32</span>/<span class="number">255.0</span>, blue: <span class="number">245</span>/<span class="number">255.0</span>, alpha: <span class="number">1</span>)<span class="comment">//colorLiteralRed: 50, green: 32, blue: 245, alpha: 1</span></span><br><span class="line">        <span class="keyword">return</span> startLiveButton</span><br><span class="line">    &#125;()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> iOS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 直播 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>直播系列一、创建本地rtmp服务器</title>
      <link href="/2019/11/08/%E7%9B%B4%E6%92%AD%E7%B3%BB%E5%88%97%E4%B8%80%E3%80%81%E5%88%9B%E5%BB%BA%E6%9C%AC%E5%9C%B0rtmp%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
      <url>/2019/11/08/%E7%9B%B4%E6%92%AD%E7%B3%BB%E5%88%97%E4%B8%80%E3%80%81%E5%88%9B%E5%BB%BA%E6%9C%AC%E5%9C%B0rtmp%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<h4 id="在网上搜索参考了大量文章，解决了N多Bug-终于实现了直播功能"><a href="#在网上搜索参考了大量文章，解决了N多Bug-终于实现了直播功能" class="headerlink" title="在网上搜索参考了大量文章，解决了N多Bug,终于实现了直播功能"></a>在网上搜索参考了大量文章，解决了N多Bug,终于实现了直播功能</h4><blockquote><p>nginx是非常优秀的开源服务器，用它来做hls或者rtmp流媒体服务器是非常不错的选择</p></blockquote><h4 id="1、安装Homebrow"><a href="#1、安装Homebrow" class="headerlink" title="1、安装Homebrow"></a>1、安装Homebrow</h4><p>（1）执行克隆命令,github的项目(<a href="https://github.com/denji/homebrew-nginx" target="_blank" rel="noopener">https://github.com/denji/homebrew-nginx</a>)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew tap denji/nginx</span><br></pre></td></tr></table></figure><blockquote><p>注意<code>brew tap homebrew/nginx</code>报下面的错误,<code>homebrew/nginx</code>已经弃用. 报错：<code>Error: homebrew/nginx was deprecated. This tap is now empty as all its formulae were migrated</code>.</p></blockquote><p>（2）执行安装命令:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install nginx-full --with-rtmp-module</span><br></pre></td></tr></table></figure><p>（3）至此nginx和rtmp模块就安装好了，下面开始来配置nginx的rtmp模块<br> 接下来看一下nginx安装在什么地方:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew info nginx-full</span><br></pre></td></tr></table></figure><p><em>打印信息</em></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">The default port has been <span class="built_in">set</span> <span class="keyword">in</span> /usr/<span class="built_in">local</span>/etc/nginx/nginx.conf to 8080 so that</span><br><span class="line">nginx can run without sudo.</span><br><span class="line"></span><br><span class="line">nginx will load all files <span class="keyword">in</span> /usr/<span class="built_in">local</span>/etc/nginx/servers/.</span><br><span class="line"></span><br><span class="line">- Tips -</span><br><span class="line">Run port 80:</span><br><span class="line"> $ sudo chown root:wheel /usr/<span class="built_in">local</span>/opt/nginx-full/bin/nginx</span><br><span class="line"> $ sudo chmod u+s /usr/<span class="built_in">local</span>/opt/nginx-full/bin/nginx</span><br><span class="line">Reload config:</span><br><span class="line"> $ nginx -s reload</span><br><span class="line">Reopen Logfile:</span><br><span class="line"> $ nginx -s reopen</span><br><span class="line">Stop process:</span><br><span class="line"> $ nginx -s stop</span><br><span class="line">Waiting on <span class="built_in">exit</span> process</span><br><span class="line"> $ nginx -s quit</span><br><span class="line"></span><br><span class="line">To have launchd start denji/nginx/nginx-full now and restart at login:</span><br><span class="line">  brew services start denji/nginx/nginx-full</span><br><span class="line">Or, <span class="keyword">if</span> you don<span class="string">'t want/need a background service you can just run:</span></span><br><span class="line"><span class="string">  nginx</span></span><br></pre></td></tr></table></figure><p>nginx安装所在位置:</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/opt/nginx-full/bin/nginx</span><br></pre></td></tr></table></figure><p>nginx配置文件所在位置:</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/etc/nginx/nginx.conf</span><br></pre></td></tr></table></figure><p>（4）启动nginx,执行命令:</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">sudo</span>  nginx</span><br></pre></td></tr></table></figure><h4 id="2、测试nginx："><a href="#2、测试nginx：" class="headerlink" title="2、测试nginx："></a>2、测试nginx：</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">在浏览器中打开如下地址：http://localhost:8080入过</span><br></pre></td></tr></table></figure><p>如果出现<code>Welcome to nginx!</code>,说明安装成功.</p><p>如果终端上提示：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nginx: [emerg] bind() to 0.0.0.0:8080 failed (48: Address already in use)</span><br></pre></td></tr></table></figure><p>则表示8080端口被占用了, 查看端口PID</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">lsof</span> -i tcp:<span class="number">8080</span></span><br></pre></td></tr></table></figure><p>kill掉占用8080端口的PID</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">kill</span> <span class="number">9603</span>（这里替换成占用<span class="number">8080</span>端口的PID）</span><br></pre></td></tr></table></figure><h4 id="3、重新加载nginx的配置文件"><a href="#3、重新加载nginx的配置文件" class="headerlink" title="3、重新加载nginx的配置文件"></a>3、重新加载nginx的配置文件</h4><p>（1）修改nginx.conf这个配置文件，配置rtmp<br> 复制nginx配置文件所在位置:</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">vi</span> /usr/local/etc/nginx/nginx.conf</span><br></pre></td></tr></table></figure><p>（2）执行上面命令会直接编辑,或者直接前往当前文件用记事本打开.<br> 滚动到最后面(最后一个}后面即可，不能在{}里面)，添加一下代码，进行配置，最后记得保存。</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">rtmp</span> &#123;  </span><br><span class="line">  <span class="section">server</span> &#123;  </span><br><span class="line">      <span class="attribute">listen</span> <span class="number">1935</span>;  </span><br><span class="line">    <span class="comment">#直播流配置  </span></span><br><span class="line">      <span class="attribute">application</span> rtmplive &#123;  </span><br><span class="line">          <span class="attribute">live</span> <span class="literal">on</span>;  </span><br><span class="line">          <span class="comment">#为 rtmp 引擎设置最大连接数。默认为 off  </span></span><br><span class="line">          <span class="attribute">max_connections</span> <span class="number">1024</span>;  </span><br><span class="line">       &#125;  </span><br><span class="line">      <span class="attribute">application</span> hls&#123;  </span><br><span class="line">          <span class="attribute">live</span> <span class="literal">on</span>;  </span><br><span class="line">          <span class="attribute">hls</span> <span class="literal">on</span>;  </span><br><span class="line">          <span class="attribute">hls_path</span> /usr/local/var/www/hls;  </span><br><span class="line">          <span class="attribute">hls_fragment</span> <span class="number">1s</span>;  </span><br><span class="line">      &#125;  </span><br><span class="line">   &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>（3）编辑完成之后,执行一下重新加载配置文件命令:</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">sudo</span> nginx -s reload</span><br></pre></td></tr></table></figure><blockquote><p>需要输入开机密码 sudo不加的话会报错： <code>nginx: [alert] could not open error log file: open() &quot;/usr/local/var/log/nginx/error.log&quot; failed (13: Permission denied)</code>该命令执行后会出来一个弹框询问是否允许 nginx 加入到网络中，选择允许即可。</p></blockquote><p>（4）重启nginx：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">sudo</span> /usr/local/opt/nginx-full/bin/nginx -s reload</span><br></pre></td></tr></table></figure><p>PS：如果你之前不是按照我上面的方法按照的 nginx，在执行 sudo nginx -s reload 时报了如下错，建议你卸载 nginx后按照我上面的步骤重新安装nginx。<br> nginx: [emerg] unknown directive “rtmp” in /usr/local/etc/nginx/nginx.conf:119</p><p><strong>nginx常用方法:</strong></p><blockquote><p>出现权限不足的错误提示时，命令前加上 sudo</p></blockquote><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">重新加载配置文件:  nginx -s reload</span><br><span class="line">重新加载日志:     nginx -s reopen </span><br><span class="line">停止 nginx:      nginx -s stop  </span><br><span class="line">有序退出 nginx:   nginx -s quit</span><br></pre></td></tr></table></figure><h4 id="4、安装ffmepg工具"><a href="#4、安装ffmepg工具" class="headerlink" title="4、安装ffmepg工具"></a>4、安装ffmepg工具</h4><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">brew</span> install ffmpeg</span><br></pre></td></tr></table></figure><h4 id="5、本地推流"><a href="#5、本地推流" class="headerlink" title="5、本地推流"></a>5、本地推流</h4><p>(1)、搭建本地视频直播，比如电脑上面有很多电影，我们可以通过推流的形式实现实时直播：</p><p>A：在电脑上播放推流内容<br> 安装一个支持rtmp协议的视频播放器，Mac下可以用VLC<br> 下载<a href="http://soft.macx.cn/3164.htm" target="_blank" rel="noopener">VLC</a></p><p> 本地下载一个视频文件路径为 /Users/iOS002/Desktop/loginmovie.mp4</p><p> 执行以下命令:</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">ffmpeg</span> -re -i /Users/iOS002/Desktop/loginmovie.mp4  -vcodec libx264 -acodec aac -strict -<span class="number">2</span> -f flv rtmp://localhost:1935/rtmplive/room</span><br></pre></td></tr></table></figure><p>用vlc 然后打开 VLC 中 的 file – Open Network, 直接输入代码中的 url:</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rtmp://localhost:1935/rtmplive/room</span><br></pre></td></tr></table></figure><p>即可以通过VLC来播放终端中实时推过来的 RTMP流。</p><p>B：通过手机观看电脑的推流</p><p> 通过集成 ijkplayer 把地址换成推流的地址即可观看</p><p> 播放端用的针对RTMP优化过的ijkplayer，ijkplayer是基于FFmpeg的跨平台播放器，这个开源项目已经被多个 App 使用，其中映客、美拍和斗鱼使用了 ijkplayer。</p><p>(2)、桌面录制或者分享</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">ffmpeg</span> -f avfoundation -i <span class="string">"1"</span> -vcodec libx264 -preset ultrafast -acodec libfaac -f flv rtmp://localhost:1935/rtmplive/room</span><br></pre></td></tr></table></figure><p>(3)、桌面+麦克风</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">ffmpeg</span> -f avfoundation -i <span class="string">"1:0"</span> -vcodec libx264 -preset ultrafast -acodec libmp3lame -ar <span class="number">44100</span> -ac <span class="number">1</span> -f flv rtmp://localhost:1935/rtmplive/room</span><br></pre></td></tr></table></figure><p>(4)、桌面+麦克风，并且还要摄像头拍摄到自己</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">ffmpeg</span> -f avfoundation -framerate <span class="number">30</span> -i <span class="string">"1:0"</span> \-f avfoundation -framerate <span class="number">30</span> -video_size 640x480 -i <span class="string">"0"</span> \-c:v libx264 -preset ultrafast \-filter_complex <span class="string">'overlay=main_w-overlay_w-10:main_h-overlay_h-10'</span> -acodec libmp3lame -ar <span class="number">44100</span> -ac <span class="number">1</span> -f flv rtmp://localhost:2016/rtmplive/room</span><br></pre></td></tr></table></figure><h4 id="6、手机推流"><a href="#6、手机推流" class="headerlink" title="6、手机推流"></a>6、手机推流</h4><p>可以用  LFLiveKit 集成到工程进行推流，LFLiveKit已经帮我们实现了视频采集、后台录制、美颜功能、支持h264、AAC编码，动态改变速率，RTMP传输等，我们开发的时候就很简单了只需把localhost:8080换成自己电脑的ip地址即可:</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rtmp://10.0.0.17:1935/rtmplive/room</span><br></pre></td></tr></table></figure><p>注意通过网络查看电脑的局域网 IP替换掉 localhost 即可。</p><p>A：通过VLC观看手机的推流</p><p> 打开手机直播后，然后在电脑上打开VLC（同上），就能实现手机推流，在电脑上拉流播放了！！(注：手机需要和电脑连接同一网络！)</p><p>B：通过手机观看手机的推流（这也就是市面上的那些直播App的最终实现形式了）</p><p> 通过集成 ijkplayer 把地址换成推流的地址即可观看。</p><p>PS：一个很隐蔽的报错：</p><p>如果你发现你的推流地址和拉流地址在电脑上都是好好的，但是通过手机实现的时候就是报错，那么估计就是因为Mac防火墙的问题。</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ERROR: PILI_RTMP_Connect0, failed to connect socket. 60 (Operation timed out)</span><br><span class="line">ERROR: WriteN, PILI_RTMP send error 9, Bad file descriptor, (140 bytes)</span><br><span class="line">ERROR: PILI_RTMP_Connect0, failed to connect socket. 60 (Operation timed out)</span><br><span class="line">ERROR: WriteN, PILI_RTMP send error 9, Bad file descriptor, (140 bytes)</span><br></pre></td></tr></table></figure><p>关闭 Mac 的防火墙即可解决问题。</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">偏好设置-&gt;安全性与隐私-&gt;防火墙</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> iOS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 直播 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>shared_preferences数据存储</title>
      <link href="/2019/10/19/shared_preferences%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/"/>
      <url>/2019/10/19/shared_preferences%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/</url>
      
        <content type="html"><![CDATA[<h3 id="shared-preferences库"><a href="#shared-preferences库" class="headerlink" title="shared_preferences库"></a>shared_preferences库</h3><blockquote><p>shared_preferences库同时支持Android和ios平台,存键值对信息，进行数据本地持久化存储。</p></blockquote><h4 id="引用方法"><a href="#引用方法" class="headerlink" title="引用方法"></a>引用方法</h4><ol><li><p>在pubspec.yaml文件中添加依赖</p><p> <code>shared_preferences: ^0.5.3+4</code><a href="https://pub.dev/packages/shared_preferences" target="_blank" rel="noopener">-&gt;查看最新版本</a></p></li><li><p>执行$ flutter packages get命令 下载插件</p></li><li><p>在使用的文件中导入：</p><p> <code>import &#39;package:shared_preferences/shared_preferences.dart&#39;;</code></p></li></ol><h4 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h4><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">SharedPreferences sharedPreferences = <span class="keyword">await</span> SharedPreferences.getInstance();</span><br><span class="line"></span><br><span class="line">sharedPreferences.setString(<span class="string">"name"</span>, <span class="string">"hehe"</span>);</span><br><span class="line">sharedPreferences.setInt(<span class="string">"age"</span>, <span class="number">18</span>);</span><br><span class="line">sharedPreferences.setDouble(<span class="string">"height"</span>, <span class="number">1.72</span>);</span><br><span class="line">sharedPreferences.setBool(<span class="string">"sex"</span>, <span class="keyword">true</span>);<span class="comment">//true 表示男 false表示女</span></span><br><span class="line">sharedPreferences.setStringList(<span class="string">"like"</span>, [<span class="string">"MV"</span>,<span class="string">"Music"</span>,<span class="string">"Pic"</span>]);</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">"=========get****("</span>key<span class="string">")取出存储的数据=============="</span>);</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"姓名:"</span>+ sharedPreferences.getString(<span class="string">"name"</span>));</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"年龄:"</span> + sharedPreferences.getInt(<span class="string">"age"</span>).toString());</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"身高:"</span>+ sharedPreferences.getDouble(<span class="string">"height"</span>).toString());</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"性别:"</span>+ ((sharedPreferences.getBool(<span class="string">"sex"</span>) == <span class="keyword">true</span>) ? <span class="string">"男"</span>:<span class="string">"女"</span>));</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"爱好:"</span>+ sharedPreferences.getStringList(<span class="string">"like"</span>).toString());</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">"========getKeys()取出存储的所有key值============="</span>);</span><br><span class="line"><span class="built_in">print</span>(sharedPreferences.getKeys());</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">"========set***("</span>key<span class="string">")给已经存在的key重新赋值============="</span>);</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"姓名:"</span>+ sharedPreferences.getString(<span class="string">"name"</span>));</span><br><span class="line">sharedPreferences.setString(<span class="string">"name"</span>, <span class="string">"feiyv"</span>);</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"姓名:"</span>+ sharedPreferences.getString(<span class="string">"name"</span>));</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">"========containsKey("</span>key<span class="string">")判断存储的是否有某个Key值============="</span>);</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"name是否存在："</span> + sharedPreferences.containsKey(<span class="string">"name"</span>));</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"rename是否存在："</span> + sharedPreferences.containsKey(<span class="string">"rename"</span>));</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">"========remove("</span>key<span class="string">")删除单个Key数据============="</span>);</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"年龄:"</span> + sharedPreferences.getInt(<span class="string">"age"</span>).toString());</span><br><span class="line">sharedPreferences.remove(<span class="string">"age"</span>);</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"年龄:"</span> + sharedPreferences.getInt(<span class="string">"age"</span>).toString());</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">"========clear清除所有数据============="</span>);</span><br><span class="line">sharedPreferences.clear();</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"sharedPreferences.clear();"</span>);</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"name是否存在："</span> + sharedPreferences.containsKey(<span class="string">"name"</span>).toString());</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"所有的key值："</span>+ sharedPreferences.getKeys().toString());</span><br></pre></td></tr></table></figure><h4 id="打印数据："><a href="#打印数据：" class="headerlink" title="打印数据："></a>打印数据：</h4><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">flutter: =========<span class="keyword">get</span>****(<span class="string">"key"</span>)取出存储的数据==============</span><br><span class="line">flutter: 姓名:hehe</span><br><span class="line">flutter: 年龄:<span class="number">18</span></span><br><span class="line">flutter: 身高:<span class="number">1.72</span></span><br><span class="line">flutter: 性别:男</span><br><span class="line">flutter: 爱好:[MV, Music, Pic]</span><br><span class="line"></span><br><span class="line">flutter: ========getKeys()取出存储的所有key值=============</span><br><span class="line">flutter: &#123;name, age, height, sex, like&#125;</span><br><span class="line"></span><br><span class="line">flutter: ========<span class="keyword">set</span>****(<span class="string">"key"</span>)给已经存在的key重新赋值=============</span><br><span class="line">flutter: 姓名:hehe</span><br><span class="line">flutter: 姓名:feiyv</span><br><span class="line"></span><br><span class="line">flutter: ========containsKey(<span class="string">"key"</span>)判断存储的是否有某个Key值=============</span><br><span class="line">flutter: name是否存在：<span class="keyword">true</span></span><br><span class="line">flutter: rename是否存在：<span class="keyword">false</span></span><br><span class="line"></span><br><span class="line">flutter: ========remove(<span class="string">"key"</span>)删除单个Key数据=============</span><br><span class="line">flutter: 年龄:<span class="number">18</span></span><br><span class="line">flutter: 年龄:<span class="keyword">null</span></span><br><span class="line"></span><br><span class="line">flutter: ========clear清除所有数据=============</span><br><span class="line">flutter: sharedPreferences.clear();</span><br><span class="line">flutter: name是否存在：<span class="keyword">false</span></span><br><span class="line">flutter: 所有的key值：&#123;&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Flutter </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shared_preferences </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>path_provider获取系统目录</title>
      <link href="/2019/10/13/path_provider%E8%8E%B7%E5%8F%96%E7%B3%BB%E7%BB%9F%E7%9B%AE%E5%BD%95/"/>
      <url>/2019/10/13/path_provider%E8%8E%B7%E5%8F%96%E7%B3%BB%E7%BB%9F%E7%9B%AE%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<h3 id="PathProvider-插件"><a href="#PathProvider-插件" class="headerlink" title="PathProvider 插件"></a>PathProvider 插件</h3><blockquote><p>PathProvider 访问设备文件系统上的常用位置。</p></blockquote><h4 id="使用方法："><a href="#使用方法：" class="headerlink" title="使用方法："></a>使用方法：</h4><ol><li><p>在pubspec.yaml文件中添加 PathProvider 插件</p><p><code>path_provider: ^*.*.*</code><a href="https://pub.dartlang.org/packages/path_provider" target="_blank" rel="noopener">查看最新版本</a></p></li><li><p>在文件中导入：</p><p><code>import &#39;package:path_provider/path_provider.dart&#39;;</code></p></li></ol><ol><li><p><code>DocumentsDirectory</code></p><blockquote><p> 文档目录，用于存储只有自己可以访问的文件。只有当应用程序被卸载时，系统才会清除该目录。在<code>iOS</code>上，这对应于<code>NSDocumentDirectory</code>。在<code>Android</code>上，这是<code>AppData</code>目录。 </p></blockquote><p> <code>String docDir = (await getApplicationDocumentsDirectory()).path;</code></p></li><li><p><code>TemporaryDirectory</code></p><blockquote><p>系统可随时清除的临时目录（缓存）。在<code>iOS</code>上，这对应于<code>NSTemporaryDirectory()</code> 返回的值。在<code>Android</code>上，这是<code>getCacheDir()</code>返回的目录。</p></blockquote><p> <code>String tempDir = (await getTemporaryDirectory()).path;</code></p></li><li><p><code>SupportDirectory</code></p><blockquote><p>在iOS上，它使用<code>NSApplicationSupportDirectory</code> 来获取目录。在Android上，这是<code>getFilesDir</code>返回的目录。</p></blockquote><p> <code>String supportDir = (await getApplicationSupportDirectory()).path;</code></p></li><li><p><code>ExternalStorageDirectory</code></p><blockquote><p>获取存储卡路径,仅在<code>Android</code>上中有效，<code>iOS</code>系统无此方法，可以通过<code>Platform.isIOS</code>来判断当前系统是否是<code>iOS</code>系统</p></blockquote><p> <code>String extStorageDir = (await getExternalStorageDirectory()).path;</code></p></li></ol><p><a href="https://github.com/flutter/plugins/tree/master/packages/path_provider" target="_blank" rel="noopener">PathProvider-&gt;GitHub</a></p><p><a href="https://pub.dartlang.org/packages/path_provider" target="_blank" rel="noopener">PathProvider-&gt;Pub</a></p>]]></content>
      
      
      <categories>
          
          <category> Flutter </category>
          
      </categories>
      
      
        <tags>
            
            <tag> path_provider </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pip3 install scrapy</title>
      <link href="/2019/08/31/pip3installscrapy/"/>
      <url>/2019/08/31/pip3installscrapy/</url>
      
        <content type="html"><![CDATA[<h2 id="l-192---python3-m-pip-install-–upgrade-pip"><a href="#l-192---python3-m-pip-install-–upgrade-pip" class="headerlink" title="l@192  ~  python3 -m pip install –upgrade pip"></a>l@192  ~  python3 -m pip install –upgrade pip</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">WARNING: Retrying (Retry(total&#x3D;4, connect&#x3D;None, read&#x3D;None, redirect&#x3D;None, status&#x3D;None)) after connection broken by &#39;ReadTimeoutError(&quot;HTTPSConnectionPool(host&#x3D;&#39;pypi.org&#39;, port&#x3D;443): Read timed out. (read timeout&#x3D;15)&quot;)&#39;: &#x2F;simple&#x2F;pip&#x2F;</span><br><span class="line">WARNING: Retrying (Retry(total&#x3D;3, connect&#x3D;None, read&#x3D;None, redirect&#x3D;None, status&#x3D;None)) after connection broken by &#39;ReadTimeoutError(&quot;HTTPSConnectionPool(host&#x3D;&#39;pypi.org&#39;, port&#x3D;443): Read timed out. (read timeout&#x3D;15)&quot;)&#39;: &#x2F;simple&#x2F;pip&#x2F;</span><br><span class="line">WARNING: Retrying (Retry(total&#x3D;2, connect&#x3D;None, read&#x3D;None, redirect&#x3D;None, status&#x3D;None)) after connection broken by &#39;ReadTimeoutError(&quot;HTTPSConnectionPool(host&#x3D;&#39;pypi.org&#39;, port&#x3D;443): Read timed out. (read timeout&#x3D;15)&quot;)&#39;: &#x2F;simple&#x2F;pip&#x2F;</span><br><span class="line">WARNING: Retrying (Retry(total&#x3D;1, connect&#x3D;None, read&#x3D;None, redirect&#x3D;None, status&#x3D;None)) after connection broken by &#39;ReadTimeoutError(&quot;HTTPSConnectionPool(host&#x3D;&#39;pypi.org&#39;, port&#x3D;443): Read timed out. (read timeout&#x3D;15)&quot;)&#39;: &#x2F;simple&#x2F;pip&#x2F;</span><br><span class="line">WARNING: Retrying (Retry(total&#x3D;0, connect&#x3D;None, read&#x3D;None, redirect&#x3D;None, status&#x3D;None)) after connection broken by &#39;ReadTimeoutError(&quot;HTTPSConnectionPool(host&#x3D;&#39;pypi.org&#39;, port&#x3D;443): Read timed out. (read timeout&#x3D;15)&quot;)&#39;: &#x2F;simple&#x2F;pip&#x2F;</span><br><span class="line">Requirement already up-to-date: pip in &#x2F;usr&#x2F;local&#x2F;lib&#x2F;python3.7&#x2F;site-packages (19.1.1)</span><br></pre></td></tr></table></figure><h2 id="l-192---pip3-install-scrapy"><a href="#l-192---pip3-install-scrapy" class="headerlink" title="l@192  ~  pip3 install scrapy"></a>l@192  ~  pip3 install scrapy</h2> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line">Collecting scrapy</span><br><span class="line">  Downloading https:&#x2F;&#x2F;files.pythonhosted.org&#x2F;packages&#x2F;29&#x2F;4b&#x2F;585e8e111ffb01466c59281f34febb13ad1a95d7fb3919fd57c33fc732a5&#x2F;Scrapy-1.7.3-py2.py3-none-any.whl (234kB)</span><br><span class="line">     |████████▍                       | 61kB 11kB&#x2F;s eta 0:00:15ERROR: Exception:</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File &quot;&#x2F;usr&#x2F;local&#x2F;lib&#x2F;python3.7&#x2F;site-packages&#x2F;pip&#x2F;_vendor&#x2F;urllib3&#x2F;response.py&quot;, line 360, in _error_catcher</span><br><span class="line">    yield</span><br><span class="line">  File &quot;&#x2F;usr&#x2F;local&#x2F;lib&#x2F;python3.7&#x2F;site-packages&#x2F;pip&#x2F;_vendor&#x2F;urllib3&#x2F;response.py&quot;, line 442, in read</span><br><span class="line">    data &#x3D; self._fp.read(amt)</span><br><span class="line">  File &quot;&#x2F;usr&#x2F;local&#x2F;lib&#x2F;python3.7&#x2F;site-packages&#x2F;pip&#x2F;_vendor&#x2F;cachecontrol&#x2F;filewrapper.py&quot;, line 62, in read</span><br><span class="line">    data &#x3D; self.__fp.read(amt)</span><br><span class="line">  File &quot;&#x2F;usr&#x2F;local&#x2F;Cellar&#x2F;python&#x2F;3.7.4&#x2F;Frameworks&#x2F;Python.framework&#x2F;Versions&#x2F;3.7&#x2F;lib&#x2F;python3.7&#x2F;http&#x2F;client.py&quot;, line 457, in read</span><br><span class="line">    n &#x3D; self.readinto(b)</span><br><span class="line">  File &quot;&#x2F;usr&#x2F;local&#x2F;Cellar&#x2F;python&#x2F;3.7.4&#x2F;Frameworks&#x2F;Python.framework&#x2F;Versions&#x2F;3.7&#x2F;lib&#x2F;python3.7&#x2F;http&#x2F;client.py&quot;, line 501, in readinto</span><br><span class="line">    n &#x3D; self.fp.readinto(b)</span><br><span class="line">  File &quot;&#x2F;usr&#x2F;local&#x2F;Cellar&#x2F;python&#x2F;3.7.4&#x2F;Frameworks&#x2F;Python.framework&#x2F;Versions&#x2F;3.7&#x2F;lib&#x2F;python3.7&#x2F;socket.py&quot;, line 589, in readinto</span><br><span class="line">    return self._sock.recv_into(b)</span><br><span class="line">  File &quot;&#x2F;usr&#x2F;local&#x2F;Cellar&#x2F;python&#x2F;3.7.4&#x2F;Frameworks&#x2F;Python.framework&#x2F;Versions&#x2F;3.7&#x2F;lib&#x2F;python3.7&#x2F;ssl.py&quot;, line 1071, in recv_into</span><br><span class="line">    return self.read(nbytes, buffer)</span><br><span class="line">  File &quot;&#x2F;usr&#x2F;local&#x2F;Cellar&#x2F;python&#x2F;3.7.4&#x2F;Frameworks&#x2F;Python.framework&#x2F;Versions&#x2F;3.7&#x2F;lib&#x2F;python3.7&#x2F;ssl.py&quot;, line 929, in read</span><br><span class="line">    return self._sslobj.read(len, buffer)</span><br><span class="line">socket.timeout: The read operation timed out</span><br><span class="line"></span><br><span class="line">During handling of the above exception, another exception occurred:</span><br><span class="line"></span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File &quot;&#x2F;usr&#x2F;local&#x2F;lib&#x2F;python3.7&#x2F;site-packages&#x2F;pip&#x2F;_internal&#x2F;cli&#x2F;base_command.py&quot;, line 178, in main</span><br><span class="line">    status &#x3D; self.run(options, args)</span><br><span class="line">  File &quot;&#x2F;usr&#x2F;local&#x2F;lib&#x2F;python3.7&#x2F;site-packages&#x2F;pip&#x2F;_internal&#x2F;commands&#x2F;install.py&quot;, line 352, in run</span><br><span class="line">    resolver.resolve(requirement_set)</span><br><span class="line">  File &quot;&#x2F;usr&#x2F;local&#x2F;lib&#x2F;python3.7&#x2F;site-packages&#x2F;pip&#x2F;_internal&#x2F;resolve.py&quot;, line 131, in resolve</span><br><span class="line">    self._resolve_one(requirement_set, req)</span><br><span class="line">  File &quot;&#x2F;usr&#x2F;local&#x2F;lib&#x2F;python3.7&#x2F;site-packages&#x2F;pip&#x2F;_internal&#x2F;resolve.py&quot;, line 294, in _resolve_one</span><br><span class="line">    abstract_dist &#x3D; self._get_abstract_dist_for(req_to_install)</span><br><span class="line">  File &quot;&#x2F;usr&#x2F;local&#x2F;lib&#x2F;python3.7&#x2F;site-packages&#x2F;pip&#x2F;_internal&#x2F;resolve.py&quot;, line 242, in _get_abstract_dist_for</span><br><span class="line">    self.require_hashes</span><br><span class="line">  File &quot;&#x2F;usr&#x2F;local&#x2F;lib&#x2F;python3.7&#x2F;site-packages&#x2F;pip&#x2F;_internal&#x2F;operations&#x2F;prepare.py&quot;, line 347, in prepare_linked_requirement</span><br><span class="line">    progress_bar&#x3D;self.progress_bar</span><br><span class="line">  File &quot;&#x2F;usr&#x2F;local&#x2F;lib&#x2F;python3.7&#x2F;site-packages&#x2F;pip&#x2F;_internal&#x2F;download.py&quot;, line 886, in unpack_url</span><br><span class="line">    progress_bar&#x3D;progress_bar</span><br><span class="line">  File &quot;&#x2F;usr&#x2F;local&#x2F;lib&#x2F;python3.7&#x2F;site-packages&#x2F;pip&#x2F;_internal&#x2F;download.py&quot;, line 746, in unpack_http_url</span><br><span class="line">    progress_bar)</span><br><span class="line">  File &quot;&#x2F;usr&#x2F;local&#x2F;lib&#x2F;python3.7&#x2F;site-packages&#x2F;pip&#x2F;_internal&#x2F;download.py&quot;, line 954, in _download_http_url</span><br><span class="line">    _download_url(resp, link, content_file, hashes, progress_bar)</span><br><span class="line">  File &quot;&#x2F;usr&#x2F;local&#x2F;lib&#x2F;python3.7&#x2F;site-packages&#x2F;pip&#x2F;_internal&#x2F;download.py&quot;, line 683, in _download_url</span><br><span class="line">    hashes.check_against_chunks(downloaded_chunks)</span><br><span class="line">  File &quot;&#x2F;usr&#x2F;local&#x2F;lib&#x2F;python3.7&#x2F;site-packages&#x2F;pip&#x2F;_internal&#x2F;utils&#x2F;hashes.py&quot;, line 62, in check_against_chunks</span><br><span class="line">    for chunk in chunks:</span><br><span class="line">  File &quot;&#x2F;usr&#x2F;local&#x2F;lib&#x2F;python3.7&#x2F;site-packages&#x2F;pip&#x2F;_internal&#x2F;download.py&quot;, line 651, in written_chunks</span><br><span class="line">    for chunk in chunks:</span><br><span class="line">  File &quot;&#x2F;usr&#x2F;local&#x2F;lib&#x2F;python3.7&#x2F;site-packages&#x2F;pip&#x2F;_internal&#x2F;utils&#x2F;ui.py&quot;, line 156, in iter</span><br><span class="line">    for x in it:</span><br><span class="line">  File &quot;&#x2F;usr&#x2F;local&#x2F;lib&#x2F;python3.7&#x2F;site-packages&#x2F;pip&#x2F;_internal&#x2F;download.py&quot;, line 640, in resp_read</span><br><span class="line">    decode_content&#x3D;False):</span><br><span class="line">  File &quot;&#x2F;usr&#x2F;local&#x2F;lib&#x2F;python3.7&#x2F;site-packages&#x2F;pip&#x2F;_vendor&#x2F;urllib3&#x2F;response.py&quot;, line 494, in stream</span><br><span class="line">    data &#x3D; self.read(amt&#x3D;amt, decode_content&#x3D;decode_content)</span><br><span class="line">  File &quot;&#x2F;usr&#x2F;local&#x2F;lib&#x2F;python3.7&#x2F;site-packages&#x2F;pip&#x2F;_vendor&#x2F;urllib3&#x2F;response.py&quot;, line 459, in read</span><br><span class="line">    raise IncompleteRead(self._fp_bytes_read, self.length_remaining)</span><br><span class="line">  File &quot;&#x2F;usr&#x2F;local&#x2F;Cellar&#x2F;python&#x2F;3.7.4&#x2F;Frameworks&#x2F;Python.framework&#x2F;Versions&#x2F;3.7&#x2F;lib&#x2F;python3.7&#x2F;contextlib.py&quot;, line 130, in __exit__</span><br><span class="line">    self.gen.throw(type, value, traceback)</span><br><span class="line">  File &quot;&#x2F;usr&#x2F;local&#x2F;lib&#x2F;python3.7&#x2F;site-packages&#x2F;pip&#x2F;_vendor&#x2F;urllib3&#x2F;response.py&quot;, line 365, in _error_catcher</span><br><span class="line">    raise ReadTimeoutError(self._pool, None, &#39;Read timed out.&#39;)</span><br><span class="line">pip._vendor.urllib3.exceptions.ReadTimeoutError: HTTPSConnectionPool(host&#x3D;&#39;files.pythonhosted.org&#39;, port&#x3D;443): Read timed out.</span><br></pre></td></tr></table></figure><h2 id="✘-l-192---pip3-install-scrapy"><a href="#✘-l-192---pip3-install-scrapy" class="headerlink" title="** ✘ l@192  ~  pip3 install scrapy"></a>** ✘ l@192  ~  pip3 install scrapy</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line">Collecting scrapy</span><br><span class="line">  WARNING: Retrying (Retry(total&#x3D;4, connect&#x3D;None, read&#x3D;None, redirect&#x3D;None, status&#x3D;None)) after connection broken by &#39;ReadTimeoutError(&quot;HTTPSConnectionPool(host&#x3D;&#39;pypi.org&#39;, port&#x3D;443): Read timed out. (read timeout&#x3D;15)&quot;)&#39;: &#x2F;simple&#x2F;scrapy&#x2F;</span><br><span class="line">  WARNING: Retrying (Retry(total&#x3D;3, connect&#x3D;None, read&#x3D;None, redirect&#x3D;None, status&#x3D;None)) after connection broken by &#39;ReadTimeoutError(&quot;HTTPSConnectionPool(host&#x3D;&#39;pypi.org&#39;, port&#x3D;443): Read timed out. (read timeout&#x3D;15)&quot;)&#39;: &#x2F;simple&#x2F;scrapy&#x2F;</span><br><span class="line">  Downloading https:&#x2F;&#x2F;files.pythonhosted.org&#x2F;packages&#x2F;29&#x2F;4b&#x2F;585e8e111ffb01466c59281f34febb13ad1a95d7fb3919fd57c33fc732a5&#x2F;Scrapy-1.7.3-py2.py3-none-any.whl (234kB)</span><br><span class="line">ERROR: Exception:</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File &quot;&#x2F;usr&#x2F;local&#x2F;lib&#x2F;python3.7&#x2F;site-packages&#x2F;pip&#x2F;_vendor&#x2F;urllib3&#x2F;response.py&quot;, line 360, in _error_catcher</span><br><span class="line">    yield</span><br><span class="line">  File &quot;&#x2F;usr&#x2F;local&#x2F;lib&#x2F;python3.7&#x2F;site-packages&#x2F;pip&#x2F;_vendor&#x2F;urllib3&#x2F;response.py&quot;, line 442, in read</span><br><span class="line">    data &#x3D; self._fp.read(amt)</span><br><span class="line">  File &quot;&#x2F;usr&#x2F;local&#x2F;lib&#x2F;python3.7&#x2F;site-packages&#x2F;pip&#x2F;_vendor&#x2F;cachecontrol&#x2F;filewrapper.py&quot;, line 62, in read</span><br><span class="line">    data &#x3D; self.__fp.read(amt)</span><br><span class="line">  File &quot;&#x2F;usr&#x2F;local&#x2F;Cellar&#x2F;python&#x2F;3.7.4&#x2F;Frameworks&#x2F;Python.framework&#x2F;Versions&#x2F;3.7&#x2F;lib&#x2F;python3.7&#x2F;http&#x2F;client.py&quot;, line 457, in read</span><br><span class="line">    n &#x3D; self.readinto(b)</span><br><span class="line">  File &quot;&#x2F;usr&#x2F;local&#x2F;Cellar&#x2F;python&#x2F;3.7.4&#x2F;Frameworks&#x2F;Python.framework&#x2F;Versions&#x2F;3.7&#x2F;lib&#x2F;python3.7&#x2F;http&#x2F;client.py&quot;, line 501, in readinto</span><br><span class="line">    n &#x3D; self.fp.readinto(b)</span><br><span class="line">  File &quot;&#x2F;usr&#x2F;local&#x2F;Cellar&#x2F;python&#x2F;3.7.4&#x2F;Frameworks&#x2F;Python.framework&#x2F;Versions&#x2F;3.7&#x2F;lib&#x2F;python3.7&#x2F;socket.py&quot;, line 589, in readinto</span><br><span class="line">    return self._sock.recv_into(b)</span><br><span class="line">  File &quot;&#x2F;usr&#x2F;local&#x2F;Cellar&#x2F;python&#x2F;3.7.4&#x2F;Frameworks&#x2F;Python.framework&#x2F;Versions&#x2F;3.7&#x2F;lib&#x2F;python3.7&#x2F;ssl.py&quot;, line 1071, in recv_into</span><br><span class="line">    return self.read(nbytes, buffer)</span><br><span class="line">  File &quot;&#x2F;usr&#x2F;local&#x2F;Cellar&#x2F;python&#x2F;3.7.4&#x2F;Frameworks&#x2F;Python.framework&#x2F;Versions&#x2F;3.7&#x2F;lib&#x2F;python3.7&#x2F;ssl.py&quot;, line 929, in read</span><br><span class="line">    return self._sslobj.read(len, buffer)</span><br><span class="line">socket.timeout: The read operation timed out</span><br><span class="line"></span><br><span class="line">During handling of the above exception, another exception occurred:</span><br><span class="line"></span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File &quot;&#x2F;usr&#x2F;local&#x2F;lib&#x2F;python3.7&#x2F;site-packages&#x2F;pip&#x2F;_internal&#x2F;cli&#x2F;base_command.py&quot;, line 178, in main</span><br><span class="line">    status &#x3D; self.run(options, args)</span><br><span class="line">  File &quot;&#x2F;usr&#x2F;local&#x2F;lib&#x2F;python3.7&#x2F;site-packages&#x2F;pip&#x2F;_internal&#x2F;commands&#x2F;install.py&quot;, line 352, in run</span><br><span class="line">    resolver.resolve(requirement_set)</span><br><span class="line">  File &quot;&#x2F;usr&#x2F;local&#x2F;lib&#x2F;python3.7&#x2F;site-packages&#x2F;pip&#x2F;_internal&#x2F;resolve.py&quot;, line 131, in resolve</span><br><span class="line">    self._resolve_one(requirement_set, req)</span><br><span class="line">  File &quot;&#x2F;usr&#x2F;local&#x2F;lib&#x2F;python3.7&#x2F;site-packages&#x2F;pip&#x2F;_internal&#x2F;resolve.py&quot;, line 294, in _resolve_one</span><br><span class="line">    abstract_dist &#x3D; self._get_abstract_dist_for(req_to_install)</span><br><span class="line">  File &quot;&#x2F;usr&#x2F;local&#x2F;lib&#x2F;python3.7&#x2F;site-packages&#x2F;pip&#x2F;_internal&#x2F;resolve.py&quot;, line 242, in _get_abstract_dist_for</span><br><span class="line">    self.require_hashes</span><br><span class="line">  File &quot;&#x2F;usr&#x2F;local&#x2F;lib&#x2F;python3.7&#x2F;site-packages&#x2F;pip&#x2F;_internal&#x2F;operations&#x2F;prepare.py&quot;, line 347, in prepare_linked_requirement</span><br><span class="line">    progress_bar&#x3D;self.progress_bar</span><br><span class="line">  File &quot;&#x2F;usr&#x2F;local&#x2F;lib&#x2F;python3.7&#x2F;site-packages&#x2F;pip&#x2F;_internal&#x2F;download.py&quot;, line 886, in unpack_url</span><br><span class="line">    progress_bar&#x3D;progress_bar</span><br><span class="line">  File &quot;&#x2F;usr&#x2F;local&#x2F;lib&#x2F;python3.7&#x2F;site-packages&#x2F;pip&#x2F;_internal&#x2F;download.py&quot;, line 746, in unpack_http_url</span><br><span class="line">    progress_bar)</span><br><span class="line">  File &quot;&#x2F;usr&#x2F;local&#x2F;lib&#x2F;python3.7&#x2F;site-packages&#x2F;pip&#x2F;_internal&#x2F;download.py&quot;, line 954, in _download_http_url</span><br><span class="line">    _download_url(resp, link, content_file, hashes, progress_bar)</span><br><span class="line">  File &quot;&#x2F;usr&#x2F;local&#x2F;lib&#x2F;python3.7&#x2F;site-packages&#x2F;pip&#x2F;_internal&#x2F;download.py&quot;, line 683, in _download_url</span><br><span class="line">    hashes.check_against_chunks(downloaded_chunks)</span><br><span class="line">  File &quot;&#x2F;usr&#x2F;local&#x2F;lib&#x2F;python3.7&#x2F;site-packages&#x2F;pip&#x2F;_internal&#x2F;utils&#x2F;hashes.py&quot;, line 62, in check_against_chunks</span><br><span class="line">    for chunk in chunks:</span><br><span class="line">  File &quot;&#x2F;usr&#x2F;local&#x2F;lib&#x2F;python3.7&#x2F;site-packages&#x2F;pip&#x2F;_internal&#x2F;download.py&quot;, line 651, in written_chunks</span><br><span class="line">    for chunk in chunks:</span><br><span class="line">  File &quot;&#x2F;usr&#x2F;local&#x2F;lib&#x2F;python3.7&#x2F;site-packages&#x2F;pip&#x2F;_internal&#x2F;utils&#x2F;ui.py&quot;, line 156, in iter</span><br><span class="line">    for x in it:</span><br><span class="line">  File &quot;&#x2F;usr&#x2F;local&#x2F;lib&#x2F;python3.7&#x2F;site-packages&#x2F;pip&#x2F;_internal&#x2F;download.py&quot;, line 640, in resp_read</span><br><span class="line">    decode_content&#x3D;False):</span><br><span class="line">  File &quot;&#x2F;usr&#x2F;local&#x2F;lib&#x2F;python3.7&#x2F;site-packages&#x2F;pip&#x2F;_vendor&#x2F;urllib3&#x2F;response.py&quot;, line 494, in stream</span><br><span class="line">    data &#x3D; self.read(amt&#x3D;amt, decode_content&#x3D;decode_content)</span><br><span class="line">  File &quot;&#x2F;usr&#x2F;local&#x2F;lib&#x2F;python3.7&#x2F;site-packages&#x2F;pip&#x2F;_vendor&#x2F;urllib3&#x2F;response.py&quot;, line 459, in read</span><br><span class="line">    raise IncompleteRead(self._fp_bytes_read, self.length_remaining)</span><br><span class="line">  File &quot;&#x2F;usr&#x2F;local&#x2F;Cellar&#x2F;python&#x2F;3.7.4&#x2F;Frameworks&#x2F;Python.framework&#x2F;Versions&#x2F;3.7&#x2F;lib&#x2F;python3.7&#x2F;contextlib.py&quot;, line 130, in __exit__</span><br><span class="line">    self.gen.throw(type, value, traceback)</span><br><span class="line">  File &quot;&#x2F;usr&#x2F;local&#x2F;lib&#x2F;python3.7&#x2F;site-packages&#x2F;pip&#x2F;_vendor&#x2F;urllib3&#x2F;response.py&quot;, line 365, in _error_catcher</span><br><span class="line">    raise ReadTimeoutError(self._pool, None, &#39;Read timed out.&#39;)</span><br><span class="line">pip._vendor.urllib3.exceptions.ReadTimeoutError: HTTPSConnectionPool(host&#x3D;&#39;files.pythonhosted.org&#39;, port&#x3D;443): Read timed out.</span><br><span class="line"> ✘ l@192  ~  sudo pip3 install lxml</span><br><span class="line">Password:</span><br><span class="line">WARNING: The directory &#39;&#x2F;Users&#x2F;l&#x2F;Library&#x2F;Caches&#x2F;pip&#x2F;http&#39; or its parent directory is not owned by the current user and the cache has been disabled. Please check the permissions and owner of that directory. If executing pip with sudo, you may want sudo&#39;s -H flag.</span><br><span class="line">WARNING: The directory &#39;&#x2F;Users&#x2F;l&#x2F;Library&#x2F;Caches&#x2F;pip&#39; or its parent directory is not owned by the current user and caching wheels has been disabled. check the permissions and owner of that directory. If executing pip with sudo, you may want sudo&#39;s -H flag.</span><br><span class="line">Collecting lxml</span><br><span class="line">  ERROR: Could not find a version that satisfies the requirement lxml (from versions: none)</span><br><span class="line">ERROR: No matching distribution found for lxml</span><br></pre></td></tr></table></figure><h2 id="✘-l-192---pip3-install-Scrapy"><a href="#✘-l-192---pip3-install-Scrapy" class="headerlink" title="✘ l@192  ~  pip3 install Scrapy"></a>✘ l@192  ~  pip3 install Scrapy</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Collecting Scrapy</span><br><span class="line">  WARNING: Retrying (Retry(total&#x3D;4, connect&#x3D;None, read&#x3D;None, redirect&#x3D;None, status&#x3D;None)) after connection broken by &#39;ReadTimeoutError(&quot;HTTPSConnectionPool(host&#x3D;&#39;files.pythonhosted.org&#39;, port&#x3D;443): Read timed out. (read timeout&#x3D;15)&quot;)&#39;: &#x2F;packages&#x2F;29&#x2F;4b&#x2F;585e8e111ffb01466c59281f34febb13ad1a95d7fb3919fd57c33fc732a5&#x2F;Scrapy-1.7.3-py2.py3-none-any.whl</span><br><span class="line">  Downloading https:&#x2F;&#x2F;files.pythonhosted.org&#x2F;packages&#x2F;29&#x2F;4b&#x2F;585e8e111ffb01466c59281f34febb13ad1a95d7fb3919fd57c33fc732a5&#x2F;Scrapy-1.7.3-py2.py3-none-any.whl (234kB)</span><br><span class="line">     |████████████████████████████████| 235kB 83kB&#x2F;s</span><br><span class="line">Collecting pyOpenSSL (from Scrapy)</span><br><span class="line">  ERROR: Could not find a version that satisfies the requirement pyOpenSSL (from Scrapy) (from versions: none)</span><br><span class="line">ERROR: No matching distribution found for pyOpenSSL (from Scrapy)</span><br></pre></td></tr></table></figure><h2 id="✘-l-192---pip3-install-Scrapy-1"><a href="#✘-l-192---pip3-install-Scrapy-1" class="headerlink" title="✘ l@192  ~  pip3 install Scrapy"></a>✘ l@192  ~  pip3 install Scrapy</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line">Collecting Scrapy</span><br><span class="line">  Using cached https:&#x2F;&#x2F;files.pythonhosted.org&#x2F;packages&#x2F;29&#x2F;4b&#x2F;585e8e111ffb01466c59281f34febb13ad1a95d7fb3919fd57c33fc732a5&#x2F;Scrapy-1.7.3-py2.py3-none-any.whl</span><br><span class="line">Collecting parsel&gt;&#x3D;1.5 (from Scrapy)</span><br><span class="line">  Downloading https:&#x2F;&#x2F;files.pythonhosted.org&#x2F;packages&#x2F;86&#x2F;c8&#x2F;fc5a2f9376066905dfcca334da2a25842aedfda142c0424722e7c497798b&#x2F;parsel-1.5.2-py2.py3-none-any.whl</span><br><span class="line">Collecting w3lib&gt;&#x3D;1.17.0 (from Scrapy)</span><br><span class="line">  Downloading https:&#x2F;&#x2F;files.pythonhosted.org&#x2F;packages&#x2F;6a&#x2F;45&#x2F;1ba17c50a0bb16bd950c9c2b92ec60d40c8ebda9f3371ae4230c437120b6&#x2F;w3lib-1.21.0-py2.py3-none-any.whl</span><br><span class="line">Collecting pyOpenSSL (from Scrapy)</span><br><span class="line">  WARNING: Retrying (Retry(total&#x3D;4, connect&#x3D;None, read&#x3D;None, redirect&#x3D;None, status&#x3D;None)) after connection broken by &#39;ReadTimeoutError(&quot;HTTPSConnectionPool(host&#x3D;&#39;pypi.org&#39;, port&#x3D;443): Read timed out. (read timeout&#x3D;15)&quot;)&#39;: &#x2F;simple&#x2F;pyopenssl&#x2F;</span><br><span class="line">  WARNING: Retrying (Retry(total&#x3D;3, connect&#x3D;None, read&#x3D;None, redirect&#x3D;None, status&#x3D;None)) after connection broken by &#39;ReadTimeoutError(&quot;HTTPSConnectionPool(host&#x3D;&#39;pypi.org&#39;, port&#x3D;443): Read timed out. (read timeout&#x3D;15)&quot;)&#39;: &#x2F;simple&#x2F;pyopenssl&#x2F;</span><br><span class="line">  Downloading https:&#x2F;&#x2F;files.pythonhosted.org&#x2F;packages&#x2F;01&#x2F;c8&#x2F;ceb170d81bd3941cbeb9940fc6cc2ef2ca4288d0ca8929ea4db5905d904d&#x2F;pyOpenSSL-19.0.0-py2.py3-none-any.whl (53kB)</span><br><span class="line">     |████████████████████████▋       | 40kB 1.8kB&#x2F;s eta 0:00:08ERROR: Exception:</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File &quot;&#x2F;usr&#x2F;local&#x2F;lib&#x2F;python3.7&#x2F;site-packages&#x2F;pip&#x2F;_vendor&#x2F;urllib3&#x2F;response.py&quot;, line 360, in _error_catcher</span><br><span class="line">    yield</span><br><span class="line">  File &quot;&#x2F;usr&#x2F;local&#x2F;lib&#x2F;python3.7&#x2F;site-packages&#x2F;pip&#x2F;_vendor&#x2F;urllib3&#x2F;response.py&quot;, line 442, in read</span><br><span class="line">    data &#x3D; self._fp.read(amt)</span><br><span class="line">  File &quot;&#x2F;usr&#x2F;local&#x2F;lib&#x2F;python3.7&#x2F;site-packages&#x2F;pip&#x2F;_vendor&#x2F;cachecontrol&#x2F;filewrapper.py&quot;, line 62, in read</span><br><span class="line">    data &#x3D; self.__fp.read(amt)</span><br><span class="line">  File &quot;&#x2F;usr&#x2F;local&#x2F;Cellar&#x2F;python&#x2F;3.7.4&#x2F;Frameworks&#x2F;Python.framework&#x2F;Versions&#x2F;3.7&#x2F;lib&#x2F;python3.7&#x2F;http&#x2F;client.py&quot;, line 457, in read</span><br><span class="line">    n &#x3D; self.readinto(b)</span><br><span class="line">  File &quot;&#x2F;usr&#x2F;local&#x2F;Cellar&#x2F;python&#x2F;3.7.4&#x2F;Frameworks&#x2F;Python.framework&#x2F;Versions&#x2F;3.7&#x2F;lib&#x2F;python3.7&#x2F;http&#x2F;client.py&quot;, line 501, in readinto</span><br><span class="line">    n &#x3D; self.fp.readinto(b)</span><br><span class="line">  File &quot;&#x2F;usr&#x2F;local&#x2F;Cellar&#x2F;python&#x2F;3.7.4&#x2F;Frameworks&#x2F;Python.framework&#x2F;Versions&#x2F;3.7&#x2F;lib&#x2F;python3.7&#x2F;socket.py&quot;, line 589, in readinto</span><br><span class="line">    return self._sock.recv_into(b)</span><br><span class="line">  File &quot;&#x2F;usr&#x2F;local&#x2F;Cellar&#x2F;python&#x2F;3.7.4&#x2F;Frameworks&#x2F;Python.framework&#x2F;Versions&#x2F;3.7&#x2F;lib&#x2F;python3.7&#x2F;ssl.py&quot;, line 1071, in recv_into</span><br><span class="line">    return self.read(nbytes, buffer)</span><br><span class="line">  File &quot;&#x2F;usr&#x2F;local&#x2F;Cellar&#x2F;python&#x2F;3.7.4&#x2F;Frameworks&#x2F;Python.framework&#x2F;Versions&#x2F;3.7&#x2F;lib&#x2F;python3.7&#x2F;ssl.py&quot;, line 929, in read</span><br><span class="line">    return self._sslobj.read(len, buffer)</span><br><span class="line">socket.timeout: The read operation timed out</span><br><span class="line"></span><br><span class="line">During handling of the above exception, another exception occurred:</span><br><span class="line"></span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File &quot;&#x2F;usr&#x2F;local&#x2F;lib&#x2F;python3.7&#x2F;site-packages&#x2F;pip&#x2F;_internal&#x2F;cli&#x2F;base_command.py&quot;, line 178, in main</span><br><span class="line">    status &#x3D; self.run(options, args)</span><br><span class="line">  File &quot;&#x2F;usr&#x2F;local&#x2F;lib&#x2F;python3.7&#x2F;site-packages&#x2F;pip&#x2F;_internal&#x2F;commands&#x2F;install.py&quot;, line 352, in run</span><br><span class="line">    resolver.resolve(requirement_set)</span><br><span class="line">  File &quot;&#x2F;usr&#x2F;local&#x2F;lib&#x2F;python3.7&#x2F;site-packages&#x2F;pip&#x2F;_internal&#x2F;resolve.py&quot;, line 131, in resolve</span><br><span class="line">    self._resolve_one(requirement_set, req)</span><br><span class="line">  File &quot;&#x2F;usr&#x2F;local&#x2F;lib&#x2F;python3.7&#x2F;site-packages&#x2F;pip&#x2F;_internal&#x2F;resolve.py&quot;, line 294, in _resolve_one</span><br><span class="line">    abstract_dist &#x3D; self._get_abstract_dist_for(req_to_install)</span><br><span class="line">  File &quot;&#x2F;usr&#x2F;local&#x2F;lib&#x2F;python3.7&#x2F;site-packages&#x2F;pip&#x2F;_internal&#x2F;resolve.py&quot;, line 242, in _get_abstract_dist_for</span><br><span class="line">    self.require_hashes</span><br><span class="line">  File &quot;&#x2F;usr&#x2F;local&#x2F;lib&#x2F;python3.7&#x2F;site-packages&#x2F;pip&#x2F;_internal&#x2F;operations&#x2F;prepare.py&quot;, line 347, in prepare_linked_requirement</span><br><span class="line">    progress_bar&#x3D;self.progress_bar</span><br><span class="line">  File &quot;&#x2F;usr&#x2F;local&#x2F;lib&#x2F;python3.7&#x2F;site-packages&#x2F;pip&#x2F;_internal&#x2F;download.py&quot;, line 886, in unpack_url</span><br><span class="line">    progress_bar&#x3D;progress_bar</span><br><span class="line">  File &quot;&#x2F;usr&#x2F;local&#x2F;lib&#x2F;python3.7&#x2F;site-packages&#x2F;pip&#x2F;_internal&#x2F;download.py&quot;, line 746, in unpack_http_url</span><br><span class="line">    progress_bar)</span><br><span class="line">  File &quot;&#x2F;usr&#x2F;local&#x2F;lib&#x2F;python3.7&#x2F;site-packages&#x2F;pip&#x2F;_internal&#x2F;download.py&quot;, line 954, in _download_http_url</span><br><span class="line">    _download_url(resp, link, content_file, hashes, progress_bar)</span><br><span class="line">  File &quot;&#x2F;usr&#x2F;local&#x2F;lib&#x2F;python3.7&#x2F;site-packages&#x2F;pip&#x2F;_internal&#x2F;download.py&quot;, line 683, in _download_url</span><br><span class="line">    hashes.check_against_chunks(downloaded_chunks)</span><br><span class="line">  File &quot;&#x2F;usr&#x2F;local&#x2F;lib&#x2F;python3.7&#x2F;site-packages&#x2F;pip&#x2F;_internal&#x2F;utils&#x2F;hashes.py&quot;, line 62, in check_against_chunks</span><br><span class="line">    for chunk in chunks:</span><br><span class="line">  File &quot;&#x2F;usr&#x2F;local&#x2F;lib&#x2F;python3.7&#x2F;site-packages&#x2F;pip&#x2F;_internal&#x2F;download.py&quot;, line 651, in written_chunks</span><br><span class="line">    for chunk in chunks:</span><br><span class="line">  File &quot;&#x2F;usr&#x2F;local&#x2F;lib&#x2F;python3.7&#x2F;site-packages&#x2F;pip&#x2F;_internal&#x2F;utils&#x2F;ui.py&quot;, line 156, in iter</span><br><span class="line">    for x in it:</span><br><span class="line">  File &quot;&#x2F;usr&#x2F;local&#x2F;lib&#x2F;python3.7&#x2F;site-packages&#x2F;pip&#x2F;_internal&#x2F;download.py&quot;, line 640, in resp_read</span><br><span class="line">    decode_content&#x3D;False):</span><br><span class="line">  File &quot;&#x2F;usr&#x2F;local&#x2F;lib&#x2F;python3.7&#x2F;site-packages&#x2F;pip&#x2F;_vendor&#x2F;urllib3&#x2F;response.py&quot;, line 494, in stream</span><br><span class="line">    data &#x3D; self.read(amt&#x3D;amt, decode_content&#x3D;decode_content)</span><br><span class="line">  File &quot;&#x2F;usr&#x2F;local&#x2F;lib&#x2F;python3.7&#x2F;site-packages&#x2F;pip&#x2F;_vendor&#x2F;urllib3&#x2F;response.py&quot;, line 459, in read</span><br><span class="line">    raise IncompleteRead(self._fp_bytes_read, self.length_remaining)</span><br><span class="line">  File &quot;&#x2F;usr&#x2F;local&#x2F;Cellar&#x2F;python&#x2F;3.7.4&#x2F;Frameworks&#x2F;Python.framework&#x2F;Versions&#x2F;3.7&#x2F;lib&#x2F;python3.7&#x2F;contextlib.py&quot;, line 130, in __exit__</span><br><span class="line">    self.gen.throw(type, value, traceback)</span><br><span class="line">  File &quot;&#x2F;usr&#x2F;local&#x2F;lib&#x2F;python3.7&#x2F;site-packages&#x2F;pip&#x2F;_vendor&#x2F;urllib3&#x2F;response.py&quot;, line 365, in _error_catcher</span><br><span class="line">    raise ReadTimeoutError(self._pool, None, &#39;Read timed out.&#39;)</span><br><span class="line">pip._vendor.urllib3.exceptions.ReadTimeoutError: HTTPSConnectionPool(host&#x3D;&#39;files.pythonhosted.org&#39;, port&#x3D;443): Read timed out.</span><br></pre></td></tr></table></figure><h2 id="✘-l-192---sudo-pip3-install-–upgrade-pyopenssl"><a href="#✘-l-192---sudo-pip3-install-–upgrade-pyopenssl" class="headerlink" title="✘ l@192  ~  sudo pip3 install –upgrade pyopenssl"></a>✘ l@192  ~  sudo pip3 install –upgrade pyopenssl</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">Password:</span><br><span class="line">WARNING: The directory &#39;&#x2F;Users&#x2F;l&#x2F;Library&#x2F;Caches&#x2F;pip&#x2F;http&#39; or its parent directory is not owned by the current user and the cache has been disabled. Please check the permissions and owner of that directory. If executing pip with sudo, you may want sudo&#39;s -H flag.</span><br><span class="line">WARNING: The directory &#39;&#x2F;Users&#x2F;l&#x2F;Library&#x2F;Caches&#x2F;pip&#39; or its parent directory is not owned by the current user and caching wheels has been disabled. check the permissions and owner of that directory. If executing pip with sudo, you may want sudo&#39;s -H flag.</span><br><span class="line">Collecting pyopenssl</span><br><span class="line">  Downloading https:&#x2F;&#x2F;files.pythonhosted.org&#x2F;packages&#x2F;01&#x2F;c8&#x2F;ceb170d81bd3941cbeb9940fc6cc2ef2ca4288d0ca8929ea4db5905d904d&#x2F;pyOpenSSL-19.0.0-py2.py3-none-any.whl (53kB)</span><br><span class="line">     |████████████████████████████████| 61kB 27kB&#x2F;s</span><br><span class="line">Collecting cryptography&gt;&#x3D;2.3 (from pyopenssl)</span><br><span class="line">  Downloading https:&#x2F;&#x2F;files.pythonhosted.org&#x2F;packages&#x2F;63&#x2F;4e&#x2F;57b7a6bd98906872fcd2531e74b532de2abe17d675a5cf171931fcb4a9e8&#x2F;cryptography-2.7-cp34-abi3-macosx_10_6_intel.whl (1.6MB)</span><br><span class="line">     |████████████████████████████████| 1.6MB 3.7MB&#x2F;s</span><br><span class="line">Collecting six&gt;&#x3D;1.5.2 (from pyopenssl)</span><br><span class="line">  Downloading https:&#x2F;&#x2F;files.pythonhosted.org&#x2F;packages&#x2F;73&#x2F;fb&#x2F;00a976f728d0d1fecfe898238ce23f502a721c0ac0ecfedb80e0d88c64e9&#x2F;six-1.12.0-py2.py3-none-any.whl</span><br><span class="line">Collecting asn1crypto&gt;&#x3D;0.21.0 (from cryptography&gt;&#x3D;2.3-&gt;pyopenssl)</span><br><span class="line">  Downloading https:&#x2F;&#x2F;files.pythonhosted.org&#x2F;packages&#x2F;ea&#x2F;cd&#x2F;35485615f45f30a510576f1a56d1e0a7ad7bd8ab5ed7cdc600ef7cd06222&#x2F;asn1crypto-0.24.0-py2.py3-none-any.whl (101kB)</span><br><span class="line">     |████████████████████████████████| 102kB 7.0MB&#x2F;s</span><br><span class="line">Collecting cffi!&#x3D;1.11.3,&gt;&#x3D;1.8 (from cryptography&gt;&#x3D;2.3-&gt;pyopenssl)</span><br><span class="line">  Downloading https:&#x2F;&#x2F;files.pythonhosted.org&#x2F;packages&#x2F;f0&#x2F;48&#x2F;5aa4ea664eba26dd5142558d04762f5065c02220b4665b3f7eecb9bb614e&#x2F;cffi-1.12.3-cp37-cp37m-macosx_10_9_x86_64.whl (169kB)</span><br><span class="line">     |████████████████████████████████| 174kB 6.6MB&#x2F;s</span><br><span class="line">Collecting pycparser (from cffi!&#x3D;1.11.3,&gt;&#x3D;1.8-&gt;cryptography&gt;&#x3D;2.3-&gt;pyopenssl)</span><br><span class="line">  Downloading https:&#x2F;&#x2F;files.pythonhosted.org&#x2F;packages&#x2F;68&#x2F;9e&#x2F;49196946aee219aead1290e00d1e7fdeab8567783e83e1b9ab5585e6206a&#x2F;pycparser-2.19.tar.gz (158kB)</span><br><span class="line">     |████████████████████████████████| 163kB 14.7MB&#x2F;s</span><br><span class="line">Building wheels for collected packages: pycparser</span><br><span class="line">  Building wheel for pycparser (setup.py) ... done</span><br><span class="line">  Stored in directory: &#x2F;Users&#x2F;l&#x2F;Library&#x2F;Caches&#x2F;pip&#x2F;wheels&#x2F;f2&#x2F;9a&#x2F;90&#x2F;de94f8556265ddc9d9c8b271b0f63e57b26fb1d67a45564511</span><br><span class="line">Successfully built pycparser</span><br><span class="line">Installing collected packages: six, asn1crypto, pycparser, cffi, cryptography, pyopenssl</span><br><span class="line">Successfully installed asn1crypto-0.24.0 cffi-1.12.3 cryptography-2.7 pycparser-2.19 pyopenssl-19.0.0 six-1.12.0</span><br></pre></td></tr></table></figure><h2 id="l-192---sudo-pip3-install-scrapy"><a href="#l-192---sudo-pip3-install-scrapy" class="headerlink" title="l@192  ~  sudo pip3 install scrapy"></a>l@192  ~  sudo pip3 install scrapy</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">WARNING: The directory &#39;&#x2F;Users&#x2F;l&#x2F;Library&#x2F;Caches&#x2F;pip&#x2F;http&#39; or its parent directory is not owned by the current user and the cache has been disabled. Please check the permissions and owner of that directory. If executing pip with sudo, you may want sudo&#39;s -H flag.</span><br><span class="line">WARNING: The directory &#39;&#x2F;Users&#x2F;l&#x2F;Library&#x2F;Caches&#x2F;pip&#39; or its parent directory is not owned by the current user and caching wheels has been disabled. check the permissions and owner of that directory. If executing pip with sudo, you may want sudo&#39;s -H flag.</span><br><span class="line">Collecting scrapy</span><br><span class="line">  Downloading https:&#x2F;&#x2F;files.pythonhosted.org&#x2F;packages&#x2F;29&#x2F;4b&#x2F;585e8e111ffb01466c59281f34febb13ad1a95d7fb3919fd57c33fc732a5&#x2F;Scrapy-1.7.3-py2.py3-none-any.whl (234kB)</span><br><span class="line">     |████████████████████████████████| 235kB 4.4kB&#x2F;s</span><br><span class="line">Collecting w3lib&gt;&#x3D;1.17.0 (from scrapy)</span><br><span class="line">  Downloading https:&#x2F;&#x2F;files.pythonhosted.org&#x2F;packages&#x2F;6a&#x2F;45&#x2F;1ba17c50a0bb16bd950c9c2b92ec60d40c8ebda9f3371ae4230c437120b6&#x2F;w3lib-1.21.0-py2.py3-none-any.whl</span><br><span class="line">Collecting lxml; python_version !&#x3D; &quot;3.4&quot; (from scrapy)</span><br><span class="line">  Downloading https:&#x2F;&#x2F;files.pythonhosted.org&#x2F;packages&#x2F;bd&#x2F;9f&#x2F;6cda4672d3ad1aa4cf818ab8401a763787efba751c88aaf4b38fc8f923bb&#x2F;lxml-4.4.1-cp37-cp37m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl (8.9MB)</span><br><span class="line">     |████████████████████████████████| 8.9MB 97kB&#x2F;s</span><br><span class="line">Collecting Twisted&gt;&#x3D;13.1.0; python_version !&#x3D; &quot;3.4&quot; (from scrapy)</span><br><span class="line">  Downloading https:&#x2F;&#x2F;files.pythonhosted.org&#x2F;packages&#x2F;61&#x2F;31&#x2F;3855dcacd1d3b2e60c0b4ccc8e727b8cd497bd7087d327d81a9f0cbb580c&#x2F;Twisted-19.7.0.tar.bz2 (3.1MB)</span><br><span class="line">     |████████████████████████████████| 3.1MB 207kB&#x2F;s</span><br><span class="line">Collecting parsel&gt;&#x3D;1.5 (from scrapy)</span><br><span class="line">  Downloading https:&#x2F;&#x2F;files.pythonhosted.org&#x2F;packages&#x2F;86&#x2F;c8&#x2F;fc5a2f9376066905dfcca334da2a25842aedfda142c0424722e7c497798b&#x2F;parsel-1.5.2-py2.py3-none-any.whl</span><br><span class="line">Requirement already satisfied: pyOpenSSL in &#x2F;usr&#x2F;local&#x2F;lib&#x2F;python3.7&#x2F;site-packages (from scrapy) (19.0.0)</span><br><span class="line">Requirement already satisfied: six&gt;&#x3D;1.5.2 in &#x2F;usr&#x2F;local&#x2F;lib&#x2F;python3.7&#x2F;site-packages (from scrapy) (1.12.0)</span><br><span class="line">Collecting queuelib (from scrapy)</span><br><span class="line">  Downloading https:&#x2F;&#x2F;files.pythonhosted.org&#x2F;packages&#x2F;4c&#x2F;85&#x2F;ae64e9145f39dd6d14f8af3fa809a270ef3729f3b90b3c0cf5aa242ab0d4&#x2F;queuelib-1.5.0-py2.py3-none-any.whl</span><br><span class="line">Collecting cssselect&gt;&#x3D;0.9 (from scrapy)</span><br><span class="line">  Downloading https:&#x2F;&#x2F;files.pythonhosted.org&#x2F;packages&#x2F;3b&#x2F;d4&#x2F;3b5c17f00cce85b9a1e6f91096e1cc8e8ede2e1be8e96b87ce1ed09e92c5&#x2F;cssselect-1.1.0-py2.py3-none-any.whl</span><br><span class="line">Collecting service-identity (from scrapy)</span><br><span class="line">  Downloading https:&#x2F;&#x2F;files.pythonhosted.org&#x2F;packages&#x2F;e9&#x2F;7c&#x2F;2195b890023e098f9618d43ebc337d83c8b38d414326685339eb024db2f6&#x2F;service_identity-18.1.0-py2.py3-none-any.whl</span><br><span class="line">Collecting PyDispatcher&gt;&#x3D;2.0.5 (from scrapy)</span><br><span class="line">  Downloading https:&#x2F;&#x2F;files.pythonhosted.org&#x2F;packages&#x2F;cd&#x2F;37&#x2F;39aca520918ce1935bea9c356bcbb7ed7e52ad4e31bff9b943dfc8e7115b&#x2F;PyDispatcher-2.0.5.tar.gz</span><br><span class="line">Collecting zope.interface&gt;&#x3D;4.4.2 (from Twisted&gt;&#x3D;13.1.0; python_version !&#x3D; &quot;3.4&quot;-&gt;scrapy)</span><br><span class="line">  Downloading https:&#x2F;&#x2F;files.pythonhosted.org&#x2F;packages&#x2F;d9&#x2F;3a&#x2F;101934e0f2026f0a58698978bfedec6e2021b28b846d9e1d9b54369e044d&#x2F;zope.interface-4.6.0-cp37-cp37m-macosx_10_14_x86_64.whl (131kB)</span><br><span class="line">     |████████████████████████████████| 133kB 124kB&#x2F;s</span><br><span class="line">Collecting constantly&gt;&#x3D;15.1 (from Twisted&gt;&#x3D;13.1.0; python_version !&#x3D; &quot;3.4&quot;-&gt;scrapy)</span><br><span class="line">  Downloading https:&#x2F;&#x2F;files.pythonhosted.org&#x2F;packages&#x2F;b9&#x2F;65&#x2F;48c1909d0c0aeae6c10213340ce682db01b48ea900a7d9fce7a7910ff318&#x2F;constantly-15.1.0-py2.py3-none-any.whl</span><br><span class="line">Collecting incremental&gt;&#x3D;16.10.1 (from Twisted&gt;&#x3D;13.1.0; python_version !&#x3D; &quot;3.4&quot;-&gt;scrapy)</span><br><span class="line">  Downloading https:&#x2F;&#x2F;files.pythonhosted.org&#x2F;packages&#x2F;f5&#x2F;1d&#x2F;c98a587dc06e107115cf4a58b49de20b19222c83d75335a192052af4c4b7&#x2F;incremental-17.5.0-py2.py3-none-any.whl</span><br><span class="line">Collecting Automat&gt;&#x3D;0.3.0 (from Twisted&gt;&#x3D;13.1.0; python_version !&#x3D; &quot;3.4&quot;-&gt;scrapy)</span><br><span class="line">  Downloading https:&#x2F;&#x2F;files.pythonhosted.org&#x2F;packages&#x2F;a3&#x2F;86&#x2F;14c16bb98a5a3542ed8fed5d74fb064a902de3bdd98d6584b34553353c45&#x2F;Automat-0.7.0-py2.py3-none-any.whl</span><br><span class="line">Collecting hyperlink&gt;&#x3D;17.1.1 (from Twisted&gt;&#x3D;13.1.0; python_version !&#x3D; &quot;3.4&quot;-&gt;scrapy)</span><br><span class="line">  Downloading https:&#x2F;&#x2F;files.pythonhosted.org&#x2F;packages&#x2F;7f&#x2F;91&#x2F;e916ca10a2de1cb7101a9b24da546fb90ee14629e23160086cf3361c4fb8&#x2F;hyperlink-19.0.0-py2.py3-none-any.whl</span><br><span class="line">Collecting PyHamcrest&gt;&#x3D;1.9.0 (from Twisted&gt;&#x3D;13.1.0; python_version !&#x3D; &quot;3.4&quot;-&gt;scrapy)</span><br><span class="line">  Downloading https:&#x2F;&#x2F;files.pythonhosted.org&#x2F;packages&#x2F;9a&#x2F;d5&#x2F;d37fd731b7d0e91afcc84577edeccf4638b4f9b82f5ffe2f8b62e2ddc609&#x2F;PyHamcrest-1.9.0-py2.py3-none-any.whl (52kB)</span><br><span class="line">     |████████████████████████████████| 61kB 123kB&#x2F;s</span><br><span class="line">Collecting attrs&gt;&#x3D;17.4.0 (from Twisted&gt;&#x3D;13.1.0; python_version !&#x3D; &quot;3.4&quot;-&gt;scrapy)</span><br><span class="line">  Downloading https:&#x2F;&#x2F;files.pythonhosted.org&#x2F;packages&#x2F;23&#x2F;96&#x2F;d828354fa2dbdf216eaa7b7de0db692f12c234f7ef888cc14980ef40d1d2&#x2F;attrs-19.1.0-py2.py3-none-any.whl</span><br><span class="line">Requirement already satisfied: cryptography&gt;&#x3D;2.3 in &#x2F;usr&#x2F;local&#x2F;lib&#x2F;python3.7&#x2F;site-packages (from pyOpenSSL-&gt;scrapy) (2.7)</span><br><span class="line">Collecting pyasn1 (from service-identity-&gt;scrapy)</span><br><span class="line">  Downloading https:&#x2F;&#x2F;files.pythonhosted.org&#x2F;packages&#x2F;6a&#x2F;6e&#x2F;209351ec34b7d7807342e2bb6ff8a96eef1fd5dcac13bdbadf065c2bb55c&#x2F;pyasn1-0.4.6-py2.py3-none-any.whl (75kB)</span><br><span class="line">     |████████████████████████████████| 81kB 94kB&#x2F;s</span><br><span class="line">Collecting pyasn1-modules (from service-identity-&gt;scrapy)</span><br><span class="line">  Downloading https:&#x2F;&#x2F;files.pythonhosted.org&#x2F;packages&#x2F;be&#x2F;70&#x2F;e5ea8afd6d08a4b99ebfc77bd1845248d56cfcf43d11f9dc324b9580a35c&#x2F;pyasn1_modules-0.2.6-py2.py3-none-any.whl (95kB)</span><br><span class="line">     |████████████████████████████████| 102kB 146kB&#x2F;s</span><br><span class="line">Requirement already satisfied: setuptools in &#x2F;usr&#x2F;local&#x2F;lib&#x2F;python3.7&#x2F;site-packages (from zope.interface&gt;&#x3D;4.4.2-&gt;Twisted&gt;&#x3D;13.1.0; python_version !&#x3D; &quot;3.4&quot;-&gt;scrapy) (41.0.1)</span><br><span class="line">Collecting idna&gt;&#x3D;2.5 (from hyperlink&gt;&#x3D;17.1.1-&gt;Twisted&gt;&#x3D;13.1.0; python_version !&#x3D; &quot;3.4&quot;-&gt;scrapy)</span><br><span class="line">  Downloading https:&#x2F;&#x2F;files.pythonhosted.org&#x2F;packages&#x2F;14&#x2F;2c&#x2F;cd551d81dbe15200be1cf41cd03869a46fe7226e7450af7a6545bfc474c9&#x2F;idna-2.8-py2.py3-none-any.whl (58kB)</span><br><span class="line">     |████████████████████████████████| 61kB 181kB&#x2F;s</span><br><span class="line">Requirement already satisfied: cffi!&#x3D;1.11.3,&gt;&#x3D;1.8 in &#x2F;usr&#x2F;local&#x2F;lib&#x2F;python3.7&#x2F;site-packages (from cryptography&gt;&#x3D;2.3-&gt;pyOpenSSL-&gt;scrapy) (1.12.3)</span><br><span class="line">Requirement already satisfied: asn1crypto&gt;&#x3D;0.21.0 in &#x2F;usr&#x2F;local&#x2F;lib&#x2F;python3.7&#x2F;site-packages (from cryptography&gt;&#x3D;2.3-&gt;pyOpenSSL-&gt;scrapy) (0.24.0)</span><br><span class="line">Requirement already satisfied: pycparser in &#x2F;usr&#x2F;local&#x2F;lib&#x2F;python3.7&#x2F;site-packages (from cffi!&#x3D;1.11.3,&gt;&#x3D;1.8-&gt;cryptography&gt;&#x3D;2.3-&gt;pyOpenSSL-&gt;scrapy) (2.19)</span><br><span class="line">Building wheels for collected packages: Twisted, PyDispatcher</span><br><span class="line">  Building wheel for Twisted (setup.py) ... done</span><br><span class="line">  Stored in directory: &#x2F;Users&#x2F;l&#x2F;Library&#x2F;Caches&#x2F;pip&#x2F;wheels&#x2F;f4&#x2F;2b&#x2F;d5&#x2F;bf550d6bead12fec7a1383be4e994758848c4aeeb9fc627ecf</span><br><span class="line">  Building wheel for PyDispatcher (setup.py) ... done</span><br><span class="line">  Stored in directory: &#x2F;Users&#x2F;l&#x2F;Library&#x2F;Caches&#x2F;pip&#x2F;wheels&#x2F;88&#x2F;99&#x2F;96&#x2F;cfef6665f9cb1522ee6757ae5955feedf2fe25f1737f91fa7f</span><br><span class="line">Successfully built Twisted PyDispatcher</span><br><span class="line">Installing collected packages: w3lib, lxml, zope.interface, constantly, incremental, attrs, Automat, idna, hyperlink, PyHamcrest, Twisted, cssselect, parsel, queuelib, pyasn1, pyasn1-modules, service-identity, PyDispatcher, scrapy</span><br><span class="line">Successfully installed Automat-0.7.0 PyDispatcher-2.0.5 PyHamcrest-1.9.0 Twisted-19.7.0 attrs-19.1.0 constantly-15.1.0 cssselect-1.1.0 hyperlink-19.0.0 idna-2.8 incremental-17.5.0 lxml-4.4.1 parsel-1.5.2 pyasn1-0.4.6 pyasn1-modules-0.2.6 queuelib-1.5.0 scrapy-1.7.3 service-identity-18.1.0 w3lib-1.21.0 zope.interface-4.6.0</span><br></pre></td></tr></table></figure><h2 id="l-192---cd-Users-l-Documents-Py-Pydemo"><a href="#l-192---cd-Users-l-Documents-Py-Pydemo" class="headerlink" title="l@192  ~  cd /Users/l/Documents/Py/Pydemo"></a>l@192  ~  cd /Users/l/Documents/Py/Pydemo</h2><h2 id="l-192--Documents-Py-Pydemo--scrapy-startproject-firstscrapy"><a href="#l-192--Documents-Py-Pydemo--scrapy-startproject-firstscrapy" class="headerlink" title="l@192  ~/Documents/Py/Pydemo  scrapy startproject firstscrapy"></a>l@192  ~/Documents/Py/Pydemo  scrapy startproject firstscrapy</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">New Scrapy project &#39;firstscrapy&#39;, using template directory &#39;&#x2F;usr&#x2F;local&#x2F;lib&#x2F;python3.7&#x2F;site-packages&#x2F;scrapy&#x2F;templates&#x2F;project&#39;, created in:</span><br><span class="line">    &#x2F;Users&#x2F;l&#x2F;Documents&#x2F;Py&#x2F;Pydemo&#x2F;firstscrapy</span><br><span class="line"></span><br><span class="line">You can start your first spider with:</span><br><span class="line">    cd firstscrapy</span><br><span class="line">    scrapy genspider example example.com</span><br></pre></td></tr></table></figure><h2 id="l-192--Documents-Py-Pydemov-cd-firstscrapy"><a href="#l-192--Documents-Py-Pydemov-cd-firstscrapy" class="headerlink" title="l@192  ~/Documents/Py/Pydemov cd firstscrapy"></a>l@192  ~/Documents/Py/Pydemov cd firstscrapy</h2><h2 id="l-192--Documents-Py-Pydemo-firstscrapy"><a href="#l-192--Documents-Py-Pydemo-firstscrapy" class="headerlink" title="l@192  ~/Documents/Py/Pydemo/firstscrapy"></a>l@192  ~/Documents/Py/Pydemo/firstscrapy</h2>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python3 </tag>
            
            <tag> scrapy </tag>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flutter开发之Text Widget</title>
      <link href="/2019/08/21/Flutter%E5%BC%80%E5%8F%91%E4%B9%8BText%20Widget/"/>
      <url>/2019/08/21/Flutter%E5%BC%80%E5%8F%91%E4%B9%8BText%20Widget/</url>
      
        <content type="html"><![CDATA[<h3 id="Text-Widget"><a href="#Text-Widget" class="headerlink" title="Text Widget"></a>Text Widget</h3><blockquote><p>“文本”小组件显示单个样式的文本字符串。字符串可能会跨越多行，也可能全部显示在同一行上，具体取决于布局约束。</p></blockquote><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Text(</span><br><span class="line">   <span class="comment">//显示的文本</span></span><br><span class="line">  <span class="string">'Hello, <span class="subst">$_name</span>! How are you?'</span>,</span><br><span class="line">  <span class="comment">//对齐的方式</span></span><br><span class="line">  textAlign: TextAlign.center,</span><br><span class="line">  </span><br><span class="line">  overflow: TextOverflow.ellipsis,</span><br><span class="line">  </span><br><span class="line">  <span class="comment">//文本样式</span></span><br><span class="line">  style: TextStyle(fontWeight: FontWeight.bold),</span><br><span class="line">)</span><br></pre></td></tr></table></figure><blockquote><p>下面使用Text.rich构造函数，Text小部件可以显示具有不同样式TextSpans的段落。下面的示例显示每个单词具有不同样式的“Hello beautiful world”。</p></blockquote><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> Text.rich(</span><br><span class="line">  TextSpan(</span><br><span class="line">    text: <span class="string">'Hello'</span>, <span class="comment">// default text style</span></span><br><span class="line">    children: &lt;TextSpan&gt;[</span><br><span class="line">      TextSpan(text: <span class="string">' beautiful '</span>, style: TextStyle(fontStyle: FontStyle.italic)),</span><br><span class="line">      TextSpan(text: <span class="string">'world'</span>, style: TextStyle(fontWeight: FontWeight.bold)),</span><br><span class="line">    ],</span><br><span class="line">  ),</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h4 id="交互"><a href="#交互" class="headerlink" title="交互"></a>交互</h4><p>要使Text对触摸事件做出反应，请使用GestureDetector.onTap处理程序将其包装在GestureDetector小部件中。</p><p>在材料设计应用程序中，请考虑使用FlatButton，或者如果不合适，至少使用InkWell而不是GestureDetector。</p><p>要使文本的各个部分具有交互性，请使用RichText并将TapGestureRecognizer指定为文本相关部分的TextSpan.recognizer。</p><blockquote><p><a href="https://api.flutter.dev/flutter/widgets/RichText-class.html" target="_blank" rel="noopener">RichText</a>，它可以让您更好地控制文本样式。<br><a href="https://api.flutter.dev/flutter/widgets/DefaultTextStyle-class.html" target="_blank" rel="noopener">DefaultTextStyle</a>，用于设置Text小部件的默认样式。</p></blockquote><h4 id="构造方法"><a href="#构造方法" class="headerlink" title="构造方法"></a>构造方法</h4><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"> </span><br><span class="line">Text(<span class="built_in">String</span> data, &#123; </span><br><span class="line">           Key key, </span><br><span class="line">           TextStyle style, </span><br><span class="line">           StrutStyle strutStyle,</span><br><span class="line">           TextAlign textAlign,</span><br><span class="line">           TextDirection textDirection,</span><br><span class="line">           Locale locale, </span><br><span class="line">           <span class="built_in">bool</span> softWrap, </span><br><span class="line">           TextOverflow overflow, </span><br><span class="line">           <span class="built_in">double</span> textScaleFactor, </span><br><span class="line">           <span class="built_in">int</span> maxLines, </span><br><span class="line">           <span class="built_in">String</span> semanticsLabel </span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Text.rich(TextSpan textSpan, &#123; </span><br><span class="line">                   Key key, </span><br><span class="line">                   TextStyle style,</span><br><span class="line">                   StrutStyle strutStyle,</span><br><span class="line">                   TextAlign textAlign,</span><br><span class="line">                   TextDirection textDirection, </span><br><span class="line">                   Locale locale, </span><br><span class="line">                   <span class="built_in">bool</span> softWrap, </span><br><span class="line">                   TextOverflow overflow, </span><br><span class="line">                   <span class="built_in">double</span> textScaleFactor, </span><br><span class="line">                   <span class="built_in">int</span> maxLines, </span><br><span class="line">                   <span class="built_in">String</span> semanticsLabel </span><br><span class="line">    </span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="属性"><a href="#属性" class="headerlink" title="属性"></a>属性</h4><ul><li><p>data → String   </p></li><li><p><em>要显示的文字</em></p></li><li><p>locale → Locale</p><ul><li><em>用于在可以以不同方式呈现相同Unicode字符时选择字体，具体取决于区域设置</em></li><li><em>很少需要设置此属性。默认情况下，其值继承自包含Localizations.localeOf（context）的应用程序</em></li><li><em>有关更多信息，请参见<a href="https://api.flutter.dev/flutter/widgets/Text/locale.html" target="_blank" rel="noopener">RenderParagraph.locale</a>。</em></li></ul></li><li><p>maxLines→int</p></li><li><p><em>文本要跨越的可选最大行数，必要时包装。如果文本超过给定的行数，则会根据溢出将其截断</em></p></li><li><p>overflow→TextOverflow</p><ul><li><em>如何处理视觉溢出</em></li><li>TextOverflow枚举<ul><li>clip→const TextOverflow<br>剪切溢出的文本以修复其容器。<br>const TextOverflow（0）</li><li>ellipsis→const TextOverflow<br>将溢出的文本淡化为透明。<br>const TextOverflow（1）</li><li>ellipsis→const TextOverflow<br>使用省略号表示文本已溢出。<br>const TextOverflow（2）</li><li>visible→const TextOverflow<br>在其容器外部渲染溢出的文本。<br>const TextOverflow（3）</li><li>values→const List <TextOverflow><br>此枚举中值的常量列表，按其声明顺序排列。<br>const List <TextOverflow></TextOverflow></TextOverflow></li></ul></li></ul></li><li><p>semanticsLabel→String</p><ul><li><em>此文本的替代语义标签</em></li><li><em>如果存在, 这个小部件的语义将包含此值, 而不是实际的文本。这将覆盖任何直接应用于 TextSpans 的语义标签</em></li><li><em>这对于用全文值替换缩写或短文很有用: <code>Text(r&#39;$$&#39;, semanticsLabel: &#39;Double dollars&#39;)</code></em></li></ul></li><li><p>softWrap→bool</p><ul><li><em>文本是否应该在软换行符处中断</em></li><li><em>如果是false, 文本中的字形将被定位为无限的水平空间</em></li></ul></li><li><p>strutStyle→StrutStyle</p><ul><li><p><em>要使用的strut风格。 Strut样式定义了strut，它设置了最小垂直布局度量</em></p></li><li><p><em>允许省略或提供 null 将禁用strut. 为 StrutStyle 的任何属性提供 null 将导致使用默认值</em></p></li><li><p><em>强烈建议至少指定一个字体. 有关详细信息, 请参见 <a href="https://api.flutter.dev/flutter/painting/StrutStyle-class.html" target="_blank" rel="noopener">StrutStyle</a>。</em></p></li><li><p>eg:</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">   <span class="keyword">const</span> Text(</span><br><span class="line">        <span class="string">'Hello, world!\nSecond line!'</span>,</span><br><span class="line">        style: TextStyle(</span><br><span class="line">        fontSize: <span class="number">10</span>,</span><br><span class="line">        fontFamily: <span class="string">'Raleway'</span>,</span><br><span class="line">    ),</span><br><span class="line">  strutStyle: StrutStyle(</span><br><span class="line">        fontFamily: <span class="string">'Roboto'</span>,</span><br><span class="line">        fontSize: <span class="number">30</span>,</span><br><span class="line">        height: <span class="number">1.5</span>,</span><br><span class="line">  ),</span><br><span class="line">),</span><br></pre></td></tr></table></figure></li></ul></li><li><p>style→TextStyle</p><ul><li><em>如果为非null，则为此文本使用的样式</em></li><li><em>如果样式的 “继承” 属性为 true, 则该样式将与最接近的封闭默认文本样式合并</em></li><li><em>否则, 该样式将替换最接近的封闭的默认文本样式</em></li></ul></li><li><p>textAlign→TextAlign</p><ul><li><em>文本应如何水平对齐</em></li><li><em>TextAlign 枚举</em><ul><li>left → const TextAlign 文本左对齐 const TextAlign(0)</li><li>right → const TextAlign 文本右对齐 const TextAlign(1)</li><li>center→ const TextAlign 文本中心对齐 const TextAlign(2)</li><li>justify → const TextAlign 拉伸以柔和的换行符结束的文本行, 以填充容器的宽度. 以硬线符结束的线条与起始边缘对齐。const TextAlign(3)</li><li>start → const TextAlign  文本开始处对齐 从左到右即为左边，从右到左即为右边 const TextAlign(4)</li><li>end → const TextAlign 文本结束处对齐 从左到右即为右边，从右到左即为左边 const TextAlign(5)</li><li>values → const List<TextAlign> 此枚举中值的常量列表，按其声明顺序排列。</TextAlign></li></ul></li></ul></li><li><p>textDirection→TextDirection</p><ul><li><em>文本的方向性</em></li><li><em>这也就解释为什么出现TextAlign.start和TextAlign.end等textAlign值</em></li><li><em>eg: 例如，如果数据是英语短语后跟希伯来语短语，则在TextDirection.ltr上下文中，英语短语将位于左侧，希伯来语短语位于其右侧，而在TextDirection.rtl上下文中，英语短语将 在右边，左边是希伯来语。</em></li></ul></li><li><p>textScaleFactor→double</p><ul><li><em>每个逻辑像素的字体像素数</em></li><li><em>例如，如果文本比例因子为1.5，则文本将比指定的字体大小大50％</em></li><li><em>作为textScaleFactor赋予构造函数的值。 如果为null，将使用从环境MediaQuery获取的MediaQueryData.textScaleFactor，如果范围内没有MediaQuery，则使用1.0。</em></li></ul></li><li><p>textSpan→TextSpan</p></li><li><p><em>要显示为TextSpan的文本</em></p></li><li><p>hashCode→int</p></li><li><p><em>此对象的哈希码</em></p></li><li><p>key→Key</p></li><li><p><em>控制一个小部件如何替换树中的另一个小部件</em></p></li><li><p>runtimeType→Type</p><ul><li><em>表示对象的运行时类型</em></li></ul></li></ul><h4 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h4><ul><li><p>build（BuildContext context）→Widget</p><ul><li><em>描述此窗口小部件表示的用户界面部分</em></li></ul></li><li><p>debugFillProperties（DiagnosticPropertiesBuilder properties）→void</p><ul><li><em>添加与节点关联的其他属性</em></li></ul></li><li><p>createElement（）→StatelessElement</p><ul><li><em>创建StatelessElement以管理此窗口小部件在树中的位置。 […]</em></li></ul></li><li><p>debugDescribeChildren（）→ List<DiagnosticsNode></DiagnosticsNode></p><ul><li><em>返回描述此节点的子节点的DiagnosticsNode对象列表。 […]</em></li></ul></li><li><p>noSuchMethod（Invocation invocation）→dynamic</p><ul><li><em>访问不存在的方法或属性时调用。 […]</em></li></ul></li><li><p>toDiagnosticsNode（{String name，DiagnosticsTreeStyle style}）→DiagnosticsNode</p><ul><li><em>返回调试工具和DiagnosticsNode.toStringDeep使用的对象的调试表示形式。 […]</em></li></ul></li><li><p>toString（{DiagnosticLevel minLevel：DiagnosticLevel.debug}）→字符串</p><ul><li><em>返回此对象的字符串表示形式</em></li></ul></li><li><p>toStringDeep（{String prefixLineOne：’’，String prefixOtherLines，DiagnosticLevel minLevel：DiagnosticLevel.debug}）→String</p><ul><li><em>返回此节点及其后代的字符串表示形式。 […]</em></li></ul></li><li><p>toStringShallow（{String joiner：’，’，DiagnosticLevel minLevel：DiagnosticLevel.debug}）→String</p><ul><li><em>返回对象的单行详细描述。 […]</em></li></ul></li><li><p>toStringShort（）→String</p><ul><li><em>这个小部件的简短文字描述</em></li></ul></li></ul><h3 id="Operators运算符"><a href="#Operators运算符" class="headerlink" title="Operators运算符"></a>Operators运算符</h3><ul><li>operator ==(dynamic other) → bool<ul><li><em>等值运算符。 […]</em></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Flutter </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Flutter Text </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flutter开发之Scaffold Widget</title>
      <link href="/2019/08/20/Flutter%E5%BC%80%E5%8F%91%E4%B9%8BScaffold%20Widget/"/>
      <url>/2019/08/20/Flutter%E5%BC%80%E5%8F%91%E4%B9%8BScaffold%20Widget/</url>
      
        <content type="html"><![CDATA[<h3 id="Scaffold"><a href="#Scaffold" class="headerlink" title="Scaffold"></a>Scaffold</h3><blockquote><p>实现基本材料设计视觉布局结构</p></blockquote><h4 id="构造函数-Constructors"><a href="#构造函数-Constructors" class="headerlink" title="构造函数(Constructors)"></a>构造函数(Constructors)</h4><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">Scaffold(&#123;</span><br><span class="line">    Key key, </span><br><span class="line">    PreferredSizeWidget appBar, </span><br><span class="line">    Widget body,</span><br><span class="line">    Widget floatingActionButton, </span><br><span class="line">    FloatingActionButtonLocation floatingActionButtonLocation, FloatingActionButtonAnimator floatingActionButtonAnimator, </span><br><span class="line">    <span class="built_in">List</span>&lt;Widget&gt; persistentFooterButtons, </span><br><span class="line">    Widget drawer, </span><br><span class="line">    Widget endDrawer, </span><br><span class="line">    Widget bottomNavigationBar, </span><br><span class="line">    Widget bottomSheet, </span><br><span class="line">    Color backgroundColor, </span><br><span class="line">    <span class="built_in">bool</span> resizeToAvoidBottomPadding, </span><br><span class="line">    <span class="built_in">bool</span> resizeToAvoidBottomInset, </span><br><span class="line">    <span class="built_in">bool</span> primary: <span class="keyword">true</span>, </span><br><span class="line">    DragStartBehavior drawerDragStartBehavior: DragStartBehavior.start,</span><br><span class="line">    <span class="built_in">bool</span> extendBody: <span class="keyword">false</span> </span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="属性（Properties）"><a href="#属性（Properties）" class="headerlink" title="属性（Properties）"></a>属性（Properties）</h4><ul><li>appBar → PreferredSizeWidget</li></ul><blockquote><p>顶部导航栏</p></blockquote><ul><li>backgroundColor → Color</li></ul><blockquote><p>背景色</p></blockquote><ul><li>body → Widget</li></ul><blockquote><p>Scaffold的主要内容</p></blockquote><ul><li>bottomNavigationBar → Widget</li></ul><blockquote><p>底部导航栏</p></blockquote><ul><li>bottomSheet → Widget</li></ul><blockquote><p>The persistent bottom sheet to display. […]</p></blockquote><ul><li>drawer → Widget</li></ul><blockquote><p>显示在容器侧面的面板，通常隐藏在移动设备上。从左到右（TextDirection.ltr）或从右到左（TextDirection.rtl）滑入</p></blockquote><ul><li>drawerDragStartBehavior → DragStartBehavior</li></ul><blockquote><p>确定处理拖动开始行为的方式</p></blockquote><ul><li>endDrawer → Widget</li></ul><blockquote><p>显示在身体侧面的面板，通常隐藏在移动设备上。从右到左（TextDirection.ltr）或从左到右（TextDirection.rtl）滑动</p></blockquote><ul><li>extendBody → bool</li></ul><blockquote><p>如果为true，并且指定了bottomNavigationBar或persistentFooterButtons，则body将延伸到Scaffold的底部，而不是仅延伸到bottomNavigationBar或persistentFooterButtons的顶部</p></blockquote><ul><li>floatingActionButton → Widget</li></ul><blockquote><p>显示在容器上方的按钮，位于右下角</p></blockquote><ul><li>floatingActionButtonAnimator → FloatingActionButtonAnimator</li></ul><blockquote><p>Animator将floatingActionButton移动到新的floatingActionButtonLocation</p></blockquote><ul><li>floatingActionButtonLocation → FloatingActionButtonLocation</li></ul><blockquote><p>负责确定floatingActionButton的去向</p></blockquote><ul><li>persistentFooterButtons → List<Widget></Widget></li></ul><blockquote><p>一组显示在脚手架底部的按钮</p></blockquote><ul><li>primary → bool</li></ul><blockquote><p>此脚手架是否显示在屏幕顶部</p></blockquote><ul><li>resizeToAvoidBottomInset → bool</li></ul><blockquote><p>如果为true，则body和scaffold的浮动小部件应自行调整大小，以避免屏幕键盘的高度由环境MediaQuery的MediaQueryData.viewInsets底部属性定义</p></blockquote><ul><li>resizeToAvoidBottomPadding → bool<blockquote><p>不推荐使用此标志，请改用resizeToAvoidBottomInset,<br>@Deprecated（’使用resizeToAvoidBottomInset指定键盘出现时是否应调整主体大小’）</p></blockquote></li></ul>]]></content>
      
      
      <categories>
          
          <category> Flutter </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Flutter Scaffold </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flutter开发之Row Widget</title>
      <link href="/2019/08/18/Flutter%E5%BC%80%E5%8F%91%E4%B9%8BRow%20Widget/"/>
      <url>/2019/08/18/Flutter%E5%BC%80%E5%8F%91%E4%B9%8BRow%20Widget/</url>
      
        <content type="html"><![CDATA[<h3 id="Row"><a href="#Row" class="headerlink" title="Row"></a>Row</h3><blockquote><p>一个在水平数组中显示它的子级的小部件</p></blockquote><p>要使子级扩展以填充可用的水平空间, 请将子级包裹在一个展开的小部件中。</p><p><em>想使用竖直布局的，请前往-&gt;<a href> Column</a></em></p><p>如果你只有一个子级, 那就考虑用 “对齐” 或 “中心” 来定位子级。</p><blockquote><p>本示例将可用空间划分为三个 (水平), 并将文本置于前两个单元格中的中心, 并将 Flutter 图标置于第三个单元格的中心: </p></blockquote><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">Row(</span><br><span class="line">  children: &lt;Widget&gt;[</span><br><span class="line">    Expanded(</span><br><span class="line">      child: Text(<span class="string">'Deliver features faster'</span>, textAlign: TextAlign.center),</span><br><span class="line">    ),</span><br><span class="line">    Expanded(</span><br><span class="line">      child: Text(<span class="string">'Craft beautiful UIs'</span>, textAlign: TextAlign.center),</span><br><span class="line">    ),</span><br><span class="line">    Expanded(</span><br><span class="line">      child: FittedBox(</span><br><span class="line">        fit: BoxFit.contain, <span class="comment">// otherwise the logo will be tiny</span></span><br><span class="line">        child: <span class="keyword">const</span> FlutterLogo(),</span><br><span class="line">      ),</span><br><span class="line">    ),</span><br><span class="line">  ],</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p><strong>效果图：</strong><br><br><img src="/2019/08/18/Flutter%E5%BC%80%E5%8F%91%E4%B9%8BRow%20Widget/%22%22" alt="Row"></p>]]></content>
      
      
      <categories>
          
          <category> Flutter </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Flutter Row </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flutter开发之RaisedButton Widget</title>
      <link href="/2019/08/17/Flutter%E5%BC%80%E5%8F%91%E4%B9%8BRaisedButton%20Widget/"/>
      <url>/2019/08/17/Flutter%E5%BC%80%E5%8F%91%E4%B9%8BRaisedButton%20Widget/</url>
      
        <content type="html"><![CDATA[<h3 id="RaisedButton"><a href="#RaisedButton" class="headerlink" title="RaisedButton"></a>RaisedButton</h3><blockquote><p>一个凸起的按钮</p></blockquote><p>如果<code>onPressed</code>（即为按钮点击事件）回调为<code>null</code>，则该按钮将被禁用，默认情况下将类似于<code>disabledColor</code>中的平面按钮。如果您尝试更改按钮的颜色并且没有任何效果，请检查您是否正在传递非<code>null</code> <code>onPressed</code>处理程序。</p><p>如果您想为点击提供墨水飞溅效果,但不想使用按钮,请考虑直接使用<a href="https://api.flutter.dev/flutter/material/InkWell-class.html" target="_blank" rel="noopener">inkwell</a>。</p><p>凸起按钮的最小尺寸为88.0×36.0，可以用<code>ButtonTheme</code>覆盖。</p><p><strong>此示例演示如何呈现禁用的RaisedButton，启用的RaisedButton以及最后一个具有渐变背景的RaisedButton:</strong></p><p><img src="https://flutter.github.io/assets-for-api-docs/assets/material/raised_button.png" alt="Img"></p><p>源码：</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">Widget build(BuildContext context) &#123;</span><br><span class="line">  <span class="keyword">return</span> Center(</span><br><span class="line">    child: Column(</span><br><span class="line">      mainAxisSize: MainAxisSize.min,</span><br><span class="line">      children: &lt;Widget&gt;[</span><br><span class="line">        <span class="keyword">const</span> RaisedButton(</span><br><span class="line">          onPressed: <span class="keyword">null</span>,</span><br><span class="line">          child: Text(</span><br><span class="line">            <span class="string">'Disabled Button'</span>,</span><br><span class="line">            style: TextStyle(fontSize: <span class="number">20</span>)</span><br><span class="line">          ),</span><br><span class="line">        ),</span><br><span class="line">        <span class="keyword">const</span> SizedBox(height: <span class="number">30</span>),</span><br><span class="line">        RaisedButton(</span><br><span class="line">          onPressed: () &#123;&#125;,</span><br><span class="line">          child: <span class="keyword">const</span> Text(</span><br><span class="line">            <span class="string">'Enabled Button'</span>,</span><br><span class="line">            style: TextStyle(fontSize: <span class="number">20</span>)</span><br><span class="line">          ),</span><br><span class="line">        ),</span><br><span class="line">        <span class="keyword">const</span> SizedBox(height: <span class="number">30</span>),</span><br><span class="line">        RaisedButton(</span><br><span class="line">          onPressed: () &#123;&#125;,</span><br><span class="line">          textColor: Colors.white,</span><br><span class="line">          padding: <span class="keyword">const</span> EdgeInsets.all(<span class="number">0.0</span>),</span><br><span class="line">          child: Container(</span><br><span class="line">            decoration: <span class="keyword">const</span> BoxDecoration(</span><br><span class="line">              gradient: LinearGradient(</span><br><span class="line">                colors: &lt;Color&gt;[</span><br><span class="line">                  Color(<span class="number">0xFF0D47A1</span>),</span><br><span class="line">                  Color(<span class="number">0xFF1976D2</span>),</span><br><span class="line">                  Color(<span class="number">0xFF42A5F5</span>),</span><br><span class="line">                ],</span><br><span class="line">              ),</span><br><span class="line">            ),</span><br><span class="line">            padding: <span class="keyword">const</span> EdgeInsets.all(<span class="number">10.0</span>),</span><br><span class="line">            child: <span class="keyword">const</span> Text(</span><br><span class="line">              <span class="string">'Gradient Button'</span>,</span><br><span class="line">              style: TextStyle(fontSize: <span class="number">20</span>)</span><br><span class="line">            ),</span><br><span class="line">          ),</span><br><span class="line">        ),</span><br><span class="line">      ],</span><br><span class="line">    ),</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="构造函数（Constructors）"><a href="#构造函数（Constructors）" class="headerlink" title="构造函数（Constructors）"></a>构造函数（Constructors）</h4><blockquote><p>创建一个填充按钮</p></blockquote><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">RaisedButton(&#123;</span><br><span class="line">   Key key, </span><br><span class="line">   <span class="meta">@required</span> VoidCallback onPressed,</span><br><span class="line">   ValueChanged&lt;<span class="built_in">bool</span>&gt; onHighlightChanged,</span><br><span class="line">   ButtonTextTheme textTheme, </span><br><span class="line">   Color textColor, </span><br><span class="line">   Color disabledTextColor, </span><br><span class="line">   Color color, </span><br><span class="line">   Color disabledColor, </span><br><span class="line">   Color highlightColor, </span><br><span class="line">   Color splashColor, </span><br><span class="line">   Brightness colorBrightness, </span><br><span class="line">   <span class="built_in">double</span> elevation, </span><br><span class="line">   <span class="built_in">double</span> highlightElevation, </span><br><span class="line">   <span class="built_in">double</span> disabledElevation, </span><br><span class="line">   EdgeInsetsGeometry padding, </span><br><span class="line">   ShapeBorder shape, </span><br><span class="line">   Clip clipBehavior: Clip.none, MaterialTapTargetSize materialTapTargetSize, <span class="built_in">Duration</span> animationDuration, </span><br><span class="line">   Widget child </span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><blockquote><p>从一对小部件创建一个填充按钮，用作按钮的图标和标签</p></blockquote><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">RaisedButton.icon(&#123;</span><br><span class="line">   Key key, </span><br><span class="line">   <span class="meta">@required</span> VoidCallback onPressed,</span><br><span class="line">   ValueChanged&lt;<span class="built_in">bool</span>&gt; onHighlightChanged,</span><br><span class="line">   ButtonTextTheme textTheme, </span><br><span class="line">   Color textColor, </span><br><span class="line">   Color disabledTextColor, </span><br><span class="line">   Color color, </span><br><span class="line">   Color disabledColor, </span><br><span class="line">   Color highlightColor, </span><br><span class="line">   Color splashColor, </span><br><span class="line">   Brightness colorBrightness, </span><br><span class="line">   <span class="built_in">double</span> elevation, </span><br><span class="line">   <span class="built_in">double</span> highlightElevation, </span><br><span class="line">   <span class="built_in">double</span> disabledElevation, </span><br><span class="line">   ShapeBorder shape, </span><br><span class="line">   Clip clipBehavior, </span><br><span class="line">   MaterialTapTargetSize materialTapTargetSize,</span><br><span class="line">   <span class="built_in">Duration</span> animationDuration, </span><br><span class="line">   <span class="meta">@required</span> Widget icon, </span><br><span class="line">   <span class="meta">@required</span> Widget label </span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="属性（Properties）"><a href="#属性（Properties）" class="headerlink" title="属性（Properties）"></a>属性（Properties）</h4><ul><li><code>animationDuration → Duration</code></li></ul><blockquote><p>动画的持续时间</p></blockquote><ul><li><code>child → Widget</code></li></ul><blockquote><p>按钮的标签部件</p></blockquote><ul><li><code>clipBehavior → Clip</code></li></ul><blockquote><p>根据此选项，内容将被剪裁（或不剪辑）</p></blockquote><ul><li><code>color → Color</code></li></ul><blockquote><p>按钮的填充颜色，由其材料显示，同时处于默认（未按下，已启用）状态</p></blockquote><ul><li><code>colorBrightness → Brightness</code></li></ul><blockquote><p>用于设置按钮的主题亮度</p></blockquote><ul><li><code>disabledColor → Color</code></li></ul><blockquote><p>禁用按钮时按钮的填充颜色</p></blockquote><ul><li><code>disabledElevation → double</code></li></ul><blockquote><p>按钮相对于其父级的高度</p></blockquote><ul><li><code>disabledTextColor → Color</code></li></ul><blockquote><p>禁用按钮时用于此按钮文本的颜色</p></blockquote><ul><li><code>elevation → double</code></li></ul><blockquote><p>放置此按钮相对于其父按钮的Z坐标</p></blockquote><ul><li><code>enabled → bool</code></li></ul><blockquote><p>设置启用还是禁用按钮</p></blockquote><ul><li><code>hashCode → int</code></li></ul><blockquote><p>此对象的哈希码(只读)</p></blockquote><ul><li><code>height → double</code></li></ul><blockquote><p>按钮的垂直范围(即高度)</p></blockquote><ul><li><code>highlightColor → Color</code></li></ul><blockquote><p>按钮的InkWell的高亮颜色</p></blockquote><ul><li><code>highlightElevation → double</code></li></ul><blockquote><p>启用并按下按钮时按钮相对于其父级的高度</p></blockquote><ul><li><code>key → Key</code></li></ul><blockquote><p>控制一个小部件如何替换树中的另一个小部件</p></blockquote><ul><li><code>materialTapTargetSize → MaterialTapTargetSize</code></li></ul><blockquote><p>配置点击目标的最小尺寸</p></blockquote><ul><li><code>minWidth → double</code></li></ul><blockquote><p>按钮占据的最小水平范围(最小宽度)</p></blockquote><ul><li><code>onHighlightChanged → ValueChanged&lt;bool&gt;</code></li></ul><blockquote><p>由底层InkWell小部件的<code>InkWell.onHighlightChanged</code>回调调用</p></blockquote><ul><li><code>onPressed → VoidCallback</code></li></ul><blockquote><p>点击或以其他方式激活按钮时调用的回调</p></blockquote><ul><li><code>padding → EdgeInsetsGeometry</code></li></ul><blockquote><p>buttons子级的内部填充</p></blockquote><ul><li><code>runtimeType → Type</code></li></ul><blockquote><p>表示对象的运行时类型(只读)</p></blockquote><ul><li><code>shape → ShapeBorder</code></li></ul><blockquote><p>按钮的阴影效果设置</p></blockquote><ul><li><code>splashColor → Color</code></li></ul><blockquote><p>按钮墨水的泼溅颜色</p></blockquote><ul><li><code>textColor → Color</code></li></ul><blockquote><p>按钮的文本颜色</p></blockquote><ul><li><p><code>textTheme → ButtonTextTheme</code></p><blockquote><p>定义按钮的基色，以及按钮的最小尺寸，内部填充和形状的默认值</p></blockquote></li></ul>]]></content>
      
      
      <categories>
          
          <category> Flutter </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Flutter RaisedButton </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flutter开发之Image Widget</title>
      <link href="/2019/08/16/Flutter%E5%BC%80%E5%8F%91%E4%B9%8BImage%20Widget/"/>
      <url>/2019/08/16/Flutter%E5%BC%80%E5%8F%91%E4%B9%8BImage%20Widget/</url>
      
        <content type="html"><![CDATA[<h3 id="Image-Widget"><a href="#Image-Widget" class="headerlink" title="Image Widget"></a>Image Widget</h3><blockquote><p>显示图像的小部件,支持以下图像格式: JPEG、PNG、GIF、动画 GIF、WebP、动画 WebP、BMP 和 WBMP</p></blockquote><p><strong>为图像可以指定的各种方式提供了几个构造函数:</strong></p><ul><li>new Image, 通过 ImageProvider获取图像</li><li>new Image.asset, 使用key值从资源包获取图像</li><li>new Image.network, 通过URL网络请求获取图像</li><li>new Image.file, 从文件中获取图像.</li><li>new Image.memory, 从 Uint8List中 获取图像.</li></ul><h4 id="构造方法（Constructors）"><a href="#构造方法（Constructors）" class="headerlink" title="构造方法（Constructors）"></a>构造方法（Constructors）</h4><blockquote><p>Image 创建一个显示图像的小部件</p></blockquote><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Image(&#123;</span><br><span class="line">    Key key, </span><br><span class="line">    <span class="meta">@required</span> ImageProvider image, </span><br><span class="line">    <span class="built_in">String</span> semanticLabel, </span><br><span class="line">    <span class="built_in">bool</span> excludeFromSemantics: <span class="keyword">false</span>, </span><br><span class="line">    <span class="built_in">double</span> width, <span class="built_in">double</span> height, </span><br><span class="line">    Color color, </span><br><span class="line">    BlendMode colorBlendMode, </span><br><span class="line">    BoxFit fit, </span><br><span class="line">    AlignmentGeometry alignment: Alignment.center, ImageRepeat repeat: ImageRepeat.noRepeat, </span><br><span class="line">    Rect centerSlice, </span><br><span class="line">    <span class="built_in">bool</span> matchTextDirection: <span class="keyword">false</span>, </span><br><span class="line">    <span class="built_in">bool</span> gaplessPlayback: <span class="keyword">false</span>, </span><br><span class="line">    FilterQuality filterQuality: FilterQuality.low </span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><blockquote><p>创建一个小部件,显示从资源包里获得的 ImageStream,图像的键是由名称参数给出的</p></blockquote><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">Image.asset(<span class="built_in">String</span> name, &#123; </span><br><span class="line">    Key key, </span><br><span class="line">    AssetBundle bundle, </span><br><span class="line">    <span class="built_in">String</span> semanticLabel, </span><br><span class="line">    <span class="built_in">bool</span> excludeFromSemantics: <span class="keyword">false</span>, </span><br><span class="line">    <span class="built_in">double</span> scale, </span><br><span class="line">    <span class="built_in">double</span> width, </span><br><span class="line">    <span class="built_in">double</span> height, </span><br><span class="line">    Color color, </span><br><span class="line">    BlendMode colorBlendMode, </span><br><span class="line">    BoxFit fit, </span><br><span class="line">    AlignmentGeometry alignment: Alignment.center, ImageRepeat repeat: ImageRepeat.noRepeat, </span><br><span class="line">    Rect centerSlice, </span><br><span class="line">    <span class="built_in">bool</span> matchTextDirection: <span class="keyword">false</span>, </span><br><span class="line">    <span class="built_in">bool</span> gaplessPlayback: <span class="keyword">false</span>, </span><br><span class="line">    <span class="built_in">String</span> package, </span><br><span class="line">    FilterQuality filterQuality: FilterQuality.low </span><br><span class="line">        </span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><blockquote><p>创建一个小部件, 显示从文件中获得的 ImageStream</p></blockquote><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">Image.file(File file, &#123; </span><br><span class="line">    Key key, </span><br><span class="line">    <span class="built_in">double</span> scale: <span class="number">1.0</span>, </span><br><span class="line">    <span class="built_in">String</span> semanticLabel, </span><br><span class="line">    <span class="built_in">bool</span> excludeFromSemantics: <span class="keyword">false</span>, </span><br><span class="line">    <span class="built_in">double</span> width, </span><br><span class="line">    <span class="built_in">double</span> height, </span><br><span class="line">    Color color, </span><br><span class="line">    BlendMode colorBlendMode, </span><br><span class="line">    BoxFit fit, </span><br><span class="line">    AlignmentGeometry alignment: Alignment.center, ImageRepeat repeat: ImageRepeat.noRepeat, </span><br><span class="line">    Rect centerSlice, </span><br><span class="line">    <span class="built_in">bool</span> matchTextDirection: <span class="keyword">false</span>, </span><br><span class="line">    <span class="built_in">bool</span> gaplessPlayback: <span class="keyword">false</span>, </span><br><span class="line">    FilterQuality filterQuality: FilterQuality.low </span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><blockquote><p>创建一个小部件,显示从Uint8List中获得的ImageStream</p></blockquote><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">Image.memory(Uint8List bytes, &#123; </span><br><span class="line">    Key key, </span><br><span class="line">    <span class="built_in">double</span> scale: <span class="number">1.0</span>, </span><br><span class="line">    <span class="built_in">String</span> semanticLabel, </span><br><span class="line">    <span class="built_in">bool</span> excludeFromSemantics: <span class="keyword">false</span>, </span><br><span class="line">    <span class="built_in">double</span> width, </span><br><span class="line">    <span class="built_in">double</span> height, </span><br><span class="line">    Color color, </span><br><span class="line">    BlendMode colorBlendMode, </span><br><span class="line">    BoxFit fit, </span><br><span class="line">    AlignmentGeometry alignment: Alignment.center, ImageRepeat repeat: ImageRepeat.noRepeat, </span><br><span class="line">    Rect centerSlice, </span><br><span class="line">    <span class="built_in">bool</span> matchTextDirection: <span class="keyword">false</span>, </span><br><span class="line">    <span class="built_in">bool</span> gaplessPlayback: <span class="keyword">false</span>, </span><br><span class="line">    FilterQuality filterQuality: FilterQuality.low</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><blockquote><p>创建一个小部件, 显示从网络获得的ImageStream</p></blockquote><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">Image.network(<span class="built_in">String</span> src, &#123; </span><br><span class="line">    Key key, </span><br><span class="line">    <span class="built_in">double</span> scale: <span class="number">1.0</span>, </span><br><span class="line">    <span class="built_in">String</span> semanticLabel, </span><br><span class="line">    <span class="built_in">bool</span> excludeFromSemantics: <span class="keyword">false</span>, </span><br><span class="line">    <span class="built_in">double</span> width, </span><br><span class="line">    <span class="built_in">double</span> height, </span><br><span class="line">    Color color, </span><br><span class="line">    BlendMode colorBlendMode, </span><br><span class="line">    BoxFit fit, </span><br><span class="line">    AlignmentGeometry alignment: Alignment.center, ImageRepeat repeat: ImageRepeat.noRepeat, </span><br><span class="line">    Rect centerSlice, </span><br><span class="line">    <span class="built_in">bool</span> matchTextDirection: <span class="keyword">false</span>, </span><br><span class="line">    <span class="built_in">bool</span> gaplessPlayback: <span class="keyword">false</span>, </span><br><span class="line">    FilterQuality filterQuality: FilterQuality.low,</span><br><span class="line">    <span class="built_in">Map</span>&lt;<span class="built_in">String</span>, <span class="built_in">String</span>&gt; headers </span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="属性（Properties）"><a href="#属性（Properties）" class="headerlink" title="属性（Properties）"></a>属性（Properties）</h4><ul><li><p>alignment → AlignmentGeometry</p><ul><li><em>设置图像的对齐方式</em></li></ul></li><li><p>centerSlice → Rect</p><ul><li><em>九片图像的中心切片</em></li><li><em>中心切片内的图像区域将水平和垂直拉伸，以使图像适合其目标</em></li><li><em>中心切片上方和下方的图像区域将仅水平拉伸，中心切片左侧和右侧的图像区域将仅垂直拉伸</em> </li></ul></li><li><p>color → Color</p><ul><li><em>如果非 null, 则使用颜色混合模式将此颜色与每个图像像素混合</em></li></ul></li><li><p>colorBlendMode → BlendMode</p><ul><li><em>用于将颜色与此图像相结合</em></li></ul></li><li><p>excludeFromSemantics → bool</p><ul><li><em>是否从语义中排除此图像</em></li></ul></li><li><p>filterQuality → FilterQuality</p><ul><li><em>用于设置图像的FilterQuality</em></li></ul></li><li><p>fit → BoxFit</p><ul><li><em>图片填充的方式</em><ul><li><code>contain</code> 在目标框中尽可能大的显示完整图像<br>  <img src="https://flutter.github.io/assets-for-api-docs/assets/painting/box_fit_contain.png" alt="box_fit"></li><li><code>cover</code>   在目标框中尽可能小的覆盖整个目标框<br>  <img src="https://flutter.github.io/assets-for-api-docs/assets/painting/box_fit_cover.png" alt="box_fit">      </li><li><code>fill</code>  通过拉伸纵横比来填充整个目标框<br>  <br><img src="https://flutter.github.io/assets-for-api-docs/assets/painting/box_fit_fill.png" alt="box_fit"> </li><li><code>fitHeight</code> 在目标框中高度填充满，不论宽度是否溢出<br>  <img src="https://flutter.github.io/assets-for-api-docs/assets/painting/box_fit_fitHeight.png" alt="box_fit"> </li><li><code>fitWidth</code>  在目标框中宽度填充满，不论高度是否溢出<br>  <img src="https://flutter.github.io/assets-for-api-docs/assets/painting/box_fit_fitWidth.png" alt="box_fit"> </li><li><code>none</code> 对齐目标框内的源（默认情况下，居中）并丢弃位于框外的源的任何部分。源图像未调整大小。<br>   <img src="https://flutter.github.io/assets-for-api-docs/assets/painting/box_fit_none.png" alt="box_fit"> </li><li><code>scaleDown</code> 对齐目标框中的源 (默认情况下, 居中), 并在必要时缩小源的比例, 以确保源适合框中。<br><br><img src="https://flutter.github.io/assets-for-api-docs/assets/painting/box_fit_scaleDown.png" alt="box_fit"> </li></ul></li></ul></li></ul><ul><li><p>gaplessPlayback → bool</p><ul><li><em>当图像更换时是继续显示旧图像 (true), 还是短暂不显示任何内容 (false)</em></li></ul></li><li><p>height → double</p><ul><li><em>如果非空, 则要求图像具有此高度</em></li></ul></li><li><p>image → ImageProvider</p><ul><li><em>要显示的图像</em></li></ul></li><li><p>matchTextDirection → bool</p><ul><li><em>是否将图像绘制到文本方向的方向</em></li></ul></li><li><p>repeat → ImageRepeat</p><ul><li><em>如何绘制图像不包括的布局边界的任何部分</em><ul><li><code>noRepeat</code> 让盒子的未覆盖部分保持透明,不重复</li><li><code>repeat</code>   在 x 和 y 方向上重复图像, 直到框被填满</li><li><code>repeatX</code> 按 x 方向重复图像, 直到水平方向填充满</li><li><code>repeatY</code> 按 Y 方向重复图像, 直到垂直方向填充满</li></ul></li></ul></li><li><p>semanticLabel → String</p><ul><li><em>对图像的语义描述</em></li></ul></li><li><p>width → double</p><ul><li><em>如果非空, 则要求图像具有此宽度</em></li></ul></li><li><p>hashCode → int</p><ul><li><em>此对象的哈希代码</em></li></ul></li><li><p>key → Key</p><ul><li><em>控制一个小部件如何替换树中的另一个小部件</em></li></ul></li><li><p>runtimeType → Type</p><ul><li><em>对象的运行时类型</em></li></ul></li></ul><h4 id="方法（Methods）"><a href="#方法（Methods）" class="headerlink" title="方法（Methods）"></a>方法（Methods）</h4><blockquote><p>在树中的给定位置为这个小部件创建可变状态。</p></blockquote><ul><li>createState() → _ImageState</li></ul><blockquote><p>添加与节点管理相关联的其他属性</p></blockquote><ul><li>debugFillProperties(DiagnosticPropertiesBuilder properties) → void</li></ul><blockquote><p>创建StatelessElement以管理此窗口小部件在树中的位置</p></blockquote><ul><li>createElement() → StatelessElement</li></ul><blockquote><p>返回描述此节点的子节点的DiagnosticsNode对象列表。</p></blockquote><ul><li>debugDescribeChildren() → List<DiagnosticsNode></DiagnosticsNode></li></ul><blockquote><p>访问不存在的方法或属性时调用</p></blockquote><ul><li>noSuchMethod(Invocation invocation) → dynamic</li></ul><blockquote><p>返回调试工具和DiagnosticsNode.toStringDeep使用的对象的调试表示形式</p></blockquote><ul><li>toDiagnosticsNode({String name, DiagnosticsTreeStyle style }) → DiagnosticsNode</li></ul><blockquote><p>返回此对象的字符串表示形式</p></blockquote><ul><li>toString({DiagnosticLevel minLevel: DiagnosticLevel.debug }) → String</li></ul><blockquote><p>返回此节点及其后代的字符串表示形式</p></blockquote><ul><li>toStringDeep({String prefixLineOne: ‘’, String prefixOtherLines, DiagnosticLevel minLevel: DiagnosticLevel.debug }) → String</li></ul><blockquote><p>返回对象的单行详细描述</p></blockquote><ul><li>toStringShallow({String joiner: ‘, ‘, DiagnosticLevel minLevel: DiagnosticLevel.debug }) → String</li></ul><blockquote><p>这个小部件的简短文字描述</p></blockquote><ul><li>toStringShort() → String</li></ul>]]></content>
      
      
      <categories>
          
          <category> Flutter </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Flutter Image </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flutter开发之Container Widget</title>
      <link href="/2019/08/15/Flutter%E5%BC%80%E5%8F%91%E4%B9%8BContainer%20Widget/"/>
      <url>/2019/08/15/Flutter%E5%BC%80%E5%8F%91%E4%B9%8BContainer%20Widget/</url>
      
        <content type="html"><![CDATA[<h3 id="Container-Widget"><a href="#Container-Widget" class="headerlink" title="Container Widget"></a>Container Widget</h3><blockquote><p>一个方便的小部件, 结合了普通的绘画、定位和大小的小部件。</p></blockquote><p>容器首先用填充物（由装饰中存在的任何边界膨胀）包围子对象，然后对填充范围应用附加约束（如果其中一个为非空，则将宽度和高度合并为约束）。然后容器被从边缘描述的额外的空白空间包围。</p><p>在绘画过程中，容器首先应用给定的变换，然后绘制装饰填充填充范围，然后绘制子对象，最后绘制前场装饰，也填充填充填充范围。</p><p>没有子对象的容器尽量大，除非传入的约束是无限的，在这种情况下，它们尽量小。有子对象的容器会根据子对象的大小来调整大小。构造函数的width、height和constraints参数重写了这一点。</p><h4 id="布局行为介绍-Layout-behavior"><a href="#布局行为介绍-Layout-behavior" class="headerlink" title="布局行为介绍(Layout behavior)"></a>布局行为介绍(Layout behavior)</h4><blockquote><p>有关框布局模型的介绍，请参阅<a href="https://api.flutter.dev/flutter/rendering/BoxConstraints-class.html" target="_blank" rel="noopener">BoxConstraints</a>。</p></blockquote><p>由于Container结合了许多其他小部件，每个小部件都有自己的布局行为，因此Container的布局行为有点复杂。</p><p>摘要：容器尝试按顺序：遵循对齐，将自身大小调整为子对象，以符合宽度，高度和约束，以扩展以适合父对象，尽可能小。</p><p>进一步来说：</p><p>如果窗口小部件没有子节点，没有高度，没有宽度，没有约束，并且父节点提供无限制约束，则Container尝试尽可能小。</p><p>如果窗口小部件没有子节点且没有对齐，但提供了高度，宽度或约束，则在给定这些约束和父节点约束的组合的情况下，Container会尽可能小。</p><p>如果窗口小部件没有子节点，没有高度，没有宽度，没有约束，没有对齐，但是父节点提供了有界约束，那么Container会扩展以适应父节点提供的约束。</p><p>如果窗口小部件具有对齐，并且父窗口提供无限制约束，则Container会尝试围绕子窗口调整自身大小。</p><p>如果窗口小部件具有对齐，并且父窗口提供有界约束，则Container会尝试展开以适合父窗口，然后根据对齐方式将子项置于其自身内部。</p><p>否则，窗口小部件具有子级但没有高度，没有宽度，没有约束，也没有对齐，并且Container将约束从父级传递给子级并调整其大小以匹配子级。</p><p>边距和填充属性也会影响布局，如这些属性的文档中所述。 （它们的效果仅仅增加了上述规则。）装饰可以隐含地增加填充（例如，BoxDecoration中的边界有助于填充）;请参阅<a href="https://api.flutter.dev/flutter/widgets/Container/padding.html" target="_blank" rel="noopener">Decoration.padding</a>。</p><p><strong>此示例显示一个48x48琥珀色方块（放置在中心小部件内，以防父小部件对容器应采用的大小有自己的意见），并留有一个空白，使其远离相邻小部件：</strong><br><img src="https://upload-images.jianshu.io/upload_images/11100630-9aafd0dda6e7ffd5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/567" alt="Container"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Center(</span><br><span class="line">  child: Container(</span><br><span class="line">    margin: const EdgeInsets.all(10.0),</span><br><span class="line">    color: Colors.amber[600],</span><br><span class="line">    width: 48.0,</span><br><span class="line">    height: 48.0,</span><br><span class="line">  ),</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p><strong>这个例子展示了如何同时使用容器的许多特性。这些约束被设置为适合字体大小加上足够的垂直净空，同时水平展开以适合父级。填充用于确保内容和文本之间有空间。这个颜色使盒子变成蓝色。对齐会使子项在框中居中。最后，变换对整个装置应用轻微的旋转以完成效果:</strong></p><p><img src="https://upload-images.jianshu.io/upload_images/11100630-8872dd960763226b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="屏幕快照 2019-05-25 下午6.39.27.png"></p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Container(</span><br><span class="line">  constraints: BoxConstraints.expand(</span><br><span class="line">    height: Theme.of(context).textTheme.display1.fontSize * <span class="number">1.1</span> + <span class="number">200.0</span>,</span><br><span class="line">  ),</span><br><span class="line">  padding: <span class="keyword">const</span> EdgeInsets.all(<span class="number">8.0</span>),</span><br><span class="line">  color: Colors.blue[<span class="number">600</span>],</span><br><span class="line">  alignment: Alignment.center,</span><br><span class="line">  child: Text(<span class="string">'Hello World'</span>,</span><br><span class="line">    style: Theme.of(context)</span><br><span class="line">        .textTheme</span><br><span class="line">        .display1</span><br><span class="line">        .copyWith(color: Colors.white)),</span><br><span class="line">  transform: Matrix4.rotationZ(<span class="number">0.1</span>),</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p><strong>也可以看看：</strong></p><p><em>AnimatedContainer，一种在变化时平滑动画属性的变体。<br>边框，其中包含大量使用Container的示例。<br>墨水，在材质上绘制装饰，允许InkResponse和InkWell喷溅在它们上面绘画。<br>布局小部件的目录。</em></p><h4 id="构造方法（Constructors）"><a href="#构造方法（Constructors）" class="headerlink" title="构造方法（Constructors）"></a>构造方法（Constructors）</h4><blockquote><p>创建一个小部件, 结合了普通的绘画、定位和大小调整小部件。</p></blockquote><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Container(&#123;Key key, </span><br><span class="line">    AlignmentGeometry alignment,</span><br><span class="line">    EdgeInsetsGeometry padding, </span><br><span class="line">    Color color, </span><br><span class="line">    Decoration decoration, </span><br><span class="line">    Decoration foregroundDecoration, </span><br><span class="line">    <span class="built_in">double</span> width, </span><br><span class="line">    <span class="built_in">double</span> height, </span><br><span class="line">    BoxConstraints constraints, EdgeInsetsGeometry margin, </span><br><span class="line">    Matrix4 transform, </span><br><span class="line">    Widget child </span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="属性（Properties）"><a href="#属性（Properties）" class="headerlink" title="属性（Properties）"></a>属性（Properties）</h4><ul><li><p>alignment → AlignmentGeometry</p></li><li><p><em>对齐内部的子级</em></p></li><li><p>child → Widget</p></li><li><p><em>容器内部的子级</em></p></li><li><p>constraints → BoxConstraints </p></li><li><p><em>要应用于子级的附加约束</em></p></li><li><p>decoration → Decoration</p><ul><li><em>子级背后的装饰</em></li><li><em>可以设置边框、背景色、背景图片、圆角等属性</em></li><li><em>需要注意的是 <code>deoration</code>和 <code>color</code> 背景颜色不能共存，二者同时只能有一个</em><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">decoration: <span class="keyword">new</span> BoxDecoration(</span><br><span class="line">               border: <span class="keyword">new</span> Border.all(width: <span class="number">2.0</span>, color: Colors.red),</span><br><span class="line">               color: Colors.grey,</span><br><span class="line">               borderRadius: <span class="keyword">new</span> BorderRadius.all(<span class="keyword">new</span> Radius.circular(<span class="number">20.0</span>)),</span><br><span class="line">               image: <span class="keyword">new</span> DecorationImage(</span><br><span class="line">                 image: <span class="keyword">new</span> NetworkImage(<span class="string">'http://b-ssl.duitang.com/uploads/item/201609/26/20160926203611_HXQxk.jpeg'</span>),</span><br><span class="line">                 centerSlice: <span class="keyword">new</span> Rect.fromLTRB(<span class="number">270.0</span>, <span class="number">180.0</span>, <span class="number">1360.0</span>, <span class="number">730.0</span>),</span><br><span class="line">               ),</span><br><span class="line">             ),</span><br></pre></td></tr></table></figure></li><li><img src alt="nodecoration">)<img src alt="nodecoration"></li><li><em>第一张图设置了背景色，未使用decoration；第二张图设置了decoration，未设置背景色</em></li></ul></li><li><p>foregroundDecoration → Decoration</p><ul><li><em>在子级前面的装饰</em></li><li><em>可以设置边框、背景色、背景图片、圆角等属性</em></li><li><em><code>foregroundDecoration</code>和 <code>color</code> 背景颜色可以共存，但是<code>color</code>有可能被遮挡</em></li><li><em>会遮挡child</em></li><li><img src alt="nodecoration"></li></ul></li><li><p>margin → EdgeInsetsGeometry</p></li><li><p><em>我的理解就是外边距</em></p></li><li><p>padding → EdgeInsetsGeometry</p></li><li><p><em>我的理解就是内边距</em></p></li><li><p>transform → Matrix4</p><ul><li><em>在绘制容器之前要应用的转换矩阵</em></li></ul></li><li><p>hashCode → int</p></li><li><p><em>此对象的哈希代码</em></p></li><li><p>key → Key</p><ul><li><em>控制一个小部件如何替换树中的另一个小部件</em></li></ul></li><li><p>runtimeType → Type</p><ul><li><em>对象的运行时类型</em></li></ul></li></ul><h4 id="方法（Methods）"><a href="#方法（Methods）" class="headerlink" title="方法（Methods）"></a>方法（Methods）</h4><ul><li><p>build(BuildContext context) → Widget</p><blockquote><p>描述此窗口小部件表示的用户界面部分</p></blockquote></li><li><p>debugFillProperties(DiagnosticPropertiesBuilder properties) → void</p><blockquote><p>添加与节点关联的其他属性</p></blockquote></li><li><p>createElement() → StatelessElement</p><blockquote><p>创建StatelessElement以管理此窗口小部件在树中的位置</p></blockquote></li><li><p>debugDescribeChildren() → List<DiagnosticsNode></DiagnosticsNode></p><blockquote><p>返回描述此节点的子节点的DiagnosticsNode对象列表。</p></blockquote></li><li><p>noSuchMethod(Invocation invocation) → dynamic</p><blockquote><p>访问不存在的方法或属性时调用</p></blockquote></li><li><p>toDiagnosticsNode({String name, DiagnosticsTreeStyle style }) → DiagnosticsNode</p><blockquote><p>返回调试工具和DiagnosticsNode.toStringDeep使用的对象的调试表示形式</p></blockquote></li><li><p>toString({DiagnosticLevel minLevel: DiagnosticLevel.debug }) → String</p><blockquote><p>返回此对象的字符串表示形式</p></blockquote></li><li><p>toStringDeep({String prefixLineOne: ‘’, String prefixOtherLines, DiagnosticLevel minLevel: DiagnosticLevel.debug }) → String</p><blockquote><p>返回此节点及其后代的字符串表示形式</p></blockquote></li><li><p>toStringShallow({String joiner: ‘, ‘, DiagnosticLevel minLevel: DiagnosticLevel.debug }) → String</p><blockquote><p>返回对象的单行详细描述</p></blockquote></li><li><p>toStringShort() → String</p><blockquote><p>这个小部件的简短文字描述</p></blockquote></li></ul>]]></content>
      
      
      <categories>
          
          <category> Flutter </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Flutter Container </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flutter开发之BottomNavigationBar底部导航栏</title>
      <link href="/2019/08/14/Flutter%E5%BC%80%E5%8F%91%E4%B9%8BBottomNavigationBar%E5%BA%95%E9%83%A8%E5%AF%BC%E8%88%AA%E6%A0%8F/"/>
      <url>/2019/08/14/Flutter%E5%BC%80%E5%8F%91%E4%B9%8BBottomNavigationBar%E5%BA%95%E9%83%A8%E5%AF%BC%E8%88%AA%E6%A0%8F/</url>
      
        <content type="html"><![CDATA[<h3 id="BottomNavigationBar"><a href="#BottomNavigationBar" class="headerlink" title="BottomNavigationBar"></a>BottomNavigationBar</h3><blockquote><p>显示在应用程序的底部，用于在少量视图中进行选择，通常在三到五之间。</p></blockquote><p>底部导航栏通常与<code>Scaffold</code>结合使用，它作为<code>Scaffold.bottomNavigationBar</code>参数提供。</p><p>底部导航栏的类型更改其项目的显示方式。如果未指定，则当少于四个项时它会自动设置为<code>BottomNavigationBarType.fixed</code>，否则为<code>BottomNavigationBarType.shifting</code>。</p><p><code>BottomNavigationBarType.fixed</code>，当少于四个项目时的默认值。如果选中的项目为非null，则使用<code>selectedItemColor</code>渲染所选项目，否则使用主题的<code>ThemeData.primaryColor</code>。如果<code>backgroundColor</code>为<code>null</code>，则导航栏的背景颜色默认为<code>Material</code>背景颜色<code>ThemeData.canvasColor</code>（基本上是不透明的白色）。</p><p><code>BottomNavigationBarType.shifting</code>，当有四个或更多项时的默认值。如果<code>selectedItemColor</code>为<code>null</code>，则所有项目都以白色呈现。导航栏的背景颜色与所选项目的<code>BottomNavigationBarItem.backgroundColor</code>相同。在这种情况下，假设每个项目将具有不同的背景颜色，并且背景颜色将与白色形成鲜明对比。</p><p><strong>此示例显示BottomNavigationBar，因为它在Scaffold小部件中使用。 BottomNavigationBar有三个BottomNavigationBarItem小部件，currentIndex设置为索引0.所选项目为琥珀色。 _onItemTapped函数更改所选项的索引，并在Scaffold的中心显示相应的消息:</strong></p><p><img src="https://flutter.github.io/assets-for-api-docs/assets/material/bottom_navigation_bar.png" alt="IMG"> </p><p><strong>源码：</strong></p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">int</span> _selectedIndex = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">const</span> TextStyle optionStyle = TextStyle(fontSize: <span class="number">30</span>, fontWeight: FontWeight.bold);</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">const</span> <span class="built_in">List</span>&lt;Widget&gt; _widgetOptions = &lt;Widget&gt;[</span><br><span class="line">  Text(</span><br><span class="line">    <span class="string">'Index 0: Home'</span>,</span><br><span class="line">    style: optionStyle,</span><br><span class="line">  ),</span><br><span class="line">  Text(</span><br><span class="line">     <span class="string">'Index 1: Business'</span>,</span><br><span class="line">     style: optionStyle,</span><br><span class="line">  ),</span><br><span class="line">  Text(</span><br><span class="line">     <span class="string">'Index 2: School'</span>,</span><br><span class="line">     style: optionStyle,</span><br><span class="line">  ),</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> _onItemTapped(<span class="built_in">int</span> index) &#123;</span><br><span class="line">  setState(() &#123;</span><br><span class="line">    _selectedIndex = index;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@override</span></span><br><span class="line">Widget build(BuildContext context) &#123;</span><br><span class="line">  <span class="keyword">return</span> Scaffold(</span><br><span class="line">    appBar: AppBar(</span><br><span class="line">      title: <span class="keyword">const</span> Text(<span class="string">'BottomNavigationBar Sample'</span>),</span><br><span class="line">    ),</span><br><span class="line">    body: Center(</span><br><span class="line">      child: _widgetOptions.elementAt(_selectedIndex),</span><br><span class="line">    ),</span><br><span class="line">    bottomNavigationBar: BottomNavigationBar(</span><br><span class="line">      items: <span class="keyword">const</span> &lt;BottomNavigationBarItem&gt;[</span><br><span class="line">        BottomNavigationBarItem(</span><br><span class="line">          icon: Icon(Icons.home),</span><br><span class="line">          title: Text(<span class="string">'Home'</span>),</span><br><span class="line">        ),</span><br><span class="line">        BottomNavigationBarItem(</span><br><span class="line">          icon: Icon(Icons.business),</span><br><span class="line">          title: Text(<span class="string">'Business'</span>),</span><br><span class="line">        ),</span><br><span class="line">        BottomNavigationBarItem(</span><br><span class="line">          icon: Icon(Icons.school),</span><br><span class="line">          title: Text(<span class="string">'School'</span>),</span><br><span class="line">        ),</span><br><span class="line">      ],</span><br><span class="line">      currentIndex: _selectedIndex,</span><br><span class="line">      selectedItemColor: Colors.amber[<span class="number">800</span>],</span><br><span class="line">      onTap: _onItemTapped,</span><br><span class="line">    ),</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="构造方法（Constructors）"><a href="#构造方法（Constructors）" class="headerlink" title="构造方法（Constructors）"></a>构造方法（Constructors）</h4><blockquote><p>创建一个底部导航栏，通常用作Scaffold的Scaffold.bottomNavigationBar参数。</p></blockquote><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">BottomNavigationBar(&#123;</span><br><span class="line">    Key key, </span><br><span class="line">    <span class="meta">@required</span> <span class="built_in">List</span>&lt;BottomNavigationBarItem&gt; items, </span><br><span class="line">    ValueChanged&lt;<span class="built_in">int</span>&gt; onTap, </span><br><span class="line">    <span class="built_in">int</span> currentIndex: <span class="number">0</span>, </span><br><span class="line">    <span class="built_in">double</span> elevation: <span class="number">8.0</span>, </span><br><span class="line">    BottomNavigationBarType type, </span><br><span class="line">    Color fixedColor, </span><br><span class="line">    Color backgroundColor, </span><br><span class="line">    <span class="built_in">double</span> iconSize: <span class="number">24.0</span>, </span><br><span class="line">    Color selectedItemColor, </span><br><span class="line">    Color unselectedItemColor, </span><br><span class="line">    <span class="built_in">double</span> selectedFontSize: <span class="number">14.0</span>, </span><br><span class="line">    <span class="built_in">double</span> unselectedFontSize: <span class="number">12.0</span>, </span><br><span class="line">    <span class="built_in">bool</span> showSelectedLabels: <span class="keyword">true</span>, </span><br><span class="line">    <span class="built_in">bool</span> showUnselectedLabels </span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="属性（Properties）"><a href="#属性（Properties）" class="headerlink" title="属性（Properties）"></a>属性（Properties）</h4><ul><li><code>backgroundColor → Color</code></li></ul><blockquote><p>背景颜色</p></blockquote><ul><li><code>currentIndex → int</code></li></ul><blockquote><p>当前活动<code>BottomNavigationBarItem</code>的项目索引(一般就是当前选中的那个项目索引)</p></blockquote><ul><li><code>elevation → double</code></li></ul><blockquote><p>此底部导航栏的Z坐标</p></blockquote><ul><li><code>fixedColor → Color</code></li></ul><blockquote><p>选中项目颜色的值（只读）</p></blockquote><ul><li><code>iconSize → double</code></li></ul><blockquote><p>所有<code>BottomNavigationBarItem</code>图标的大小</p></blockquote><ul><li><code>items → List&lt;BottomNavigationBarItem&gt;</code></li></ul><blockquote><p>定义在底部导航栏中排列的按钮项的外观</p></blockquote><ul><li><code>onTap → ValueChanged&lt;int&gt;</code></li></ul><blockquote><p>点击其中一个项目时响应事件</p></blockquote><ul><li><code>selectedFontSize → double</code></li></ul><blockquote><p>选中时<code>BottomNavigationBarItem</code>标签的字体大小</p></blockquote><ul><li><code>selectedItemColor → Color</code></li></ul><blockquote><p>选中时<code>BottomNavigationBarItem.icon</code>和<code>BottomNavigationBarItem.label</code>的颜色</p></blockquote><ul><li><code>showSelectedLabels → bool</code></li></ul><blockquote><p>是否为未选择的<code>BottomNavigationBarItems</code>显示标签</p></blockquote><ul><li><code>showUnselectedLabels → bool</code></li></ul><blockquote><p>是否为选定的<code>BottomNavigationBarItem</code>显示标签</p></blockquote><ul><li><code>type → BottomNavigationBarType</code></li></ul><blockquote><p>定义<code>BottomNavigationBar</code>的布局和行为</p></blockquote><ul><li><code>unselectedFontSize → double</code></li></ul><blockquote><p>未选中<code>BottomNavigationBarItem</code>标签的字体大小</p></blockquote><ul><li><code>unselectedItemColor → Color</code></li></ul><blockquote><p>未选中的<code>BottomNavigationBarItem.icon</code>和<code>BottomNavigationBarItem.labels</code>的颜色</p></blockquote><ul><li><code>hashCode → int</code></li></ul><blockquote><p>对象的哈希值（只读）</p></blockquote><ul><li><code>key → Key</code></li></ul><blockquote><p>控制一个小部件如何替换树中的另一个小部件</p></blockquote><ul><li><p><code>runtimeType → Type</code></p><blockquote><p>表示对象的运行时类型(只读)</p></blockquote></li></ul>]]></content>
      
      
      <categories>
          
          <category> Flutter </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Flutter BottomNavigationBar </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flutter开发之AppBar Widget</title>
      <link href="/2019/08/13/Flutter%E5%BC%80%E5%8F%91%E4%B9%8BAppBar%20Widget/"/>
      <url>/2019/08/13/Flutter%E5%BC%80%E5%8F%91%E4%B9%8BAppBar%20Widget/</url>
      
        <content type="html"><![CDATA[<h3 id="AppBar"><a href="#AppBar" class="headerlink" title="AppBar"></a>AppBar</h3><p>应用栏通常用于Scaffold.appBar属性，该属性将应用栏放置在屏幕顶部的固定高度小部件中。对于可滚动的应用栏，请参阅<a href="https://api.flutter.dev/flutter/material/SliverAppBar-class.html" target="_blank" rel="noopener">SliverAppBar</a>，它将一个AppBar嵌入到一个条子中，以便在CustomScrollView中使用。</p><p>AppBar在底部（如果有）上方显示工具栏小部件，前导，标题和操作。底部通常用于TabBar。如果指定了flexibleSpace窗口小部件，则它将堆叠在工具栏和底部窗口小部件后面。下图显示了当编写语言从左到右（例如英语）时，每个插槽在工具栏中的显示位置：<br><img src="https://flutter.github.io/assets-for-api-docs/assets/material/app_bar.png" alt="image"></p><p>如果省略了前导小部件，但AppBar位于带有抽屉的脚手架中，则会插入一个按钮以打开抽屉。否则，如果最近的导航器具有任何先前的路径，则会插入BackButton。可以通过将automatedImplyLeading设置为false来关闭此行为。在这种情况下，空的前导小部件将导致中间/标题小部件拉伸开始。</p><h4 id="构造方法（Constructors）"><a href="#构造方法（Constructors）" class="headerlink" title="构造方法（Constructors）"></a>构造方法（Constructors）</h4><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">AppBar(&#123;</span><br><span class="line">    Key key, </span><br><span class="line">    Widget leading, </span><br><span class="line">    <span class="built_in">bool</span> automaticallyImplyLeading: <span class="keyword">true</span>, </span><br><span class="line">    Widget title, </span><br><span class="line">    <span class="built_in">List</span>&lt;Widget&gt; actions, </span><br><span class="line">    Widget flexibleSpace, </span><br><span class="line">    PreferredSizeWidget bottom, </span><br><span class="line">    <span class="built_in">double</span> elevation, </span><br><span class="line">    ShapeBorder shape, </span><br><span class="line">    Color backgroundColor, </span><br><span class="line">    Brightness brightness, </span><br><span class="line">    IconThemeData iconTheme, </span><br><span class="line">    IconThemeData actionsIconTheme, </span><br><span class="line">    TextTheme textTheme, </span><br><span class="line">    <span class="built_in">bool</span> primary: <span class="keyword">true</span>, </span><br><span class="line">    <span class="built_in">bool</span> centerTitle, <span class="built_in">double</span> titleSpacing: NavigationToolbar.kMiddleSpacing, </span><br><span class="line">    <span class="built_in">double</span> toolbarOpacity: <span class="number">1.0</span>, </span><br><span class="line">    <span class="built_in">double</span> bottomOpacity: <span class="number">1.0</span> </span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>eg:</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">AppBar(</span><br><span class="line">  title: Text(<span class="string">'My Fancy Dress'</span>),</span><br><span class="line">  actions: &lt;Widget&gt;[</span><br><span class="line">    IconButton(</span><br><span class="line">      icon: Icon(Icons.playlist_play),</span><br><span class="line">      tooltip: <span class="string">'Air it'</span>,</span><br><span class="line">      onPressed: _airDress,</span><br><span class="line">    ),</span><br><span class="line">    IconButton(</span><br><span class="line">      icon: Icon(Icons.playlist_add),</span><br><span class="line">      tooltip: <span class="string">'Restitch it'</span>,</span><br><span class="line">      onPressed: _restitchDress,</span><br><span class="line">    ),</span><br><span class="line">    IconButton(</span><br><span class="line">      icon: Icon(Icons.playlist_add_check),</span><br><span class="line">      tooltip: <span class="string">'Repair it'</span>,</span><br><span class="line">      onPressed: _repairDress,</span><br><span class="line">    ),</span><br><span class="line">  ],</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h4 id="属性（Properties）"><a href="#属性（Properties）" class="headerlink" title="属性（Properties）"></a>属性（Properties）</h4><ul><li>actions → List<Widget></Widget></li></ul><blockquote><p>要在标题小部件后显示的小部件</p></blockquote><ul><li>actionsIconTheme → IconThemeData</li></ul><blockquote><p>用于应用栏操作中显示的图标的颜色，不透明度和大小。仅当操作的主题不同于应用栏的主要小部件中显示的图标时，才应使用此选项</p></blockquote><ul><li>automaticallyImplyLeading → bool</li></ul><blockquote><p>Controls whether we should try to imply the leading widget if null. […]</p></blockquote><ul><li>backgroundColor → Color</li></ul><blockquote><p>用于应用栏材质的颜色。通常这应该与亮度，iconTheme，textTheme一起设置。</p></blockquote><ul><li>bottom → PreferredSizeWidget</li></ul><blockquote><p>此小组件显示在应用栏的底部</p></blockquote><ul><li>bottomOpacity → double</li></ul><blockquote><p>应用栏底部的不透明程度(0.0 - 1.0)</p></blockquote><ul><li>brightness → Brightness</li></ul><blockquote><p>应用栏材质的亮度。通常，这与backgroundColor，iconTheme，textTheme一起设置</p></blockquote><ul><li>centerTitle → bool</li></ul><blockquote><p>标题是否居中</p></blockquote><ul><li>elevation → double</li></ul><blockquote><p>放置此应用程序栏相对于其父应用程序栏的Z坐标</p></blockquote><ul><li>flexibleSpace → Widget</li></ul><blockquote><p>此小组件堆叠在工具栏和选项卡栏后面。它的高度与应用栏的整体高度相同</p></blockquote><ul><li>iconTheme → IconThemeData</li></ul><blockquote><p>用于应用栏图标的颜色，不透明度和大小。通常，这与backgroundColor，brightness，textTheme一起设置</p></blockquote><ul><li>leading → Widget</li></ul><blockquote><p>要在标题之前显示的小部件</p></blockquote><ul><li>preferredSize → Size</li></ul><blockquote><p>高度为kToolbarHeight和底部窗口小部件首选高度之和的大小</p></blockquote><ul><li>primary → bool</li></ul><blockquote><p>此应用栏是否显示在屏幕顶部</p></blockquote><ul><li>shape → ShapeBorder</li></ul><blockquote><p>形状和阴影</p></blockquote><ul><li>textTheme → TextTheme</li></ul><blockquote><p>应用栏中用于文本的排版样式。通常，这与亮度backgroundColor，iconTheme一起设置</p></blockquote><ul><li>title → Widget</li></ul><blockquote><p>appbar中显示的主要小部件</p></blockquote><ul><li>titleSpacing → double</li></ul><blockquote><p>横轴上标题内容周围的间距。即使没有前导内容或操作，也会应用此间距。如果希望title占用所有可用空间，请将此值设置为0.0</p></blockquote><ul><li><p>toolbarOpacity → double</p><blockquote><p>应用栏的工具栏部分透明度(0.0-1.0)</p></blockquote></li></ul>]]></content>
      
      
      <categories>
          
          <category> Flutter </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Flutter AppBar </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flutter开发之基础 Widgets</title>
      <link href="/2019/08/12/Flutter%E5%BC%80%E5%8F%91%E4%B9%8B%E5%9F%BA%E7%A1%80%20Widgets/"/>
      <url>/2019/08/12/Flutter%E5%BC%80%E5%8F%91%E4%B9%8B%E5%9F%BA%E7%A1%80%20Widgets/</url>
      
        <content type="html"><![CDATA[<h3 id="基础-Widgets"><a href="#基础-Widgets" class="headerlink" title="基础 Widgets"></a>基础 Widgets</h3><ol><li><p><a href="https://docs.flutter.io/flutter/widgets/Container-class.html" target="_blank" rel="noopener">Container</a></p><blockquote><p>一个拥有绘制、定位、调整大小的 widget。</p></blockquote></li><li><p><a href="https://docs.flutter.io/flutter/widgets/Row-class.html" target="_blank" rel="noopener">Row</a></p><blockquote><p>在水平方向上排列子widget的列表。</p></blockquote></li><li><p><a href="https://docs.flutter.io/flutter/widgets/Column-class.html" target="_blank" rel="noopener">Column</a></p><blockquote><p>在垂直方向上排列子widget的列表。</p></blockquote></li><li><p><a href="https://docs.flutter.io/flutter/widgets/Image-class.html" target="_blank" rel="noopener">Image</a></p><blockquote><p>一个显示图片的widget。</p></blockquote></li><li><p><a href="https://docs.flutter.io/flutter/widgets/Text-class.html" target="_blank" rel="noopener">Text</a></p><blockquote><p>单一格式的文本。</p></blockquote></li><li><p><a href="https://docs.flutter.io/flutter/widgets/Icon-class.html" target="_blank" rel="noopener">Icon</a></p><blockquote><p>图标。</p></blockquote></li><li><p><a href="https://docs.flutter.io/flutter/material/RaisedButton-class.html" target="_blank" rel="noopener">RaisedButton</a></p><blockquote><p>Material Design中的button，一个凸起的材质矩形按钮</p></blockquote></li><li><p><a href="https://docs.flutter.io/flutter/material/Scaffold-class.html" target="_blank" rel="noopener">Scaffold</a></p><blockquote><p>Material Design布局结构的基本实现。此类提供了用于显示drawer、snackbar和底部sheet的API。</p></blockquote></li><li><p><a href="https://docs.flutter.io/flutter/material/AppBar-class.html" target="_blank" rel="noopener">AppBar</a></p><blockquote><p>一个Material Design应用程序栏，由工具栏和其他可能的widget（如TabBar和FlexibleSpaceBar）组成。</p></blockquote></li><li><p><a href="https://docs.flutter.io/flutter/material/FlutterLogo-class.html" target="_blank" rel="noopener">FlutterLogo</a></p><blockquote><p>Flutter logo,以widget形式,这个widget遵从IconTheme。</p></blockquote></li><li><p><a href="https://docs.flutter.io/flutter/widgets/Placeholder-class.html" target="_blank" rel="noopener">Placeholder</a></p><blockquote><p>一个绘制了一个盒子的的widget，代表日后有widget将会被添加到该盒子中</p></blockquote></li></ol>]]></content>
      
      
      <categories>
          
          <category> Flutter </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Flutter Widgets </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flutter-go运行报错（FIRAnalyticsConfiguration）</title>
      <link href="/2019/07/19/Flutter-go%E8%BF%90%E8%A1%8C%E6%8A%A5%E9%94%99%EF%BC%88FIRAnalyticsConfiguration%EF%BC%89/"/>
      <url>/2019/07/19/Flutter-go%E8%BF%90%E8%A1%8C%E6%8A%A5%E9%94%99%EF%BC%88FIRAnalyticsConfiguration%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h3 id="flutter-go-项目下载后，运行报如下错误："><a href="#flutter-go-项目下载后，运行报如下错误：" class="headerlink" title="flutter go 项目下载后，运行报如下错误："></a>flutter go 项目下载后，运行报如下错误：</h3><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">Launching lib/main.dart <span class="keyword">on</span> iPhone Xʀ <span class="keyword">in</span> debug mode...</span><br><span class="line">Running Xcode build...                                                  </span><br><span class="line">                                                   </span><br><span class="line">Xcode build done.                                            <span class="number">3.3</span>s</span><br><span class="line">Failed to build iOS app</span><br><span class="line">Error output from Xcode build:</span><br><span class="line">↳</span><br><span class="line">    ** BUILD FAILED **</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Xcode<span class="string">'s output:</span></span><br><span class="line"><span class="string">↳</span></span><br><span class="line"><span class="string">    === BUILD TARGET firebase_analytics OF PROJECT Pods WITH CONFIGURATION Debug ===</span></span><br><span class="line"><span class="string">    /Users/l/Documents/flutter/.pub-cache/hosted/pub.dartlang.org/firebase_analytics-2.1.1+2/ios/Classes/FirebaseAnalyticsPlu</span></span><br><span class="line"><span class="string">    gin.m:60:7: error: use of undeclared identifier '</span>FIRAnalyticsConfiguration<span class="string">'</span></span><br><span class="line"><span class="string">        [[FIRAnalyticsConfiguration sharedInstance] setAnalyticsCollectionEnabled:[enabled boolValue]];</span></span><br><span class="line"><span class="string">          ^</span></span><br><span class="line"><span class="string">    1 error generated.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Could not build the application for the simulator.</span></span><br><span class="line"><span class="string">Error launching application on iPhone Xʀ.</span></span><br></pre></td></tr></table></figure><p><strong>解决方案：</strong></p><hr><p>将根目录下<code>pubspec.yaml</code>文件中 <code>firebase_analytics: ^2.0.2+1</code> 改为 <code>firebase_analytics: ^3.0.1</code> 之后运行flutter run</p><hr><p><em>执行通过</em></p>]]></content>
      
      
      <categories>
          
          <category> Flutter </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Flutter的坑 </tag>
            
            <tag> Flutter-go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flutter Flutter.h file not found</title>
      <link href="/2019/07/05/Flutter%20Flutter.h%20file%20not%20found/"/>
      <url>/2019/07/05/Flutter%20Flutter.h%20file%20not%20found/</url>
      
        <content type="html"><![CDATA[<h4 id="1-‘Flutter-Flutter-h’-file-not-found"><a href="#1-‘Flutter-Flutter-h’-file-not-found" class="headerlink" title="1. ‘Flutter/Flutter.h’ file not found"></a>1. ‘Flutter/Flutter.h’ file not found</h4><h5 id="解决方案1"><a href="#解决方案1" class="headerlink" title="解决方案1."></a>解决方案1.</h5><p>点击这里<a href="https://github.com/flutter/flutter/tree/master/packages/flutter_tools/templates/cocoapods" target="_blank" rel="noopener">前往下载</a>对应版本文件,替换原来的文件<code>ios/Podfile</code>内容，删除<code>ios/Podfile.lock</code>,重新 <code>pod install</code> 即可</p><h5 id="解决方案2"><a href="#解决方案2" class="headerlink" title="解决方案2."></a>解决方案2.</h5><p>执行代码：<code>flutter run -v</code> 和 <code>flutter doctor -v</code> 检测配置是否成功</p><p>可能会出现以下情况：</p><p>Mac os 10.15 无法打开“idevice_id”,因为无法验证开发者</p><p>Mac os 10.15 无法打开“ideviceinfo”,因为无法验证开发者</p><p>解决方法 打开终端（Terminal），输入以下命令后回车，如需要，请输入密码</p><p><code>sudo xattr -r -d com.apple.quarantine &lt;path&gt;</code></p><blockquote><p>注：<path></path>为应用程序路径，直接从文件夹目录拖拽即可自动填写<path></path></p></blockquote><h5 id="解决方案3"><a href="#解决方案3" class="headerlink" title="解决方案3."></a>解决方案3.</h5><p> 找到 <code>iOS/Flutter</code> 文件夹，再找到以前备份的无报错代码替换掉文件夹内容，应该就不会报错了。</p><p> 再执行下 <code>flutter build ios --release</code><br> 编译过程中会重新生成新的  <code>iOS/Flutter</code> 文件夹下内容，覆盖我们替换的文件。</p><h5 id="以上解决方案有可能需要结合使用。"><a href="#以上解决方案有可能需要结合使用。" class="headerlink" title="以上解决方案有可能需要结合使用。"></a>以上解决方案有可能需要结合使用。</h5>]]></content>
      
      
      <categories>
          
          <category> Flutter </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Flutter的坑 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flutter 编译成Swift</title>
      <link href="/2019/06/29/Flutter%20%E7%BC%96%E8%AF%91%E6%88%90Swift/"/>
      <url>/2019/06/29/Flutter%20%E7%BC%96%E8%AF%91%E6%88%90Swift/</url>
      
        <content type="html"><![CDATA[<h3 id="flutter-create-i-swift-a-kotlin-swiftflutter"><a href="#flutter-create-i-swift-a-kotlin-swiftflutter" class="headerlink" title="flutter create -i swift -a kotlin swiftflutter"></a><code>flutter create -i swift -a kotlin swiftflutter</code></h3><h3 id="flutter-create-org-com-yourcompany-i-swift-a-kotlin-description-39-Your-App-Description-39-your-app-name"><a href="#flutter-create-org-com-yourcompany-i-swift-a-kotlin-description-39-Your-App-Description-39-your-app-name" class="headerlink" title="flutter create --org com.yourcompany -i swift -a kotlin --description &#39;Your App Description&#39; your_app_name"></a><code>flutter create --org com.yourcompany -i swift -a kotlin --description &#39;Your App Description&#39; your_app_name</code></h3><p>flutter  run -d 06157df6f3881f3e  –flavor tencent</p>]]></content>
      
      
      <categories>
          
          <category> Flutter </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Flutter命令 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flutter  VSCode命令收集</title>
      <link href="/2019/06/27/Flutter%20%20VSCode%E5%91%BD%E4%BB%A4%E6%94%B6%E9%9B%86/"/>
      <url>/2019/06/27/Flutter%20%20VSCode%E5%91%BD%E4%BB%A4%E6%94%B6%E9%9B%86/</url>
      
        <content type="html"><![CDATA[<ul><li><p><code>open -a Simulator</code></p><blockquote><p>打开模拟器</p></blockquote></li><li><p><code>flutter run</code></p><blockquote><p>编译执行flutter程序</p></blockquote></li><li><p><code>flutter packages get</code></p><blockquote><p>获取相同版本的软件包</p></blockquote></li><li><p><code>flutter packages upgrade</code></p><blockquote><p>如果要升级到软件包的新版本，例如使用该软件包中的新功能</p></blockquote></li></ul>]]></content>
      
      
      <categories>
          
          <category> Flutter </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Flutter </tag>
            
            <tag> VSCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>androidx</title>
      <link href="/2019/06/25/androidx/"/>
      <url>/2019/06/25/androidx/</url>
      
        <content type="html"><![CDATA[<h4 id="1-ViewModelProviders"><a href="#1-ViewModelProviders" class="headerlink" title="1. ViewModelProviders"></a>1. ViewModelProviders</h4><p>在<code>build.gradle</code> 的 <code>dependencies</code> 中加入</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">implementation <span class="string">'androidx.lifecycle:lifecycle-extensions:2.0.0'</span></span><br></pre></td></tr></table></figure><p>在使用的地方导入：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> androidx.lifecycle.ViewModelProviders;</span><br></pre></td></tr></table></figure><p>即可使用：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">myViewModel = ViewModelProviders.of(<span class="keyword">this</span>).get(MyViewModel<span class="class">.<span class="keyword">class</span>)</span>;</span><br></pre></td></tr></table></figure><blockquote><p>该方法 2.1.0 已弃用 ViewModelProviders.of() ,改为</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//导入 import androidx.lifecycle.ViewModelProvider;</span></span><br><span class="line">myViewModel = ViewModelProvider(<span class="keyword">this</span>).get(MyViewModel<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//或者</span></span><br><span class="line">myViewModel = ViewModelProvider(getActivity()).get(MyViewModel<span class="class">.<span class="keyword">class</span>)</span>;</span><br></pre></td></tr></table></figure><h4 id="2-DataBinding"><a href="#2-DataBinding" class="headerlink" title="2. DataBinding"></a>2. DataBinding</h4><p>在 <code>build.gradle</code> 的  defaultConfig中加入 </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">dataBinding&#123;</span><br><span class="line">    enabled <span class="keyword">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>Sync Now</code>一下，把下面代码套在布局最外层，即可使用。</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;layout xmlns:android=<span class="string">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line">    xmlns:app=<span class="string">"http://schemas.android.com/apk/res-auto"</span></span><br><span class="line">    xmlns:tools=<span class="string">"http://schemas.android.com/tools"</span>&gt;</span><br><span class="line"></span><br><span class="line">    &lt;data&gt;</span><br><span class="line"></span><br><span class="line">    &lt;/data&gt;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="comment">//============</span></span><br><span class="line">    <span class="comment">//这里写自己的布局</span></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">&lt;/layout&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android Studio运行Flutter项目run不起来</title>
      <link href="/2019/06/19/Android%20Studio%E8%BF%90%E8%A1%8CFlutter%E9%A1%B9%E7%9B%AErun%E4%B8%8D%E8%B5%B7%E6%9D%A5/"/>
      <url>/2019/06/19/Android%20Studio%E8%BF%90%E8%A1%8CFlutter%E9%A1%B9%E7%9B%AErun%E4%B8%8D%E8%B5%B7%E6%9D%A5/</url>
      
        <content type="html"><![CDATA[<h4 id="解决方案："><a href="#解决方案：" class="headerlink" title="解决方案："></a>解决方案：</h4><ol><li>修改<code>Flutter SDK</code>中的<code>flutter.gradle</code>文件,通过 <code>flutter&gt;packages&gt;flutter_tools&gt;gradle&gt;flutter.gradle</code>(注意这是Flutter SDK安装位置不是Android Studio的)路径找到<code>flutter.gradle</code>，打开<code>flutter.gradle</code>文件，修改配置：</li></ol><p>注释掉<code>google()</code>和<code>jcenter()</code>,加入阿里的配置项</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">maven &#123;url <span class="string">'https://maven.aliyun.com/repository/google'</span>&#125;</span><br><span class="line">maven &#123;url <span class="string">'https://maven.aliyun.com/repository/jcenter'</span>&#125;</span><br><span class="line">maven &#123;url <span class="string">'https://maven.aliyun.com/nexus/content/groups/public'</span>&#125;</span><br></pre></td></tr></table></figure><p> 修改后：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">buildscript &#123;</span><br><span class="line">    repositories &#123;</span><br><span class="line">        <span class="comment">//注释掉 google()和jcenter()</span></span><br><span class="line">        <span class="comment">// google()</span></span><br><span class="line">        <span class="comment">// jcenter()</span></span><br><span class="line">    maven &#123;url <span class="string">'https://maven.aliyun.com/repository/google'</span>&#125;</span><br><span class="line">    maven &#123;url <span class="string">'https://maven.aliyun.com/repository/jcenter'</span>&#125;</span><br><span class="line">    maven &#123;url <span class="string">'https://maven.aliyun.com/nexus/content/groups/public'</span>&#125;</span><br><span class="line">    &#125;</span><br><span class="line">    dependencies &#123;</span><br><span class="line">        classpath <span class="string">'com.android.tools.build:gradle:3.2.1'</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li><p>手动下载<code>gradle</code>进行配置</p><p>找到创建的flutter项目：</p><p>通过路径<code>flutterdemo001/android/gradle/wrapper/gradle-wrapper.properties</code>找到对应文件打开后：</p></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#Fri Jun 23 08:50:38 CEST 2017</span><br><span class="line">distributionBase=GRADLE_USER_HOME</span><br><span class="line">distributionPath=wrapper/dists</span><br><span class="line">zipStoreBase=GRADLE_USER_HOME</span><br><span class="line">zipStorePath=wrapper/dists</span><br><span class="line">distributionUrl=https\:<span class="comment">//services.gradle.org/distributions/gradle-4.10.2-all.zip</span></span><br></pre></td></tr></table></figure><p>​<br>  找到<code>distributionUrl</code>对应的地址<code>https://services.gradle.org/distributions/gradle-4.10.2-all.zip</code>就是gradle的下载地址,注意文件中https后面有个<code>\</code>,复制到浏览器记得要删掉</p><p>   点击下载 <a href="https://services.gradle.org/distributions/gradle-4.10.2-all.zip" target="_blank" rel="noopener">gradle-4.10.2-all.zip</a></p><p>   点击下载<a href="http://services.gradle.org/distributions/" target="_blank" rel="noopener">其他版本gradle</a></p><p>   下载完成后，进行解压。<br>   然后打开目录：<code>Macintosh HD 》 用户 》当前登录用户名称》.gradle》wrapper》dists</code>⁩,<br>   可能有些电脑未打开隐藏文件可见，是看不到<code>.gradle</code>文件夹的,它是一个隐藏文件夹。<br>   使用快捷键<code>shift+command+.</code>来切换隐藏文件可见还是隐藏。找到dists文件夹后，把解压后的<code>gradle</code>拷贝一份放到dists文件夹下即可。</p>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Flutter </tag>
            
            <tag> Android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Swift 简单链表实现</title>
      <link href="/2019/06/17/Swift%E7%AE%80%E5%8D%95%E9%93%BE%E8%A1%A8%E5%AE%9E%E7%8E%B0/"/>
      <url>/2019/06/17/Swift%E7%AE%80%E5%8D%95%E9%93%BE%E8%A1%A8%E5%AE%9E%E7%8E%B0/</url>
      
        <content type="html"><![CDATA[<h4 id="Swift-简单链表实现"><a href="#Swift-简单链表实现" class="headerlink" title="Swift 简单链表实现"></a>Swift 简单链表实现</h4><blockquote><p>链表中的元素在内存中不是顺序存储的，查找慢，插入、删除只需要对元素指针重新赋值，效率高；数组元素在内存上连续存放，可以通过下标查找元素；插入、删除需要移动大量元素，比较适用于元素很少变化的情况</p></blockquote><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> UIKit</span><br><span class="line"></span><br><span class="line"><span class="comment">//链表节点</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Node</span></span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">var</span> value: <span class="type">T</span> <span class="comment">//节点存储数据</span></span><br><span class="line">    <span class="keyword">weak</span> <span class="keyword">var</span> next: <span class="type">Node?</span> <span class="comment">//节点链接到的下一个节点</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">weak</span> <span class="keyword">var</span> previous: <span class="type">Node?</span><span class="comment">//节点链接到的上一个节点</span></span><br><span class="line">     </span><br><span class="line">    <span class="keyword">init</span>(value: <span class="type">T</span>) &#123;</span><br><span class="line">      <span class="keyword">self</span>.value = value</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//自定义链表</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">NodeList</span>:<span class="title">CustomStringConvertible</span></span>&#123;</span><br><span class="line">    <span class="comment">//链表起点节点</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> head:<span class="type">Node?</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">//链表终点节点</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> tail:<span class="type">Node?</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//链表内数据是否为空</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">var</span> isEmpty:<span class="type">Bool</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> head == <span class="literal">nil</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//返回第一个节点</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">var</span> first:<span class="type">Node?</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> head</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//返回最后一个节点</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">var</span> last:<span class="type">Node?</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> tail</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//添加一个链接节点数据</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">func</span> <span class="title">append</span><span class="params">(value:T)</span></span>&#123;</span><br><span class="line">        <span class="keyword">let</span> newNode = <span class="type">Node</span>(value: value)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> tailNode = tail&#123;</span><br><span class="line">            newNode.previous = tailNode</span><br><span class="line">            tailNode.next = newNode</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            head = newNode</span><br><span class="line">        &#125;</span><br><span class="line">        tail = newNode</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//删除节点</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">func</span> <span class="title">remove</span><span class="params">(node:Node)</span></span> -&gt; <span class="type">T</span>&#123;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//保存要删除节点的上一个和下一个节点</span></span><br><span class="line">        <span class="keyword">let</span> prev = node.previous</span><br><span class="line">        <span class="keyword">let</span> next = node.next</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//如果要删处节点的上一节点不为空</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> prev = prev &#123;</span><br><span class="line">            <span class="comment">//上一个节点链接到的下一个节点，修改为要删除的下一个节点</span></span><br><span class="line">            prev.next = next</span><br><span class="line">        &#125;</span><br><span class="line">            <span class="comment">//如果要删处节点的上一节点为空，说明要删除的是链表起点节点</span></span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">//把下一个节点改为起点节点</span></span><br><span class="line">            head = next</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//要删出的上一个节点，链接到上一个节点</span></span><br><span class="line">        next?.previous = prev</span><br><span class="line">        <span class="keyword">if</span> next == <span class="literal">nil</span> &#123;</span><br><span class="line">            <span class="comment">//next为nil说明要删除的是最后一个，把倒数以前倒数第二个，置为最后一个</span></span><br><span class="line">            tail = prev</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        node.previous = <span class="literal">nil</span></span><br><span class="line">        node.next = <span class="literal">nil</span></span><br><span class="line">        <span class="keyword">return</span> node.value</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//删除所有节点数据</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">func</span> <span class="title">removeAll</span><span class="params">()</span></span> &#123;</span><br><span class="line">      head = <span class="literal">nil</span></span><br><span class="line">      tail = <span class="literal">nil</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//取对应索引的节点</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">func</span> <span class="title">nodeAt</span><span class="params">(index: Int)</span></span> -&gt; <span class="type">Node?</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> index &gt;= <span class="number">0</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> node = head</span><br><span class="line">        <span class="keyword">var</span> i = index</span><br><span class="line">        <span class="keyword">while</span> node != <span class="literal">nil</span> &#123;</span><br><span class="line">          <span class="keyword">if</span> i == <span class="number">0</span> &#123; <span class="keyword">return</span> node &#125;</span><br><span class="line">          i -= <span class="number">1</span></span><br><span class="line">          node = node!.next</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//输出节点数据</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">var</span> description: <span class="type">String</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> text = <span class="string">""</span></span><br><span class="line">        <span class="keyword">var</span> node = head</span><br><span class="line">        <span class="keyword">while</span> node != <span class="literal">nil</span> &#123;</span><br><span class="line">            text += <span class="string">"\(node!.value)"</span></span><br><span class="line">            </span><br><span class="line">            node = node!.next</span><br><span class="line">            <span class="keyword">if</span> node != <span class="literal">nil</span> &#123;</span><br><span class="line">                text += <span class="string">","</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"["</span> + text + <span class="string">"]"</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Swift </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 链表 </tag>
            
            <tag> swift </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>touch取消textfield的第一响应</title>
      <link href="/2019/06/17/touch%E5%8F%96%E6%B6%88textfield%E7%9A%84%E7%AC%AC%E4%B8%80%E5%93%8D%E5%BA%94/"/>
      <url>/2019/06/17/touch%E5%8F%96%E6%B6%88textfield%E7%9A%84%E7%AC%AC%E4%B8%80%E5%93%8D%E5%BA%94/</url>
      
        <content type="html"><![CDATA[<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">override</span> <span class="function"><span class="keyword">func</span> <span class="title">touchesEnded</span><span class="params">(<span class="number">_</span> touches: Set&lt;UITouch&gt;, with event: UIEvent?)</span></span> &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> touch:<span class="type">AnyObject</span> <span class="keyword">in</span> touches &#123;</span><br><span class="line">        <span class="keyword">let</span> t:<span class="type">UITouch</span> = touch <span class="keyword">as</span>! <span class="type">UITouch</span></span><br><span class="line">        <span class="comment">//检测当前触摸的view是否是textField</span></span><br><span class="line">        <span class="keyword">if</span> t.view == pwdField || t.view == pwdField || t.view == phoneField&#123;</span><br><span class="line">            t.view?.becomeFirstResponder()</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            phoneField.resignFirstResponder()</span><br><span class="line">            pwdField.resignFirstResponder()</span><br><span class="line">            verificationField.resignFirstResponder()</span><br><span class="line">            <span class="keyword">self</span>.resignFirstResponder()</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Swift </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Responsder </tag>
            
            <tag> touch </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Swift Responsder</title>
      <link href="/2019/06/17/SwiftResponsder/"/>
      <url>/2019/06/17/SwiftResponsder/</url>
      
        <content type="html"><![CDATA[<h3 id="通过响应者链获取对应的第一个符合条件的Responsder"><a href="#通过响应者链获取对应的第一个符合条件的Responsder" class="headerlink" title="通过响应者链获取对应的第一个符合条件的Responsder"></a>通过响应者链获取对应的第一个符合条件的Responsder</h3><blockquote><p>传入响应检测的起点<code>Responsder</code>，一般用于UIView中查找响应者链中的控制器</p></blockquote><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">nextResponder</span><span class="params">(currentView:UIView)</span></span>-&gt;<span class="type">UIViewController</span>&#123;</span><br><span class="line"><span class="keyword">var</span> vc:<span class="type">UIResponder</span> = currentView</span><br><span class="line"><span class="keyword">while</span> vc.isKind(of: <span class="type">UIViewController</span>.<span class="keyword">self</span>) != <span class="literal">true</span> &#123;</span><br><span class="line">vc = vc.next!</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> vc <span class="keyword">as</span>! <span class="type">UIViewController</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Swift </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Responsder </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Swift中String转类名Class</title>
      <link href="/2019/06/17/Swift%E4%B8%ADString%E8%BD%AC%E7%B1%BB%E5%90%8DClass/"/>
      <url>/2019/06/17/Swift%E4%B8%ADString%E8%BD%AC%E7%B1%BB%E5%90%8DClass/</url>
      
        <content type="html"><![CDATA[<h3 id="String-gt-Class"><a href="#String-gt-Class" class="headerlink" title="String-&gt;Class"></a>String-&gt;Class</h3><blockquote><p>Swift中引入了命名空间的概念，转Class需要拼接命名空间</p></blockquote><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//这是一个简单的通过字符串类名，转Class然后初始化后跳转的一个小例子</span></span><br><span class="line"><span class="meta">@objc</span> <span class="function"><span class="keyword">func</span> <span class="title">OnClick</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//控制器字符串名称</span></span><br><span class="line">    <span class="keyword">let</span> vcNameString = <span class="string">"OneViewController"</span></span><br><span class="line">    <span class="comment">//获取命名空间也就是项目名称</span></span><br><span class="line">    <span class="keyword">let</span> clsName = <span class="type">Bundle</span>.main.infoDictionary![<span class="string">"CFBundleExecutable"</span>] <span class="keyword">as</span>? <span class="type">String</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">//拼接</span></span><br><span class="line">    <span class="keyword">let</span> className=clsName! + <span class="string">"."</span> + vcNameString</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//字符串转Class 需要注意的是这里的`UIViewController`强转必须带上`.Type`,否则转换不成功</span></span><br><span class="line">    <span class="keyword">let</span> classT = <span class="type">NSClassFromString</span>(className)! <span class="keyword">as</span>! <span class="type">UIViewController</span>.<span class="type">Type</span></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="type">URLRouter</span>.shared.pushViewController(viewController:classT.<span class="keyword">init</span>()  , animated: <span class="literal">true</span>)</span><br><span class="line">&#125;<span class="comment">//成功完成跳转</span></span><br></pre></td></tr></table></figure><a id="more"></a><ul><li><strong><em>注意</em></strong><ol><li>Swift中引入了命名空间的概念，转Class需要拼接命名空间</li><li>这里的<code>UIViewController</code>强转必须带上<code>.Type</code>,否则转换不成功</li></ol></li></ul>]]></content>
      
      
      <categories>
          
          <category> Swift </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Swift </tag>
            
            <tag> Class </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android报错</title>
      <link href="/2019/06/17/Android%20%E6%8A%A5%E9%94%99/"/>
      <url>/2019/06/17/Android%20%E6%8A%A5%E9%94%99/</url>
      
        <content type="html"><![CDATA[<h5 id="1-MISSING-ACCESSIBILITY-LABEL-WHERE-MINSDK-lt-17-YOU-SHOULD-PROVIDE-AN-‘ANDROID-HINT’"><a href="#1-MISSING-ACCESSIBILITY-LABEL-WHERE-MINSDK-lt-17-YOU-SHOULD-PROVIDE-AN-‘ANDROID-HINT’" class="headerlink" title="1.*MISSING ACCESSIBILITY LABEL: WHERE MINSDK &lt; 17, YOU SHOULD PROVIDE AN ‘ANDROID:HINT’ *"></a>1.*<em>MISSING ACCESSIBILITY LABEL: WHERE MINSDK &lt; 17, YOU SHOULD PROVIDE AN ‘ANDROID:HINT’ *</em></h5><blockquote><p>在布局文件（默认为main_activity.xml）添加</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">xmlns:tools=<span class="string">"http://schemas.android.com/tools"</span></span><br><span class="line">  </span><br><span class="line">tools:ignore=<span class="string">"LabelFor"</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
            <tag> android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>根目录下的build.gradle</title>
      <link href="/2019/06/16/%E3%80%8Ebuild.gradle%E3%80%8F/"/>
      <url>/2019/06/16/%E3%80%8Ebuild.gradle%E3%80%8F/</url>
      
        <content type="html"><![CDATA[<h4 id="根目录下的build-gradle"><a href="#根目录下的build-gradle" class="headerlink" title="根目录下的build.gradle"></a>根目录下的build.gradle</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Top-level build file where you can add configuration options common to all sub-projects/modules.</span></span><br><span class="line"></span><br><span class="line">buildscript &#123;</span><br><span class="line">    repositories &#123;</span><br><span class="line">        google()</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//代码托管库，设置后可以在项目中引用jcenter上的开源项目</span></span><br><span class="line">        jcenter()</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="comment">//引用anroid插件</span></span><br><span class="line">    dependencies &#123;</span><br><span class="line">    </span><br><span class="line">        <span class="comment">//声明gradle插件，插件版本号</span></span><br><span class="line">        classpath <span class="string">'com.android.tools.build:gradle:3.5.3'</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">// <span class="doctag">NOTE:</span> Do not place your application dependencies here; they belong</span></span><br><span class="line">        <span class="comment">// in the individual module build.gradle files</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">allprojects &#123;</span><br><span class="line">    repositories &#123;</span><br><span class="line">        google()</span><br><span class="line">        jcenter()</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">task <span class="title">clean</span><span class="params">(type: Delete)</span> </span>&#123;</span><br><span class="line">    delete rootProject.buildDir</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="app目录下的build-gradle"><a href="#app目录下的build-gradle" class="headerlink" title="app目录下的build.gradle"></a>app目录下的build.gradle</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//声明是Android应用程序还是库模块</span></span><br><span class="line"><span class="comment">//com.android.appliccation 标识应用程序，可以直接运行</span></span><br><span class="line"><span class="comment">//com.android.library 标识这是一个库模块，依附于别的应用程序运行</span></span><br><span class="line"></span><br><span class="line">apply plugin: <span class="string">'com.android.application'</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//配置项目构建的各种属性</span></span><br><span class="line">android &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//程序在编译时会检查lint，有任何错误提示会停止build，我们可以关闭这个开关</span></span><br><span class="line">    lintOptions&#123;</span><br><span class="line">        <span class="comment">//即使报错也不会停止打包</span></span><br><span class="line">        abortOnError <span class="keyword">false</span></span><br><span class="line">        <span class="comment">//打包release版本的时候是否进行检测</span></span><br><span class="line">        checkReleaseBuilds <span class="keyword">false</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//编译SDK的版本，也就是API Level</span></span><br><span class="line">    compileSdkVersion <span class="number">28</span></span><br><span class="line">    <span class="comment">//build tools的版本，其中包括了打包工具aapt 、 dx</span></span><br><span class="line">    <span class="comment">//这个目录工具位于 sdk目录/build-tools/ 下</span></span><br><span class="line">    buildToolsVersion <span class="string">'28.0.3'</span></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="comment">//关闭Android Studio的PNG合法性检查</span></span><br><span class="line">    aaptOptions.cruncherEnabled = <span class="keyword">false</span></span><br><span class="line">    aaptOptions.useNewCruncher = <span class="keyword">false</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">//默认配置</span></span><br><span class="line">    defaultConfig &#123;</span><br><span class="line">        <span class="comment">//应用程序的包名</span></span><br><span class="line">        applicationId <span class="string">"com.ifeiyv.android001"</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">//最小的SDK版本，如果设置小于这个版本，或者大于maxSdkVersion将无法安装这个应用</span></span><br><span class="line">        minSdkVersion <span class="number">19</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">//目标sdk版本，充分测试过的版本（建议版本）</span></span><br><span class="line">        targetSdkVersion <span class="number">28</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">//版本号 每次更新增减</span></span><br><span class="line">        versionCode <span class="number">1</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">//版本号，用户看到的版本号</span></span><br><span class="line">        versionName <span class="string">"1.0"</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">//指定打包成Jar文件时候的文件名称</span></span><br><span class="line">        archivesBaseName = <span class="string">"demo-$versionName"</span></span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        <span class="comment">//Native Development Kit</span></span><br><span class="line">        <span class="comment">//原生开发工具包是一组可以让您在Android应用中利用C和c++代码的工具,可用以从您自己的源代码构建,或者利用现有的预构建库.</span></span><br><span class="line">        ndk&#123;</span><br><span class="line">            <span class="comment">//设置（so）文件名称</span></span><br><span class="line">            moduleName <span class="string">"testfeiyv"</span></span><br><span class="line">            ldLibs <span class="string">"log"</span>,<span class="string">"z"</span>,<span class="string">"m"</span>,<span class="string">"jnigraphics"</span>,<span class="string">"android"</span></span><br><span class="line">            </span><br><span class="line">            <span class="comment">//显示指定支持的ABIs</span></span><br><span class="line">            abiFilters <span class="string">"armeabi"</span>,<span class="string">"x86"</span>,<span class="string">"armeabi-v7a"</span></span><br><span class="line">            </span><br><span class="line">            <span class="comment">//C++11</span></span><br><span class="line">            cFlags <span class="string">"-sd=c++11 -fexceptions"</span></span><br><span class="line">            </span><br><span class="line">            stl <span class="string">"gnustl_static"</span></span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//当方法数超过65535的时候允许打包成多个dex文件，动态加载dex</span></span><br><span class="line">        <span class="comment">//(方法的索引使用的是一个short值，而short最大值是65535)</span></span><br><span class="line">        multiDexEnabled <span class="keyword">true</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">//Instrumentation单元测试</span></span><br><span class="line">        testInstrumentationRunner <span class="string">"androidx.test.runner.AndroidJUnitRunner"</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    sourceSets&#123;</span><br><span class="line">        main&#123;</span><br><span class="line">            <span class="comment">//指定清单文件</span></span><br><span class="line">            manifest.srcFile <span class="string">'AndroidManifest.xml'</span></span><br><span class="line">            <span class="comment">//指定res资源目录</span></span><br><span class="line">            res.srcDirs = [<span class="string">'res'</span>]</span><br><span class="line">            <span class="comment">//asset资源文件</span></span><br><span class="line">            assets.srcDir  = [<span class="string">'assets'</span>]</span><br><span class="line">            <span class="comment">//jni代码目录</span></span><br><span class="line">            jni.srcDirs <span class="string">'src/main/jni'</span></span><br><span class="line">            <span class="comment">//jni库目录</span></span><br><span class="line">            jniLibs.srcDir <span class="string">'src/main/jniLibs'</span></span><br><span class="line">            <span class="comment">//指定Java源代码目录</span></span><br><span class="line">            java.srcDirs = [<span class="string">'src'</span>]</span><br><span class="line">            <span class="comment">//指定resource目录</span></span><br><span class="line">            resources.srcDirs = [<span class="string">'src'</span>]</span><br><span class="line">            <span class="comment">//指定aidl目录</span></span><br><span class="line">            aidl.srcDirs = [<span class="string">'src'</span>]</span><br><span class="line">            <span class="comment">//指定source目录</span></span><br><span class="line">            renderscript.srcDirs = [<span class="string">'src'</span>]</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//指定debug模式的路径</span></span><br><span class="line">        debug.setRoot(<span class="string">'build-types/debug'</span>)</span><br><span class="line">        <span class="comment">//指定release模式的路径</span></span><br><span class="line">        release.setRoot(<span class="string">'build-types/release'</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//mltiDex的一些相关配置，这样配置可以使编译速度更快</span></span><br><span class="line">    dexOptions&#123;</span><br><span class="line">        <span class="comment">//让它不要对Lib做preDexing</span></span><br><span class="line">        preDexLibraries = fasle</span><br><span class="line">        <span class="comment">//开启incremental dexing,优化编译效率。这个功能Android Studio默认是关闭的</span></span><br><span class="line">        incremental <span class="keyword">true</span></span><br><span class="line">        <span class="comment">//增加java堆内存大小</span></span><br><span class="line">        javaMaxHeapSize <span class="string">"4g"</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//签名配置</span></span><br><span class="line">    signingConfigs&#123;</span><br><span class="line">        release&#123;</span><br><span class="line">            <span class="comment">//密钥文件路径</span></span><br><span class="line">            <span class="function">storeFile <span class="title">file</span><span class="params">(<span class="string">"feiyv.keystore"</span>)</span></span></span><br><span class="line"><span class="function">            <span class="comment">//密钥文件密码</span></span></span><br><span class="line"><span class="function">            storePassword "feiyvpwd"</span></span><br><span class="line"><span class="function">            <span class="comment">//key 别名</span></span></span><br><span class="line"><span class="function">            keyAlias "fy"</span></span><br><span class="line"><span class="function">            <span class="comment">//key密码</span></span></span><br><span class="line"><span class="function">            keyPassword "fypwd"</span></span><br><span class="line"><span class="function">        &#125;</span></span><br><span class="line"><span class="function">        debug</span>&#123;</span><br><span class="line">           <span class="comment">//密钥文件路径</span></span><br><span class="line">            <span class="function">storeFile <span class="title">file</span><span class="params">(<span class="string">"feiyv.keystore"</span>)</span></span></span><br><span class="line"><span class="function">            <span class="comment">//密钥文件密码</span></span></span><br><span class="line"><span class="function">            storePassword "feiyvpwd"</span></span><br><span class="line"><span class="function">            <span class="comment">//key 别名</span></span></span><br><span class="line"><span class="function">            keyAlias "fy"</span></span><br><span class="line"><span class="function">            <span class="comment">//key密码</span></span></span><br><span class="line"><span class="function">            keyPassword "fypwd" </span></span><br><span class="line"><span class="function">        &#125;</span></span><br><span class="line"><span class="function">    &#125;</span></span><br><span class="line"><span class="function">    </span></span><br><span class="line"><span class="function">    </span></span><br><span class="line"><span class="function">    <span class="comment">//指定生成安装文件的配置，常有两个子包：release，debug，注：直接运行的都是debug安装文件</span></span></span><br><span class="line"><span class="function">    buildTypes </span>&#123;</span><br><span class="line">        <span class="comment">//release版本的配置，即生成发布版文件的配置</span></span><br><span class="line">        release &#123;</span><br><span class="line">            <span class="comment">//是否支持zip</span></span><br><span class="line">            zipAlignEnabled <span class="keyword">true</span></span><br><span class="line">            <span class="comment">//移除无用的resource文件</span></span><br><span class="line">            shrinkResources <span class="keyword">true</span></span><br><span class="line">            <span class="comment">//是否对代码进行混淆，true标识混淆</span></span><br><span class="line">            minifyEnabled <span class="keyword">false</span></span><br><span class="line">            </span><br><span class="line">            <span class="comment">//指定混淆时使用的规则文件：</span></span><br><span class="line">            <span class="comment">//proguard-android.tex指所有项目通用的混淆规则，proguard-rules.pro当前项目特有的混淆规则</span></span><br><span class="line">            <span class="comment">//release的Proguard默认为Module下的proguard-rules.pro文件</span></span><br><span class="line">            <span class="function">proguardFiles <span class="title">getDefaultProguardFile</span><span class="params">(<span class="string">'proguard-android-optimize.txt'</span>)</span>, 'proguard-rules.pro'</span></span><br><span class="line"><span class="function">            </span></span><br><span class="line"><span class="function">            <span class="comment">//是否支持调试</span></span></span><br><span class="line"><span class="function">            debuggable <span class="keyword">false</span> </span></span><br><span class="line"><span class="function">            </span></span><br><span class="line"><span class="function">            <span class="comment">//ndk的一些配置</span></span></span><br><span class="line"><span class="function">            ndk </span>&#123;</span><br><span class="line">                 <span class="comment">// cFlags "-std=c++11 -fexceptions -O3 -D__RELEASE__" // C++11</span></span><br><span class="line">                 <span class="comment">// platformVersion = "19"</span></span><br><span class="line">                 moduleName <span class="string">"hebbewifisafe"</span> <span class="comment">// 设置库(so)文件名称</span></span><br><span class="line">                ldLibs <span class="string">"log"</span>, <span class="string">"z"</span>, <span class="string">"m"</span>, <span class="string">"jnigraphics"</span>, <span class="string">"android"</span></span><br><span class="line">                 <span class="comment">// 引入库，比如要用到的__android_log_print</span></span><br><span class="line">                 abiFilters <span class="string">"armeabi"</span>, <span class="string">"x86"</span>, <span class="string">"armeabi-v7a"</span><span class="comment">// "x86"</span></span><br><span class="line">                 cFlags <span class="string">"-std=c++11 -fexceptions"</span> <span class="comment">// C++11</span></span><br><span class="line">                 stl <span class="string">"gnustl_static"</span></span><br><span class="line">             &#125;</span><br><span class="line">                <span class="comment">// 采用动态替换字符串的方式生成不同的 release.apk （3.0之后版本的修改方式）</span></span><br><span class="line">             applicationVariants.all &#123; variant -&gt;</span><br><span class="line">                 variant.outputs.all &#123; output -&gt;</span><br><span class="line">                     <span class="keyword">if</span> (!variant.buildType.isDebuggable()) &#123;</span><br><span class="line">                         <span class="comment">// 获取签名的名字 variant.signingConfig.name</span></span><br><span class="line">                         <span class="comment">// 要被替换的源字符串</span></span><br><span class="line">                        def sourceFile = <span class="string">"app-release"</span>;</span><br><span class="line">                         <span class="comment">// 替换的字符串</span></span><br><span class="line">　　　　　　　　　　　　　　　def replaceFile = <span class="string">"Demo-V$&#123;variant.versionName&#125;.$&#123;releaseTime()&#125;"</span></span><br><span class="line">　　　　　　　　　　　　　　　outputFileName = output.outputFile.name.replace(sourceFile, replaceFile)</span><br><span class="line">                     &#125;</span><br><span class="line">                 &#125;</span><br><span class="line">             &#125;</span><br><span class="line">             jniDebuggable <span class="keyword">false</span>  <span class="comment">// 关闭jni调试</span></span><br><span class="line">        &#125;</span><br><span class="line">        debug &#123; <span class="comment">// debug版本的配置</span></span><br><span class="line">            minifyEnabled <span class="keyword">false</span></span><br><span class="line">             zipAlignEnabled <span class="keyword">true</span></span><br><span class="line">             shrinkResources <span class="keyword">true</span> <span class="comment">// 移除无用的resource文件</span></span><br><span class="line">             <span class="function">proguardFiles <span class="title">getDefaultProguardFile</span><span class="params">(<span class="string">'proguard-android.txt'</span>)</span>, 'proguard-rules.pro'</span></span><br><span class="line"><span class="function">             debuggable <span class="keyword">true</span></span></span><br><span class="line"><span class="function"> <span class="comment">//          jniDebuggable true</span></span></span><br><span class="line"><span class="function">             ndk </span>&#123;</span><br><span class="line">                 cFlags <span class="string">"-std=c++11 -fexceptions -g -D __DEBUG__"</span> <span class="comment">// C++11</span></span><br><span class="line">             &#125;</span><br><span class="line">             jniDebuggable <span class="keyword">true</span></span><br><span class="line">         &#125;</span><br><span class="line"> </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    productFlavors&#123;</span><br><span class="line">        <span class="comment">//这里可以设置产品发布的一些东西</span></span><br><span class="line">        <span class="comment">//比如一种软件要发布到不同的渠道</span></span><br><span class="line">        <span class="comment">//且不同渠道中的包名不同，可以在此处</span></span><br><span class="line">        <span class="comment">//甚至可以设置不同的AndroidManifest.xml</span></span><br><span class="line">        tencent&#123;</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">        huanwei&#123;</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">        all&#123;</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 所谓ProductFlavors其实就是可定义的产品特性，</span></span><br><span class="line">    <span class="comment">// 配合 manifest merger 使用的时候就可以达成在一次编译</span></span><br><span class="line">    <span class="comment">// 过程中产生多个具有自己特性配置的版本。</span></span><br><span class="line">    <span class="comment">// 这个配置的作用就是，为每个渠道包产生不同的 UMENG_CHANNEL_VALUE 的值。</span></span><br><span class="line">    productFlavors.all&#123;</span><br><span class="line">        flavor -&gt; flavor.manifestPlaceholder = [UMENG_CHANNEL_VALUE:name]</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> <span class="comment">// 指定当前项目的所有依赖关系：本地依赖、库依赖、远程依赖</span></span><br><span class="line"> <span class="comment">// 本地依赖：可以对本地 Jar 包或目录添加依赖关系</span></span><br><span class="line"> <span class="comment">// 库依赖：可以对项目中的库模块添加依赖关系</span></span><br><span class="line"> <span class="comment">// 远程依赖：可以对 jcenter 库上的开源项目添加依赖</span></span><br><span class="line"> <span class="comment">// 标准的远程依赖格式是 域名:组织名:版本号</span></span><br><span class="line"> </span><br><span class="line">dependencies &#123;</span><br><span class="line">    <span class="function">implementation <span class="title">fileTree</span><span class="params">(dir: <span class="string">'libs'</span>, include: [<span class="string">'*.jar'</span>])</span></span></span><br><span class="line"><span class="function">    implementation 'com.android.support:recyclerview-v7:28.0.0'</span></span><br><span class="line"><span class="function"><span class="comment">//    implementation 'androidx.appcompat:appcompat:1.0.2'</span></span></span><br><span class="line"><span class="function"><span class="comment">//    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'</span></span></span><br><span class="line"><span class="function">    testImplementation 'junit:junit:4.12'</span></span><br><span class="line"><span class="function"><span class="comment">//    androidTestImplementation 'androidx.test.ext:junit:1.1.0'</span></span></span><br><span class="line"><span class="function"><span class="comment">//    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">&#125;</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"> <span class="comment">// 声明是要使用谷歌服务框架</span></span></span><br><span class="line"><span class="function"> apply plugin: 'com.google.gms.google-services'</span></span><br><span class="line"><span class="function"> </span></span><br><span class="line"><span class="function"> </span></span><br><span class="line"><span class="function"> <span class="comment">// 第三方依赖库的本地缓存路径</span></span></span><br><span class="line"><span class="function"> task showMeCache &lt;&lt; </span>&#123;</span><br><span class="line">     configurations.compile.each &#123; println it &#125;</span><br><span class="line"> &#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">// 使用maven仓库。android有两个标准的library文件服务器，一个jcenter一个maven。两者毫无关系。</span></span><br><span class="line"><span class="comment">// jcenter有的maven可能没有，反之亦然。</span></span><br><span class="line"><span class="comment">// 如果要使用jcenter的话就把mavenCentral()替换成jcenter()</span></span><br><span class="line">repositories &#123;</span><br><span class="line">     mavenCentral()</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> <span class="function">def <span class="title">releaseTime</span><span class="params">()</span> </span>&#123;</span><br><span class="line">   <span class="keyword">return</span> <span class="keyword">new</span> Date().format(<span class="string">"MMdd.HHmm"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
            <tag> android </tag>
            
            <tag> flutter </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SWIFT 常用方法</title>
      <link href="/2019/06/12/SWIFT%20%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95/"/>
      <url>/2019/06/12/SWIFT%20%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  LayoutProperties.swift</span></span><br><span class="line"><span class="comment">//  IfeiyvSwift</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  Created by l on 2019/6/12.</span></span><br><span class="line"><span class="comment">//  Copyright © 2019 ifeiyv. All rights reserved.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> UIKit</span><br><span class="line"><span class="keyword">import</span> CommonCrypto</span><br><span class="line"></span><br><span class="line"><span class="comment">//Mark:------------Layout</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Screen</span></span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//MARK:屏幕宽度</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">var</span> width:<span class="type">CGFloat</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="type">UIScreen</span>.main.bounds.width</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//MARK:屏幕高度</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">var</span> height:<span class="type">CGFloat</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="type">UIScreen</span>.main.bounds.height</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//MARK:分辨率 倍率</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">var</span> scale:<span class="type">CGFloat</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="type">Screen</span>.width/<span class="number">375.0</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">UIView</span></span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//MARK: 设置或者获取UIView的frame</span></span><br><span class="line">    <span class="keyword">var</span> fy_frame:<span class="type">CGRect</span>&#123;</span><br><span class="line">        <span class="keyword">set</span>&#123;</span><br><span class="line">            <span class="keyword">self</span>.frame = fy_frame</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">get</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">self</span>.frame</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//MARK: 设置或者获取UIView的origin</span></span><br><span class="line">    <span class="keyword">var</span> fy_origin:<span class="type">CGPoint</span>&#123;</span><br><span class="line">        <span class="keyword">set</span>&#123;</span><br><span class="line">            <span class="keyword">self</span>.frame = <span class="type">CGRect</span>(x: fy_origin.x, y: fy_origin.y, width: <span class="keyword">self</span>.fy_width, height: <span class="keyword">self</span>.fy_height)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">get</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">self</span>.frame.origin</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//MARK: 设置或者获取UIView的size</span></span><br><span class="line">    <span class="keyword">var</span> fy_size:<span class="type">CGSize</span>&#123;</span><br><span class="line">        <span class="keyword">set</span>&#123;</span><br><span class="line">            <span class="keyword">self</span>.frame = <span class="type">CGRect</span>(x: <span class="keyword">self</span>.fy_origin.x, y: <span class="keyword">self</span>.fy_origin.y, width: fy_size.width, height: fy_size.height)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">get</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">self</span>.frame.size</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="comment">//MARK: 设置或者获取UIView的宽度</span></span><br><span class="line">    <span class="keyword">var</span> fy_width:<span class="type">CGFloat</span>&#123;</span><br><span class="line">        <span class="keyword">set</span>&#123;</span><br><span class="line">            <span class="keyword">self</span>.frame = <span class="type">CGRect</span>(x: <span class="keyword">self</span>.frame.origin.x, y: <span class="keyword">self</span>.frame.origin.y, width: fy_width, height: <span class="keyword">self</span>.frame.size.height)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">get</span>&#123;</span><br><span class="line">           <span class="keyword">return</span> <span class="keyword">self</span>.bounds.size.width</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//MARK: 设置或者获取UIView的宽度</span></span><br><span class="line">    <span class="keyword">var</span> fy_height:<span class="type">CGFloat</span>&#123;</span><br><span class="line">        <span class="keyword">set</span>&#123;</span><br><span class="line">            <span class="keyword">self</span>.frame = <span class="type">CGRect</span>(x: <span class="keyword">self</span>.frame.origin.x, y: <span class="keyword">self</span>.frame.origin.y, width: <span class="keyword">self</span>.frame.size.width, height: fy_height)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">get</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">self</span>.bounds.size.height</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="comment">//MARK: 设置或者获取UIView的x坐标</span></span><br><span class="line">    <span class="keyword">var</span> fy_x:<span class="type">CGFloat</span>&#123;</span><br><span class="line">        <span class="keyword">set</span>&#123;</span><br><span class="line">            <span class="keyword">self</span>.frame = <span class="type">CGRect</span>(x: fy_x, y: <span class="keyword">self</span>.frame.origin.y, width: <span class="keyword">self</span>.frame.size.width, height: <span class="keyword">self</span>.frame.size.height)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">get</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">self</span>.frame.origin.x</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//MARK: 设置或者获取UIView的y坐标</span></span><br><span class="line">    <span class="keyword">var</span> fy_y:<span class="type">CGFloat</span>&#123;</span><br><span class="line">        <span class="keyword">set</span>&#123;</span><br><span class="line">            <span class="keyword">self</span>.frame = <span class="type">CGRect</span>(x: <span class="keyword">self</span>.frame.origin.x, y: fy_y, width: <span class="keyword">self</span>.frame.size.width, height:<span class="keyword">self</span>.frame.size.height)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">get</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">self</span>.frame.origin.y</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    <span class="comment">//MARK: 设置或者获取UIView的maxX坐标</span></span><br><span class="line">    <span class="keyword">var</span> fy_maxX:<span class="type">CGFloat</span>&#123;</span><br><span class="line">        <span class="keyword">get</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">self</span>.fy_x+<span class="keyword">self</span>.fy_width</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//MARK: 设置或者获取UIView的maxY坐标</span></span><br><span class="line">    <span class="keyword">var</span> fy_maxY:<span class="type">CGFloat</span>&#123;</span><br><span class="line">        <span class="keyword">get</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">self</span>.fy_y+<span class="keyword">self</span>.fy_height</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">UIView</span></span>&#123;</span><br><span class="line">    <span class="comment">//MARK: 切圆角</span></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">corner</span><span class="params">(byRoundingCorners corners: UIRectCorner, radii: CGFloat)</span></span> &#123;</span><br><span class="line">        <span class="keyword">let</span> maskPath = <span class="type">UIBezierPath</span>(roundedRect: <span class="keyword">self</span>.bounds, byRoundingCorners: corners, cornerRadii: <span class="type">CGSize</span>(width: radii, height: radii))</span><br><span class="line">        <span class="keyword">let</span> maskLayer = <span class="type">CAShapeLayer</span>()</span><br><span class="line">        maskLayer.frame = <span class="keyword">self</span>.bounds</span><br><span class="line">        maskLayer.path = maskPath.cgPath</span><br><span class="line">        <span class="keyword">self</span>.layer.mask = maskLayer</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">enum</span> <span class="title">FYError</span>: <span class="title">Swift</span>.<span class="title">Error</span> </span>&#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="type">NOFINT</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">UINib</span></span>&#123;</span><br><span class="line">    <span class="comment">//MARK: 加载XIB</span></span><br><span class="line">    <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">func</span> <span class="title">readNibView</span>(<span class="title">str</span>: <span class="title">String</span>) <span class="title">throws</span> -&gt; <span class="title">UIView</span> </span>&#123;</span><br><span class="line">        <span class="keyword">let</span> nib = <span class="type">UINib</span>.<span class="keyword">init</span>(nibName: str, bundle: <span class="literal">nil</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> view = nib.instantiate(withOwner: <span class="literal">nil</span>, options: <span class="literal">nil</span>).first <span class="keyword">as</span>? <span class="type">UIView</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> view</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">throw</span> <span class="type">FYError</span>.<span class="type">NOFINT</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//Mark:------------UIColor</span></span><br><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">UIColor</span></span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">fy_RGB</span><span class="params">(red:CGFloat,green:CGFloat,blue:CGFloat)</span></span> -&gt; <span class="type">UIColor</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> fy_RGBA(red: red, green: green, blue: blue, alpha: <span class="number">1.0</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">fy_RGBA</span><span class="params">(red:CGFloat,green:CGFloat,blue:CGFloat,alpha:CGFloat)</span></span> -&gt; <span class="type">UIColor</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="type">UIColor</span>.<span class="keyword">init</span>(red: red/<span class="number">255.0</span>, green: green/<span class="number">255.0</span>, blue: blue/<span class="number">255.0</span>, alpha: alpha)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">fy_hexColor</span><span class="params">(hexColor:String,defaultStringColor:String = <span class="string">"000000"</span>,alpha:CGFloat = <span class="number">1.0</span>)</span></span> -&gt; <span class="type">UIColor</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> cString: <span class="type">String</span> = hexColor.trimmingCharacters(<span class="keyword">in</span>: <span class="type">NSCharacterSet</span>.whitespacesAndNewlines)</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> cString.<span class="built_in">count</span> &lt; <span class="number">6</span> &#123;</span><br><span class="line">            cString = defaultStringColor</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> cString.hasPrefix(<span class="string">"0X"</span>) || cString.hasPrefix(<span class="string">"0x"</span>) &#123;</span><br><span class="line">            cString = <span class="type">String</span>(cString.suffix(from: cString.index(cString.startIndex, offsetBy: <span class="number">2</span>)))</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> cString.hasPrefix(<span class="string">"#"</span>) &#123;</span><br><span class="line">            cString = <span class="type">String</span>(cString.suffix(from: cString.index(cString.startIndex, offsetBy: <span class="number">1</span>)))</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> cString.<span class="built_in">count</span> != <span class="number">6</span> &#123;</span><br><span class="line">            cString = defaultStringColor</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">var</span> range: <span class="type">NSRange</span> = <span class="type">NSMakeRange</span>(<span class="number">0</span>, <span class="number">2</span>)</span><br><span class="line">        <span class="keyword">let</span> rString = (cString <span class="keyword">as</span> <span class="type">NSString</span>).substring(with: range)</span><br><span class="line">        range.location = <span class="number">2</span></span><br><span class="line">        <span class="keyword">let</span> gString = (cString <span class="keyword">as</span> <span class="type">NSString</span>).substring(with: range)</span><br><span class="line">        range.location = <span class="number">4</span></span><br><span class="line">        <span class="keyword">let</span> bString = (cString <span class="keyword">as</span> <span class="type">NSString</span>).substring(with: range)</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">var</span> r: <span class="type">UInt32</span> = <span class="number">0x0</span></span><br><span class="line">        <span class="keyword">var</span> g: <span class="type">UInt32</span> = <span class="number">0x0</span></span><br><span class="line">        <span class="keyword">var</span> b: <span class="type">UInt32</span> = <span class="number">0x0</span></span><br><span class="line">        <span class="type">Scanner</span>(string: rString).scanHexInt32(&amp;r)</span><br><span class="line">        <span class="type">Scanner</span>(string: gString).scanHexInt32(&amp;g)</span><br><span class="line">        <span class="type">Scanner</span>(string: bString).scanHexInt32(&amp;b)</span><br><span class="line">        <span class="keyword">return</span> fy_RGBA(red: <span class="type">CGFloat</span>(r), green: <span class="type">CGFloat</span>(g), blue: <span class="type">CGFloat</span>(b), alpha: alpha)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//Mark:------------String</span></span><br><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">String</span></span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">let</span> <span class="type">EMPTY</span> = <span class="string">""</span></span><br><span class="line">    <span class="comment">/// String使用下标截取字符串</span></span><br><span class="line">    <span class="comment">/// 例: "示例字符串"[0..&lt;2] 结果是 "示例"</span></span><br><span class="line">    <span class="keyword">subscript</span> (r: <span class="type">Range</span>&lt;<span class="type">Int</span>&gt;) -&gt; <span class="type">String</span> &#123;</span><br><span class="line">        <span class="keyword">get</span> &#123;</span><br><span class="line">            <span class="keyword">let</span> startIndex = <span class="keyword">self</span>.index(<span class="keyword">self</span>.startIndex, offsetBy: r.lowerBound)</span><br><span class="line">            <span class="keyword">let</span> endIndex = <span class="keyword">self</span>.index(<span class="keyword">self</span>.startIndex, offsetBy: r.upperBound)</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">return</span> <span class="type">String</span>(<span class="keyword">self</span>[startIndex..&lt;endIndex])</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//MARK: 返回一个字符串的前n位, 若字符串长不足n，则直接返回当前字符串</span></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">fy_start</span><span class="params">(length n: Int)</span></span> -&gt; <span class="type">String</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">self</span>.<span class="built_in">count</span> &lt; n &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">self</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> n &lt; <span class="number">0</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">self</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">let</span> index = <span class="keyword">self</span>.index(<span class="keyword">self</span>.startIndex, offsetBy: n)</span><br><span class="line">        <span class="keyword">return</span> <span class="type">String</span>(<span class="keyword">self</span>[..&lt;index])</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="comment">//MARK: 返回一个字符串的后n位, 若字符串长不足n，则直接返回当前字符串</span></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">fy_last</span><span class="params">(length n: Int)</span></span> -&gt; <span class="type">String</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">self</span>.<span class="built_in">count</span> &lt; n &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">self</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">let</span> index = <span class="keyword">self</span>.index((<span class="keyword">self</span>.endIndex), offsetBy: -n)</span><br><span class="line">        <span class="keyword">return</span> <span class="type">String</span>(<span class="keyword">self</span>[index...])</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//MARK: 删除所有的空格</span></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">fy_trimAll</span><span class="params">()</span></span> -&gt; <span class="type">String</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">self</span>.replacingOccurrences(of: <span class="string">" "</span>, with: <span class="type">String</span>.<span class="type">EMPTY</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="comment">//MARK: 判断是否包含数字和字母</span></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">fy_isPassWord</span><span class="params">()</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> numberRegex:<span class="type">NSPredicate</span> = <span class="type">NSPredicate</span>(format: <span class="string">"SELF MATCHES %@"</span>, <span class="string">"^.*[0-9]+.*$"</span>)</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">let</span> letterRegex:<span class="type">NSPredicate</span> = <span class="type">NSPredicate</span>(format: <span class="string">"SELF MATCHES %@"</span>, <span class="string">"^.*[A-Za-z]+.*$"</span>)</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> numberRegex.evaluate(with: <span class="keyword">self</span>) &amp;&amp; letterRegex.evaluate(with: <span class="keyword">self</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="comment">//MARK: md5加密</span></span><br><span class="line">    <span class="keyword">var</span> fy_md5: <span class="type">String</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> cStr = <span class="keyword">self</span>.cString(using: .utf8)</span><br><span class="line">        <span class="keyword">let</span> digestLen = <span class="type">Int</span>(<span class="type">CC_MD5_DIGEST_LENGTH</span>)</span><br><span class="line">        <span class="keyword">let</span> buffer = <span class="type">UnsafeMutablePointer</span>&lt;<span class="type">UInt8</span>&gt;.allocate(capacity: digestLen)</span><br><span class="line">        <span class="type">CC_MD5</span>(cStr!,(<span class="type">CC_LONG</span>)(strlen(cStr!)), buffer)</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">let</span> md5String = <span class="type">NSMutableString</span>()</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span> ..&lt; digestLen &#123;</span><br><span class="line">            md5String.appendFormat(<span class="string">"%02X"</span>, buffer[i])</span><br><span class="line">        &#125;</span><br><span class="line">        free(buffer)</span><br><span class="line">        <span class="keyword">return</span> md5String <span class="keyword">as</span> <span class="type">String</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//MARK: base64编码</span></span><br><span class="line">    <span class="keyword">var</span> fy_base64Encoding: <span class="type">String</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> data = <span class="keyword">self</span>.data(using: <span class="type">String</span>.<span class="type">Encoding</span>.utf8)</span><br><span class="line">        <span class="keyword">var</span> base64String = data?.base64EncodedString(options: .lineLength76Characters)</span><br><span class="line">        base64String = base64String?.replacingOccurrences(of: <span class="string">"\r"</span>, with: <span class="string">""</span>)</span><br><span class="line">        <span class="keyword">return</span> base64String ?? <span class="string">""</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//MARK: base64解码</span></span><br><span class="line">    <span class="keyword">var</span> fy_base64Decoded: <span class="type">String</span> &#123;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">let</span> decodedData = <span class="type">Data</span>(base64Encoded: <span class="keyword">self</span>, options: <span class="type">Data</span>.<span class="type">Base64DecodingOptions</span>(rawValue: <span class="number">0</span>))</span><br><span class="line">        <span class="keyword">return</span> <span class="type">String</span>(data: decodedData!, encoding: <span class="type">String</span>.<span class="type">Encoding</span>.utf8) ?? <span class="string">""</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//MARK: 返回188****8888类型字符串</span></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">fy_getSecretMobileNo</span><span class="params">()</span></span> -&gt; <span class="type">String</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">self</span>.isEmpty &#123; <span class="keyword">return</span> <span class="keyword">self</span> &#125;</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">self</span>.<span class="built_in">count</span> &gt; <span class="number">7</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"\(self.fy_start(length: 3))****\(self.fy_last(length:4))"</span></span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">self</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="comment">//MARK: 截取从start开始,长度为lenght的字符串</span></span><br><span class="line">    <span class="comment">///</span></span><br><span class="line">    <span class="comment">/// - Parameters:</span></span><br><span class="line">    <span class="comment">///   - start: 开始</span></span><br><span class="line">    <span class="comment">///   - lenght: 长度</span></span><br><span class="line">    <span class="comment">/// - Returns: 处理结果</span></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">fy_startIndexToLenght</span><span class="params">(<span class="number">_</span> start: Int, lenght: Int)</span></span> -&gt; <span class="type">String</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> start &gt; <span class="keyword">self</span>.<span class="built_in">count</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">self</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">let</span> startIndex = <span class="keyword">self</span>.index(<span class="keyword">self</span>.startIndex, offsetBy: start)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">self</span>.<span class="built_in">count</span> &lt; (start + lenght) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="type">String</span>(<span class="keyword">self</span>.suffix(from: startIndex))</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">let</span> endIndex = <span class="keyword">self</span>.index(<span class="keyword">self</span>.startIndex, offsetBy: start + lenght)</span><br><span class="line">        <span class="keyword">return</span> <span class="type">String</span>(<span class="keyword">self</span>[startIndex..&lt;endIndex])</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//MARK: 判断链接中是否存在中文</span></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">fy_isIncludeChineseIn</span><span class="params">()</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="number">_</span>, value) <span class="keyword">in</span> <span class="keyword">self</span>.enumerated() &#123;</span><br><span class="line">            <span class="keyword">if</span> value &gt;= <span class="string">"\u&#123;4E00&#125;"</span> &amp;&amp; value &lt;= <span class="string">"\u&#123;9FA5&#125;"</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//MARK: 判断是否有效邮箱</span></span><br><span class="line">    <span class="comment">///</span></span><br><span class="line">    <span class="comment">/// - Returns: 结果</span></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">fy_isPeriodEmail</span><span class="params">()</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> email = <span class="string">"[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]&#123;2,4&#125;"</span></span><br><span class="line">        <span class="keyword">let</span> regextestEmails = <span class="type">NSPredicate</span>(format: <span class="string">"SELF MATCHES %@"</span>, email)</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> regextestEmails.evaluate(with: <span class="keyword">self</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//MARK: 判断是否有效身份证号</span></span><br><span class="line">    <span class="comment">///</span></span><br><span class="line">    <span class="comment">/// - Returns: Bool</span></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">fy_isPeriodIdCard</span><span class="params">()</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">self</span>.<span class="built_in">count</span> != <span class="number">18</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">let</span> regex2 = <span class="string">"^(^[1-9]\\d&#123;7&#125;((0\\d)|(1[0-2]))(([0|1|2]\\d)|3[0-1])\\d&#123;3&#125;$)|(^[1-9]\\d&#123;5&#125;[1-9]\\d&#123;3&#125;((0\\d)|(1[0-2]))(([0|1|2]\\d)|3[0-1])((\\d&#123;4&#125;)|\\d&#123;3&#125;[Xx])$)$"</span></span><br><span class="line">        <span class="keyword">let</span> identityCardPredicate = <span class="type">NSPredicate</span>(format: <span class="string">"SELF MATCHES %@"</span>, regex2)</span><br><span class="line">        <span class="keyword">let</span> flag = identityCardPredicate.evaluate(with: <span class="keyword">self</span>)</span><br><span class="line">        <span class="keyword">if</span> !flag &#123;</span><br><span class="line">            <span class="comment">// 格式错误</span></span><br><span class="line">            <span class="keyword">return</span> flag</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// 格式正确，判断合法性</span></span><br><span class="line">            <span class="comment">// 将前十七位加权因子保存在数组里</span></span><br><span class="line">            <span class="keyword">let</span> idCardWiArray = [<span class="string">"7"</span>, <span class="string">"9"</span>, <span class="string">"10"</span>, <span class="string">"5"</span>, <span class="string">"8"</span>, <span class="string">"4"</span>, <span class="string">"2"</span>, <span class="string">"1"</span>, <span class="string">"6"</span>, <span class="string">"3"</span>, <span class="string">"7"</span>, <span class="string">"9"</span>, <span class="string">"10"</span>, <span class="string">"5"</span>, <span class="string">"8"</span>, <span class="string">"4"</span>, <span class="string">"2"</span>]</span><br><span class="line">            <span class="comment">// 这是除以11后，可能产生的11位余数， 验证码，也保存在数组里</span></span><br><span class="line">            <span class="keyword">let</span> idCardYArray = [<span class="string">"1"</span>, <span class="string">"0"</span>, <span class="string">"10"</span>, <span class="string">"9"</span>, <span class="string">"8"</span>, <span class="string">"7"</span>, <span class="string">"6"</span>, <span class="string">"5"</span>, <span class="string">"4"</span>, <span class="string">"3"</span>, <span class="string">"2"</span>]</span><br><span class="line">            <span class="keyword">var</span> idCardArr = [<span class="type">Int</span>]()</span><br><span class="line">            <span class="keyword">var</span> idCardWiSum = <span class="number">0</span></span><br><span class="line">            <span class="keyword">for</span> index <span class="keyword">in</span> <span class="number">0</span>..&lt;<span class="number">17</span> &#123;</span><br><span class="line">                <span class="keyword">let</span> subStrIndex = fy_startIndexToLenght(index, lenght: <span class="number">1</span>)</span><br><span class="line">                <span class="keyword">let</span> idCardWiIndex = idCardWiArray[index]</span><br><span class="line">                <span class="comment">// 数组保存所有乘积</span></span><br><span class="line">                idCardArr.append(<span class="type">Int</span>(subStrIndex)! * <span class="type">Int</span>(idCardWiIndex)!)</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// 将所有乘积相加</span></span><br><span class="line">            <span class="keyword">for</span> index <span class="keyword">in</span> <span class="number">0</span>..&lt;idCardArr.<span class="built_in">count</span> &#123;</span><br><span class="line">                idCardWiSum += idCardArr[index]</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// 计算出校验码所在数组的位置</span></span><br><span class="line">            <span class="keyword">let</span> idCardMod = idCardWiSum % <span class="number">11</span></span><br><span class="line">            <span class="comment">// 得到最后一位身份证号码</span></span><br><span class="line">            <span class="keyword">let</span> idCardLast = fy_startIndexToLenght(<span class="number">17</span>, lenght: <span class="number">1</span>)</span><br><span class="line">            <span class="keyword">if</span> idCardMod == <span class="number">2</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> idCardLast == <span class="string">"X"</span> || idCardLast == <span class="string">"x"</span> &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> idCardLast == idCardYArray[idCardMod] &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//MARK: 正则匹配6-12位数字和大小写字母组合</span></span><br><span class="line">    <span class="comment">///</span></span><br><span class="line">    <span class="comment">/// - Returns: Bool</span></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">fy_checkPassword</span><span class="params">()</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> password = <span class="string">"^(?![0-9]+$)(?![a-zA-Z]+$)[a-zA-Z0-9]&#123;6,12&#125;"</span></span><br><span class="line">        <span class="keyword">let</span> regextestPassword = <span class="type">NSPredicate</span>(format: <span class="string">"SELF MATCHES %@"</span>, password)</span><br><span class="line">        <span class="keyword">return</span> regextestPassword.evaluate(with:<span class="keyword">self</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//MARK: 判断字符串是否包含其他字符串(必须全部一样)</span></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">fy_contains</span><span class="params">(<span class="built_in">find</span>: String)</span></span> -&gt; <span class="type">Bool</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">self</span>.range(of: <span class="built_in">find</span>) != <span class="literal">nil</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//MARK: 字符串转换成整型</span></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">fy_toInt</span><span class="params">()</span></span> -&gt; <span class="type">Int?</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="type">Int</span>(<span class="keyword">self</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//MARK: 识别有效手机号</span></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">fy_verifyPhoneNumber</span><span class="params">()</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> mobile = <span class="string">"^1((3[0-9]|4[5-68-9]|5[0-35-9]|6[6]|7[0-9]|8[0-9]|9[89])\\d&#123;8&#125;$)"</span></span><br><span class="line">        <span class="keyword">let</span> regextestmobile = <span class="type">NSPredicate</span>(format: <span class="string">"SELF MATCHES %@"</span>,mobile)</span><br><span class="line">        <span class="keyword">return</span> regextestmobile.evaluate(with: <span class="keyword">self</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//MARK: 识别是否有效座机号 eg: 021-8688995</span></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">fy_landlineNumber</span><span class="params">()</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> strNum = <span class="string">"^(0\\d&#123;2,3&#125;-?\\d&#123;7,8&#125;$)"</span></span><br><span class="line">        <span class="keyword">let</span> checktest = <span class="type">NSPredicate</span>.<span class="keyword">init</span>(format: <span class="string">"SELF MATCHES %@"</span>, strNum)</span><br><span class="line">        <span class="keyword">let</span> isPhone = checktest.evaluate(with: <span class="keyword">self</span>)</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">let</span> strNum1 = <span class="string">"^(\\d&#123;7,8&#125;$)"</span></span><br><span class="line">        <span class="keyword">let</span> checktest1 = <span class="type">NSPredicate</span>.<span class="keyword">init</span>(format: <span class="string">"SELF MATCHES %@"</span>, strNum1)</span><br><span class="line">        <span class="keyword">let</span> isPhone1 = checktest1.evaluate(with: <span class="keyword">self</span>)</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> isPhone || isPhone1 &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">Array</span></span>&#123;</span><br><span class="line">    <span class="comment">//MARK: 数组转JSON字符串</span></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">arrayToString</span><span class="params">()</span></span> -&gt; <span class="type">String?</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> data = <span class="keyword">try</span>? <span class="type">JSONSerialization</span>.data(withJSONObject: <span class="keyword">self</span>, options: <span class="type">JSONSerialization</span>.<span class="type">WritingOptions</span>.<span class="keyword">init</span>(rawValue: <span class="number">0</span>)) &#123;</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">let</span> jsonStr = <span class="type">String</span>.<span class="keyword">init</span>(data: data, encoding: <span class="type">String</span>.<span class="type">Encoding</span>.utf8) &#123;</span><br><span class="line">                <span class="keyword">return</span> jsonStr</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Swift </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Swift Method </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SWIFT关键字</title>
      <link href="/2019/06/06/SWIFT%E5%85%B3%E9%94%AE%E5%AD%97/"/>
      <url>/2019/06/06/SWIFT%E5%85%B3%E9%94%AE%E5%AD%97/</url>
      
        <content type="html"><![CDATA[<h4 id="discardableResult"><a href="#discardableResult" class="headerlink" title="@discardableResult"></a>@discardableResult</h4><blockquote><p>修饰的方法有返回值，调用时可以不接收返回值，并且不会出现警告⚠️</p></blockquote><h4 id="IBInspectable"><a href="#IBInspectable" class="headerlink" title="IBInspectable"></a>IBInspectable</h4><blockquote><p>属性声明的时候加上 IBInspectable 修饰，Xcode 会自动添加到 Storyboard 中 Attributes inspector 栏目中</p></blockquote><h4 id="typealias"><a href="#typealias" class="headerlink" title="typealias"></a>typealias</h4><blockquote><p>定义了一个类型别名</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Swift </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Swift关键字 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
